\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 18 13:47:02 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Mar 18 13:47:02 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "6" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))
(keyLog "7" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))

(autoModeTime "163479")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "data,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(builtin "One Step Simplification" (formula "15"))
(rule "assignment" (formula "15") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "15"))
(rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_processBallots,savedHeapBefore_processBallots") (userinteraction))
(builtin "One Step Simplification" (formula "15"))
(rule "variableDeclarationAssign" (formula "15") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "ballotsAsAMessage") (userinteraction))
(builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_checkAndGetBallots,result_0,exc_0") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::checkAndGetBallots([B)].JML normal_behavior operation contract.0"))
(branch "Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
   (builtin "One Step Simplification" (formula "16"))
   (rule "assignment" (formula "16") (term "1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "16") (term "1,1") (userinteraction))
   (rule "variableDeclaration" (formula "16") (term "1,1") (newnames "entr_arr") (userinteraction))
   (builtin "One Step Simplification" (formula "16"))
   (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_extractBallots,result_1,exc_1") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::extractBallots([B)].JML normal_behavior operation contract.0"))
   (branch "Post (extractBallots)"
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "9")))
      (builtin "One Step Simplification" (formula "17"))
      (rule "assignment" (formula "17") (term "1") (userinteraction))
      (builtin "One Step Simplification" (formula "17"))
      (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_sort,result_2,exc_2,heapAfter_sort,anon_heap_sort") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::sort([[B)].JML normal_behavior operation contract.0"))
      (branch "Post (sort)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "assignment" (formula "19") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "19"))
         (builtin "Block Contract" (formula "19") (newnames "anon_heap,result_3,exc_3,heap_Before_BLOCK,savedHeap_Before_BLOCK,entr_arr_Before_BLOCK,o,f,anon_entr_arr"))
         (branch "Validity"
            (rule "variableDeclarationAssign" (formula "20") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclaration" (formula "20") (term "1") (userinteraction))
            (rule "assignment" (formula "20") (term "1") (userinteraction))
            (builtin "One Step Simplification" (formula "20"))
            (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_retrieveSortedMessages,result_4,exc_4,heapAfter_retrieveSortedMessages,anon_heap_retrieveSortedMessages") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::retrieveSortedMessages()].JML normal_behavior operation contract.0"))
            (branch "Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "assignment" (formula "22") (term "1") (userinteraction))
               (rule "tryEmpty" (formula "22") (term "1,1") (userinteraction))
               (rule "blockEmptyLabel" (formula "22") (term "1,1") (userinteraction))
               (rule "blockEmpty" (formula "22") (term "1,1") (userinteraction))
               (rule "methodCallEmpty" (formula "22") (term "1,1") (userinteraction))
               (rule "emptyModality" (formula "22") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "22"))
               (rule "andRight" (formula "22") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "22") (userinteraction))
                  (branch "Case 1"
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "26"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "13"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "14"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "22"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")) (ifInst ""  (formula "22")) (ifInst ""  (formula "19")))
                     (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "45") (term "0") (inst "i_0=i_0") (inst "i=i") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")) (ifInst ""  (formula "26")))
                        (rule "andRight" (formula "36") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "36") (userinteraction))
                           (branch "Case 1"
                              (opengoal " ")
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "36") (userinteraction))
                              (branch "Case 1"
                                 (rule "translateJavaSubInt" (formula "32") (term "1,1,0,0") (userinteraction))
                                 (rule "translateJavaAddInt" (formula "32") (term "0,2,2,0,1,0") (userinteraction))
                                 (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0") (userinteraction))
                                 (rule "translateJavaAddInt" (formula "36") (term "0,2,2,0,1,0") (userinteraction))
                                 (rule "allRight" (formula "36") (inst "sk=i_0_2") (userinteraction))
                                 (rule "impRight" (formula "36") (userinteraction))
                                 (rule "instAll" (formula "37") (term "0,2,1,0") (ifseqformula "33") (userinteraction))
                                 (rule "impLeft" (formula "1") (userinteraction))
                                 (branch "Case 1"
                                    (rule "close" (formula "37") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (builtin "Evaluate Query" (formula "1") (term "0") (newnames "a1,a2,callee,queryResult,res_compare"))
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "variableDeclaration" (formula "38") (term "1") (newnames "queryResult") (userinteraction))
                                    (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_compare,result_8,exc_8") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::compare([B,[B)].JML normal_behavior operation contract.0"))
                                    (branch "Post (compare)"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "assignment" (formula "39") (term "1") (userinteraction))
                                       (rule "methodCallEmpty" (formula "39") (term "1,1") (userinteraction))
                                       (rule "emptyModality" (formula "39") (term "1,1") (userinteraction))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notRight" (formula "39") (userinteraction))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "39") (userinteraction))
                                       (rule "andLeft" (formula "40") (userinteraction))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(add(i_0_2,Z(1(#))))))_101000000000_0" (formula "2") (term "0") (userinteraction))
                                       (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40") (userinteraction))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1") (userinteraction))
                                       (rule "closeAntec" (formula "2") (ifseqformula "41") (userinteraction))
                                    )
                                    (branch "Exceptional Post (compare)"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "8"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(add(i_0_2,Z(1(#))))))_101000000000_0" (formula "1") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "19"))
                                       (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "close" (formula "41") (ifseqformula "40"))
                                    )
                                    (branch "Pre (compare)"
                                       (builtin "One Step Simplification" (formula "9"))
                                       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "8"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_4,arr(add(i_0_2,Z(1(#))))))_101000000000_0" (formula "1") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,1") (ifseqformula "29"))
                                       (rule "wellFormedAnonEQ" (formula "37") (term "0,0,1") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1,0,1") (ifseqformula "29"))
                                       (rule "wellFormedAnonEQ" (formula "37") (term "0,0,0,1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,1,1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,1,0,1") (ifseqformula "19"))
                                       (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "22") (term "0,2,2,0,1,0"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "38") (term "1,0,0,0,1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "4")) (ifInst ""  (formula "29")))
                                       (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,2,2,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,2,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,2,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,0,0,1,1,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1,1,1,1"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1,0,1,1,1"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "39"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "17") (term "2,1") (ifseqformula "5") (ifseqformula "47"))
                                       (rule "array2seqDef" (formula "34") (term "0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "23") (term "2,1") (ifseqformula "29") (ifseqformula "42"))
                                       (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "5") (ifseqformula "42"))
                                       (rule "nonNull" (formula "38") (inst "i=i"))
                                       (rule "sub_literals" (formula "38") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "greater_literals" (formula "38") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "34") (term "1") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "34") (term "2,1") (ifseqformula "29") (ifseqformula "42"))
                                       (rule "array2seqDef" (formula "23") (term "0") (inst "u=u"))
                                       (rule "nonNull" (formula "18") (inst "i=i"))
                                       (rule "greater_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "43")))
                                       (rule "sub_literals" (formula "18") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "27") (inst "i=i"))
                                       (rule "greater_literals" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "narrowSelectArrayType" (formula "23") (term "2,0") (ifseqformula "29") (ifseqformula "39"))
                                       (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "39"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_13"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "25"))
                                       (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "25"))
                                       (rule "applyEq" (formula "35") (term "1,2,1") (ifseqformula "25"))
                                       (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "25"))
                                       (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "eqSymm" (formula "25") (term "0,0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "35") (term "0,1,1") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "35") (term "1,2,1") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_14"))
                                       (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "38") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet2101000000000_1" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_2" (formula "1") (term "2,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "15") (term "1,0,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "34") (term "1,2,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "46") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                       (rule "pullOutSelect" (formula "41") (term "1,0,0,0,1,0,1") (inst "selectSK=arr_1165"))
                                       (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "41") (term "0,0,1,1") (inst "selectSK=arr_1166"))
                                       (rule "applyEq" (formula "42") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_imp2or" (formula "35") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "27") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                       (rule "commute_or_2" (formula "33"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "7"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "nonNull" (formula "28") (inst "i=i"))
                                       (rule "greater_literals" (formula "28") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "31") (ifseqformula "41"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "26") (inst "i=i"))
                                       (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "greater_literals" (formula "26") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "31") (ifseqformula "41"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "27") (inst "i=i"))
                                       (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "greater_literals" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "31") (ifseqformula "41"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_16"))
                                       (rule "applyEq" (formula "29") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_16"))
                                       (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "27") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_16"))
                                       (rule "applyEq" (formula "28") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "12") (ifseqformula "7"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "notLeft" (formula "13"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "nonNull" (formula "14") (inst "i=i"))
                                       (rule "greater_literals" (formula "14") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "57")))
                                       (rule "sub_literals" (formula "14") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "57"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "12") (inst "i=i"))
                                       (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "44")))
                                       (rule "greater_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "44"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "13") (inst "i=i"))
                                       (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "43")))
                                       (rule "greater_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "43"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "30") (term "0"))
                                       (rule "nnf_imp2or" (formula "28") (term "0"))
                                       (rule "nnf_imp2or" (formula "29") (term "0"))
                                       (rule "commute_or_2" (formula "51") (term "1,0,1"))
                                       (rule "commute_or_2" (formula "10") (term "0"))
                                       (rule "commute_or_2" (formula "51") (term "1,1,1"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "31") (term "0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or_2" (formula "27") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                       (rule "arrayLengthIsAShort" (formula "27") (term "1,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "arrayLengthNotNegative" (formula "27") (term "1,1"))
                                       (rule "arrayLengthNotNegative" (formula "28") (term "1,0"))
                                       (rule "arrayLengthIsAShort" (formula "29") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "cut_direct" (formula "26") (term "0"))
                                       (branch "CUT: result_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1"))
                                          (rule "shift_paren_or" (formula "55") (term "1,1"))
                                          (rule "commute_or_2" (formula "33") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "35") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: result_4.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "commute_or" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "32") (term "0,0"))
                                             (rule "commute_or" (formula "33") (term "0,0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "13") (term "0,0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "shift_paren_or" (formula "54") (term "0,0,1"))
                                             (rule "shift_paren_or" (formula "54") (term "0,1,1"))
                                             (rule "shift_paren_and" (formula "54"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0_2"))
                                             (rule "replaceKnownSelect_taclet2101000000000_7" (formula "43") (term "2,0,1"))
                                             (rule "replaceKnownSelect_taclet2101000000000_5" (formula "43") (term "1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_8" (formula "43") (term "2,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_6" (formula "43") (term "1,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "allLeft" (formula "47") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1171"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "38") (ifseqformula "56"))
                                             (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "48")))
                                             (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1172"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "38") (ifseqformula "57"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "48")))
                                             (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "replaceKnownSelect_taclet2101000000000_7" (formula "46") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_8" (formula "46") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "allLeft" (formula "18") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "31") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1173"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "42")))
                                             (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "32") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_1174"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "43")))
                                             (rule "allLeft" (formula "48") (inst "t=i_0_2"))
                                             (rule "replaceKnownSelect_taclet2101000000000_5" (formula "48") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_6" (formula "48") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "48"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "2,0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "65") (term "1,0,1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "orRight" (formula "65"))
                                             (rule "orRight" (formula "65"))
                                             (rule "referencedObjectIsCreatedRight" (formula "66") (ifseqformula "56"))
                                             (rule "close" (formula "66") (ifseqformula "41"))
                                          )
                                          (branch "CUT: result_4.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "44") (ifseqformula "55"))
                                             (rule "close" (formula "47") (ifseqformula "6"))
                                          )
                                       )
                                       (branch "CUT: result_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "32") (term "0"))
                                          (rule "shift_paren_or" (formula "56") (term "0,1"))
                                          (rule "shift_paren_or" (formula "56") (term "1,1"))
                                          (rule "commute_or_2" (formula "33") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "35") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: result_4.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "commute_or" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "32") (term "0,0"))
                                             (rule "commute_or" (formula "33") (term "0,0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "13") (term "0,0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "shift_paren_or" (formula "55") (term "0,0,1"))
                                             (rule "shift_paren_or" (formula "55") (term "0,1,1"))
                                             (rule "shift_paren_and" (formula "55"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0_2"))
                                             (rule "replaceKnownSelect_taclet2101000000000_5" (formula "43") (term "1,0,1"))
                                             (rule "replaceKnownSelect_taclet2101000000000_7" (formula "43") (term "2,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_6" (formula "43") (term "1,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_8" (formula "43") (term "2,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "allLeft" (formula "47") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1167"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "38") (ifseqformula "57"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,1,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "48")))
                                             (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1168"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "38") (ifseqformula "58"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "48")))
                                             (rule "allLeft" (formula "18") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "31") (inst "t=i_0_2"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1169"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "42")))
                                             (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "replaceKnownSelect_taclet2101000000000_7" (formula "47") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_8" (formula "47") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_1170"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "43")))
                                             (rule "allLeft" (formula "48") (inst "t=i_0_2"))
                                             (rule "replaceKnownSelect_taclet2101000000000_5" (formula "48") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2101000000000_6" (formula "48") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0_2)"))
                                             (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                             (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                             (rule "leq_literals" (formula "20") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "20") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "48"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "2,0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "66") (term "1,0,1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "orRight" (formula "66"))
                                             (rule "orRight" (formula "66"))
                                             (rule "referencedObjectIsCreatedRight" (formula "67") (ifseqformula "56"))
                                             (rule "close" (formula "67") (ifseqformula "41"))
                                          )
                                          (branch "CUT: result_4.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "44") (ifseqformula "56"))
                                             (rule "close" (formula "47") (ifseqformula "6"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "36") (userinteraction))
                                 (branch "Case 1"
                                    (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0") (userinteraction))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,2,2,0,1,0") (userinteraction))
                                    (rule "allRight" (formula "36") (inst "sk=i_101") (userinteraction))
                                    (rule "impRight" (formula "36") (userinteraction))
                                    (rule "andLeft" (formula "1") (userinteraction))
                                    (rule "translateJavaSubInt" (formula "23") (term "1,1,0,0") (userinteraction))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,2,2,0,1,0") (userinteraction))
                                    (rule "instAll" (formula "2") (term "0") (ifseqformula "23") (userinteraction))
                                    (rule "impLeft" (formula "2") (userinteraction))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "9"))
                                       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
                                       (rule "true_left" (formula "8"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1") (ifseqformula "19"))
                                       (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "2")))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                    (branch "Case 2"
                                       (builtin "Evaluate Query" (formula "39") (term "0") (newnames "a1_0,a2_0,callee,queryResult_0,res_compare_0"))
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "variableDeclaration" (formula "39") (term "1") (newnames "queryResult_0") (userinteraction))
                                       (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_compare_0,result_9,exc_9") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                       (branch "Post (compare)"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "assignment" (formula "40") (term "1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "methodCallEmpty" (formula "40") (term "1") (userinteraction))
                                          (rule "emptyModality" (formula "40") (term "1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40") (userinteraction))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#))))))_1011000000000_0" (formula "41") (term "0") (userinteraction))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1") (userinteraction))
                                          (rule "replace_known_right" (formula "40") (term "1,0,1") (ifseqformula "41") (userinteraction))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "andLeft" (formula "40") (userinteraction))
                                          (rule "andLeft" (formula "41") (userinteraction))
                                          (rule "notLeft" (formula "41") (userinteraction))
                                          (rule "orRight" (formula "41") (userinteraction))
                                          (builtin "Evaluate Query" (formula "3") (term "0") (newnames "a1_1,a2_1,callee,queryResult_1,res_compare_1"))
                                          (rule "notLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclaration" (formula "41") (term "1") (newnames "queryResult_1") (userinteraction))
                                          (builtin "Use Operation Contract" (formula "41") (newnames "heapBefore_compare_1,result_10,exc_10") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                          (branch "Post (compare)"
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_101)),byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#))))))_01011000000000_1" (formula "3") (term "0") (userinteraction))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "assignment" (formula "42") (term "1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "methodCallEmpty" (formula "42") (term "1") (userinteraction))
                                             (rule "emptyModality" (formula "42") (term "1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42") (userinteraction))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "1") (userinteraction))
                                             (rule "replace_known_left" (formula "42") (term "1,0,1") (ifseqformula "4") (userinteraction))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "andLeft" (formula "43"))
                                             (builtin "Evaluate Query" (formula "43") (term "1,1,0,0,0,1") (newnames "a,b,callee,queryResult_2,res_min"))
                                             (rule "notLeft" (formula "1") (userinteraction))
                                             (rule "variableDeclaration" (formula "44") (term "1") (newnames "queryResult_2") (userinteraction))
                                             (builtin "Use Operation Contract" (formula "44") (newnames "heapBefore_min,result_5,exc_5") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                             (branch "Post (min)"
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "assignment" (formula "45") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "methodCallEmpty" (formula "45") (term "1") (userinteraction))
                                                (rule "emptyModality" (formula "45") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "notRight" (formula "45") (userinteraction))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_101))),length(byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#)))))))_001011000000000_2" (formula "44") (term "1,1,0,0,0") (userinteraction))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_101))),length(byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#)))))))_001011000000000_2" (formula "44") (term "1,1,0,0,0,1") (userinteraction))
                                                (builtin "Evaluate Query" (formula "48") (term "1,1,0,0") (newnames "a_0,b_0,callee,queryResult_3,res_min_0"))
                                                (rule "notLeft" (formula "1") (userinteraction))
                                                (rule "variableDeclaration" (formula "48") (term "1") (newnames "queryResult_3") (userinteraction))
                                                (builtin "Use Operation Contract" (formula "48") (newnames "heapBefore_min_0,result_6,exc_6") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                                (branch "Post (min)"
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "assignment" (formula "49") (term "1") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "methodCallEmpty" (formula "49") (term "1") (userinteraction))
                                                   (rule "emptyModality" (formula "49") (term "1") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "notRight" (formula "49") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "andLeft" (formula "50"))
                                                   (rule "andLeft" (formula "50"))
                                                   (opengoal " ")
                                                )
                                                (branch "Exceptional Post (min)"
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1") (ifseqformula "33"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "33"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0") (ifseqformula "23"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#)))))))_0001011000000000_3" (formula "49") (term "1,1,0,0"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#)))))))_0001011000000000_3" (formula "50") (term "1,1,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0"))
                                                   (rule "andLeft" (formula "47"))
                                                   (rule "andLeft" (formula "48"))
                                                   (rule "andLeft" (formula "47"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "close" (formula "51") (ifseqformula "50"))
                                                )
                                                (branch "Pre (min)"
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "wellFormedAnonEQ" (formula "47") (ifseqformula "33"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1") (ifseqformula "33"))
                                                   (rule "wellFormedAnonEQ" (formula "47") (term "0") (ifseqformula "23"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1") (ifseqformula "23"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#)))))))_0001011000000000_3" (formula "48") (term "1,1,0,0"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#)))))))_0001011000000000_3" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0"))
                                                   (rule "eqSymm" (formula "46") (term "0,1"))
                                                   (rule "eqSymm" (formula "46") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "48") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "43") (term "1,0,0,1"))
                                                   (rule "eqSymm" (formula "43") (term "1,0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "eqSymm" (formula "45") (term "1"))
                                                   (rule "eqSymm" (formula "49") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "22")) (ifInst ""  (formula "32")))
                                                   (rule "closeTrue" (formula "47"))
                                                )
                                             )
                                             (branch "Exceptional Post (min)"
                                                (builtin "One Step Simplification" (formula "44"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "11"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "22"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1") (ifseqformula "32"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1") (ifseqformula "22"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "22"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_101))),length(byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#)))))))_001011000000000_2" (formula "42") (term "1,1,0,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_101))),length(byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#)))))))_001011000000000_2" (formula "42") (term "1,1,0,0,0,1"))
                                                (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "36") (term "0,2,2,0,1,0"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "close" (formula "46") (ifseqformula "45"))
                                             )
                                             (branch "Pre (min)"
                                                (builtin "One Step Simplification" (formula "12"))
                                                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
                                                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "31")))
                                                (rule "closeTrue" (formula "44"))
                                             )
                                          )
                                          (branch "Exceptional Post (compare)"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "16")))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "10"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_101)),byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#))))))_01011000000000_1" (formula "3") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1") (ifseqformula "31"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "21"))
                                             (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "35") (term "0,2,2,0,1,0"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "andLeft" (formula "41"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "notLeft" (formula "40"))
                                             (rule "close" (formula "43") (ifseqformula "42"))
                                          )
                                          (branch "Pre (compare)"
                                             (builtin "One Step Simplification" (formula "11"))
                                             (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "16")))
                                             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "30")))
                                             (rule "true_left" (formula "10"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_101)),byte[]_select(heapAfter_sort,result_2,arr(add(i_101,Z(1(#))))))_01011000000000_1" (formula "3") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1") (ifseqformula "31"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1,1") (ifseqformula "21"))
                                             (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "35") (term "0,2,2,0,1,0"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "eqSymm" (formula "41") (term "1,0,1,1,0"))
                                             (rule "eqSymm" (formula "42") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,2,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,2,0,2,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,2,1,1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0,2,0,2,1,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,2,1,0,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,2,1,0,1,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "35") (term "0,2,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,2,1,0,1,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0,2,1,0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "1"))
                                             (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "43"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "1"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "nonNull" (formula "19") (inst "i=i"))
                                             (rule "greater_literals" (formula "19") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "46")))
                                             (rule "sub_literals" (formula "19") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "46"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "35") (term "1") (inst "u=u"))
                                             (rule "narrowSelectArrayType" (formula "35") (term "2,1") (ifseqformula "30") (ifseqformula "45"))
                                             (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                                             (rule "narrowSelectArrayType" (formula "18") (term "2,0") (ifseqformula "6") (ifseqformula "46"))
                                             (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                                             (rule "nonNull" (formula "28") (inst "i=i"))
                                             (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "greater_literals" (formula "28") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "notLeft" (formula "28"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "2,0") (ifseqformula "30") (ifseqformula "41"))
                                             (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "30") (ifseqformula "41"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                                             (rule "narrowSelectArrayType" (formula "24") (term "2,1") (ifseqformula "30") (ifseqformula "47"))
                                             (rule "nonNull" (formula "39") (inst "i=i"))
                                             (rule "greater_literals" (formula "39") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "notLeft" (formula "39"))
                                             (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                                             (rule "narrowSelectArrayType" (formula "18") (term "2,1") (ifseqformula "6") (ifseqformula "53"))
                                             (rule "array2seqDef" (formula "35") (term "0") (inst "u=u"))
                                             (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_18"))
                                             (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "36") (term "1,2,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "26"))
                                             (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "eqSymm" (formula "26") (term "0,0"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "36") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "36") (term "1,2,1") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_19"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                             (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "replaceKnownSelect_taclet201011000000000_2" (formula "38") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_3" (formula "38") (term "2,0"))
                                             (rule "eqSymm" (formula "38") (term "0,0"))
                                             (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "50") (term "1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "16") (term "1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "35") (term "1,2,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                                             (rule "pullOutSelect" (formula "43") (term "0,0,0,0") (inst "selectSK=arr_1482"))
                                             (rule "applyEq" (formula "44") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "44") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "44") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "pullOutSelect" (formula "45") (term "1,1,1,0,1,1,0") (inst "selectSK=arr_1483"))
                                             (rule "applyEq" (formula "47") (term "0,1,1,1,1,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "46") (term "1,1,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "46") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "47") (term "1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "47") (term "0,1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                             (rule "replaceKnownSelect_taclet201011000000000_6" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "45") (term "0,0,1,0") (inst "selectSK=arr_1484"))
                                             (rule "applyEq" (formula "46") (term "0,0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "46") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "46") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                             (rule "pullOutSelect" (formula "47") (term "1,0,1,0,1,1,0") (inst "selectSK=arr_1485"))
                                             (rule "applyEq" (formula "49") (term "0,2,1,1,1,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "0,2,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                             (rule "replaceKnownSelect_taclet201011000000000_8" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "nnf_imp2or" (formula "15") (term "0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "23") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0"))
                                             (rule "nnf_ex2all" (formula "48"))
                                             (rule "nnf_imp2or" (formula "21") (term "0"))
                                             (rule "nnf_imp2or" (formula "43") (term "0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_imp2or" (formula "49") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "49") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "39"))
                                             (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                             (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "13"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "nonNull" (formula "20") (inst "i=i"))
                                             (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "61")))
                                             (rule "greater_literals" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "61"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "19") (inst "i=i"))
                                             (rule "greater_literals" (formula "19") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "48"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "18") (inst "i=i"))
                                             (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "greater_literals" (formula "18") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "48"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "34") (ifseqformula "13"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "notLeft" (formula "36"))
                                             (rule "notLeft" (formula "35"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "notLeft" (formula "35"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "notLeft" (formula "36"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "nonNull" (formula "36") (inst "i=i"))
                                             (rule "greater_literals" (formula "36") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "sub_literals" (formula "36") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "andLeft" (formula "36"))
                                             (rule "notLeft" (formula "36"))
                                             (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0") (ifseqformula "39") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "35") (inst "i=i"))
                                             (rule "sub_literals" (formula "35") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "greater_literals" (formula "35") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "notLeft" (formula "35"))
                                             (rule "narrowSelectArrayType" (formula "35") (term "0,0,1,0") (ifseqformula "39") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "34") (inst "i=i"))
                                             (rule "sub_literals" (formula "34") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "greater_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "notLeft" (formula "34"))
                                             (rule "narrowSelectArrayType" (formula "34") (term "0,0,1,0") (ifseqformula "39") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                             (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                             (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "66"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                             (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_19"))
                                             (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_19"))
                                             (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "36") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_19"))
                                             (rule "applyEq" (formula "35") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "13")))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                             (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "shift_paren_or" (formula "58") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                             (rule "shift_paren_or" (formula "57") (term "1,1"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or_2" (formula "25") (term "0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "nnf_imp2or" (formula "35") (term "0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "22") (term "0"))
                                             (rule "nnf_imp2or" (formula "33") (term "0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "32") (term "0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "25") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "26") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "cut_direct" (formula "31") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "5") (term "0,1,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "arrayLengthNotNegative" (formula "26") (term "1,1"))
                                                (rule "arrayLengthIsAShort" (formula "27") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "46") (term "1,0"))
                                                (rule "arrayLengthIsAShort" (formula "47") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "arrayLengthNotNegative" (formula "62") (term "1,1"))
                                                (rule "arrayLengthIsAShort" (formula "63") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "arrayLengthNotNegative" (formula "63") (term "0,1"))
                                                (rule "arrayLengthIsAShort" (formula "64") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "ex_pull_out3" (formula "3") (term "1,0"))
                                                (rule "commute_or_2" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "41") (term "0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0"))
                                                (rule "commute_or" (formula "53") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "shift_paren_and" (formula "63"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "cut_direct" (formula "47") (term "0,0"))
                                                (branch "CUT: result_4.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "commute_or" (formula "22") (term "0,0"))
                                                   (rule "commute_or" (formula "21") (term "0,0"))
                                                   (rule "commute_or" (formula "40") (term "0,0"))
                                                   (rule "commute_or" (formula "39") (term "0,0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                                                   (rule "commute_or" (formula "3") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                                                   (rule "ex_pull_out3" (formula "3") (term "0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                   (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                   (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                   (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "result_2 = result_1 TRUE"
                                                      (rule "applyEqReverse" (formula "64") (term "1,0,1,1") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0,1,0,1") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,0,1,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,0,0,1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0,1,0,1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0,1,1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,0,1,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "62") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "62") (term "1,1,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "35") (term "1,2,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "60") (term "1,1,0,1,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "60") (term "1,0,0,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "1,1,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "59") (term "1,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "67") (term "3,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "59") (term "1,0,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "59") (term "1,1,0,1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "59") (term "1,1,0,1,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "5"))
                                                      (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "66") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "67")))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "42"))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "32"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "51") (term "1,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "12")) (ifInst ""  (formula "30")))
                                                      (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "0,2,2,0,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "0,2,2,0,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "nonNull" (formula "51") (term "0,1,1,1") (inst "i=i"))
                                                      (rule "greater_literals" (formula "51") (term "0,1,0,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "58")))
                                                      (rule "sub_literals" (formula "51") (term "2,1,0,0,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,1,1"))
                                                      (rule "nonNull" (formula "51") (term "1,1,1,1") (inst "i=i"))
                                                      (rule "sub_literals" (formula "51") (term "2,1,0,1,1,1,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")))
                                                      (rule "greater_literals" (formula "51") (term "0,1,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1,1,1"))
                                                      (rule "nnf_imp2or" (formula "51") (term "0,0,1"))
                                                      (rule "nnf_imp2or" (formula "51") (term "0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "51") (term "0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1"))
                                                      (rule "nnf_imp2or" (formula "51") (term "0,0,1,1,1"))
                                                      (rule "nnf_imp2or" (formula "51") (term "0,1,1,1,1"))
                                                      (rule "nnf_notAnd" (formula "51") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,1,1"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "51") (term "0,0,0,1,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1,1,1"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,1,1,1"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1,1,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1,1,1"))
                                                      (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "nnf_notAnd" (formula "51") (term "0,0,1,1,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,1,1,1"))
                                                      (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,1,1,1"))
                                                      (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,1,1,1"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1,1,1,1"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "51") (term "1,0,0,0,1,1,1,1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "commute_and_2" (formula "3") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "result_4 = result_1 TRUE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "62") (term "0,2,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "62") (term "1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "62") (term "0,0,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "61") (term "1,1,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "61") (term "0,1,1") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "44") (term "1,2,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "45") (term "1,1,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "44") (term "1,2,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "64") (term "1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,1,0,1,0,0,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,0,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,0,0,1,0,0,1,1,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "46") (term "1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "47") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "23") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "47") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "42") (term "1,2,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "47") (term "0,1,1,0,0,0,1,1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "applyEq" (formula "47") (term "1,2,0,1,0,0") (ifseqformula "4"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "62") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "63")))
                                                         (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "40"))
                                                         (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "31"))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "29")) (ifInst ""  (formula "38")))
                                                         (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,1"))
                                                         (rule "nonNull" (formula "47") (term "1,1") (inst "i=i"))
                                                         (rule "sub_literals" (formula "47") (term "2,1,0,1,1,1,1"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "57")))
                                                         (rule "greater_literals" (formula "47") (term "0,1,1"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,1,1"))
                                                         (rule "nnf_imp2or" (formula "47") (term "0,0"))
                                                         (rule "nnf_imp2or" (formula "47") (term "0,0,1"))
                                                         (rule "nnf_imp2or" (formula "47") (term "0,1,1"))
                                                         (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "47") (term "0,0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,1"))
                                                         (rule "nnf_notAnd" (formula "47") (term "0,0,1,1"))
                                                         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,1"))
                                                         (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1,1"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,1"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,0,1,1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                         (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "44"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andRight" (formula "53"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "53") (inst "sk=i_0_10"))
                                                            (rule "orRight" (formula "53"))
                                                            (rule "orRight" (formula "53"))
                                                            (rule "inEqSimp_leqRight" (formula "55"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "54"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "55"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1691"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1692"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "19"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1693"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "58")))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_1694"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "68") (term "0,0,1") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "58")))
                                                            (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet00000201011000000000_34" (formula "42") (term "2,0,1"))
                                                            (rule "replaceKnownSelect_taclet00000201011000000000_32" (formula "42") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000201011000000000_35" (formula "42") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000201011000000000_33" (formula "42") (term "1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "commute_and" (formula "12") (term "0,0,0"))
                                                            (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                            (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1695"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "47"))
                                                            (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1696"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "47"))
                                                            (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1697"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "70")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1698"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "72")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "47") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1699"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "73")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1700"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "75")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet00000201011000000000_34" (formula "48") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000201011000000000_35" (formula "48") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "48") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "pullOutSelect" (formula "48") (term "2,0,1") (inst "selectSK=arr_1701"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEqReverse" (formula "49") (term "2,0,1") (ifseqformula "48"))
                                                            (rule "hideAuxiliaryEq" (formula "48"))
                                                            (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_10)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                            (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "62") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "62") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=arr_1702"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_0_10)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "43") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "43") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "notLeft" (formula "43"))
                                                            (rule "allLeft" (formula "62") (inst "t=i_0_10"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "62") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=arr_1703"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "43") (inst "t=i_0_10"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "43") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "notLeft" (formula "43"))
                                                            (rule "allLeft" (formula "49") (inst "t=i_0_10"))
                                                            (rule "replaceKnownSelect_taclet00000201011000000000_46" (formula "49") (term "2,0,1"))
                                                            (rule "replaceKnownSelect_taclet00000201011000000000_48" (formula "49") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000201011000000000_47" (formula "49") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000201011000000000_49" (formula "49") (term "1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "49") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "andRight" (formula "89"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "89"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "90") (ifseqformula "80"))
                                                               (rule "close" (formula "90") (ifseqformula "45"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "89"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "90") (ifseqformula "79"))
                                                               (rule "close" (formula "90") (ifseqformula "45"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "35") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "notLeft" (formula "35"))
                                                            (rule "allLeft" (formula "39") (inst "t=i_101"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_1668"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "applyEqReverse" (formula "40") (term "2,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=arr_1669"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet10000201011000000000_30" (formula "44") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000201011000000000_31" (formula "44") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "44") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "notLeft" (formula "44"))
                                                            (rule "replace_known_right" (formula "66") (term "0,0,1,0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "56")))
                                                            (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet10000201011000000000_28" (formula "44") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000201011000000000_29" (formula "44") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "16"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "44") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "notLeft" (formula "44"))
                                                            (rule "replace_known_right" (formula "67") (term "0,0,1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "56")))
                                                            (rule "andRight" (formula "60"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "60") (inst "sk=i_121"))
                                                               (rule "orRight" (formula "60"))
                                                               (rule "orRight" (formula "60"))
                                                               (rule "inEqSimp_leqRight" (formula "62"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "62"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "62"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1682"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1683"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "commute_and" (formula "12") (term "0,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                               (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "allLeft" (formula "45") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1684"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "66")) (ifInst ""  (formula "5")))
                                                               (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "46") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1685"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "69")) (ifInst ""  (formula "4")))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1686"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "72")) (ifInst ""  (formula "5")))
                                                               (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1687"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "77")) (ifInst ""  (formula "4")))
                                                               (rule "allLeft" (formula "60") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1688"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "28")))
                                                               (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                               (rule "hideAuxiliaryEq" (formula "60"))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1689"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "28")))
                                                               (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                               (rule "hideAuxiliaryEq" (formula "60"))
                                                               (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet10000201011000000000_28" (formula "49") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10000201011000000000_29" (formula "49") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "49") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "pullOutSelect" (formula "49") (term "2,0,1") (inst "selectSK=arr_1690"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "applyEqReverse" (formula "50") (term "2,0,1") (ifseqformula "49"))
                                                               (rule "hideAuxiliaryEq" (formula "49"))
                                                               (rule "andRight" (formula "84"))
                                                               (branch "Case 1"
                                                                  (rule "orRight" (formula "84"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "75"))
                                                                  (rule "close" (formula "85") (ifseqformula "46"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "orRight" (formula "84"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "74"))
                                                                  (rule "close" (formula "85") (ifseqformula "46"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "allRight" (formula "60") (inst "sk=i_120"))
                                                               (rule "orRight" (formula "60"))
                                                               (rule "notRight" (formula "61"))
                                                               (rule "orRight" (formula "61"))
                                                               (rule "inEqSimp_geqRight" (formula "62"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "62"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1670"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "71"))
                                                               (rule "commute_and" (formula "12") (term "0,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1671"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")) (ifInst ""  (formula "26")))
                                                               (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "hideAuxiliaryEq" (formula "48"))
                                                               (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1672"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")) (ifInst ""  (formula "26")))
                                                               (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "hideAuxiliaryEq" (formula "49"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "50")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "47") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1673"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "70")) (ifInst ""  (formula "5")))
                                                               (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1674"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "72")) (ifInst ""  (formula "5")))
                                                               (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1675"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "75")) (ifInst ""  (formula "4")))
                                                               (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1676"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "77")) (ifInst ""  (formula "4")))
                                                               (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet10000201011000000000_28" (formula "47") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10000201011000000000_29" (formula "47") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1677"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "allLeft" (formula "69") (inst "t=i_101"))
                                                               (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "69") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "69") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "69") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "69") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "69") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "69") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "69") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0"))
                                                               (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "69") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "69") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "2,0") (inst "selectSK=arr_1678"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "applyEqReverse" (formula "70") (term "2,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "1,0") (inst "selectSK=arr_1679"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "allLeft" (formula "73") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                                               (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "73") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "73") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "notLeft" (formula "73"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_1680"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "65") (ifseqformula "88"))
                                                               (rule "allLeft" (formula "73") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "73") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "73") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "73") (term "0,1,0"))
                                                               (rule "add_literals" (formula "73") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "73") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "73") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "73") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "73") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "73") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "73") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                                               (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "73") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "73") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "notLeft" (formula "73"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_1681"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "65") (ifseqformula "89"))
                                                               (rule "allLeft" (formula "73") (inst "t=i_120"))
                                                               (rule "replaceKnownSelect_taclet110000201011000000000_32" (formula "73") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000201011000000000_33" (formula "73") (term "0,0,0,0"))
                                                               (rule "narrowSelectArrayType" (formula "73") (term "0,0,0,0") (ifseqformula "65") (ifseqformula "90"))
                                                               (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                                               (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "73") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "73") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "inEqSimp_contradInEq1" (formula "73") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "73") (term "0"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "closeFalse" (formula "73"))
                                                            )
                                                         )
                                                      )
                                                      (branch "result_4 = result_1 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "62") (term "1,0,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "62") (term "0,2,1,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "62") (term "0,0,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "61") (term "0,1,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "61") (term "1,1,1,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                                         (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "47"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "pullOutSelect" (formula "53") (term "2,0,1") (inst "selectSK=arr_1522"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEqReverse" (formula "54") (term "2,0,1") (ifseqformula "53"))
                                                         (rule "hideAuxiliaryEq" (formula "53"))
                                                         (rule "pullOutSelect" (formula "53") (term "1,0,1") (inst "selectSK=arr_1523"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEqReverse" (formula "54") (term "1,0,1") (ifseqformula "53"))
                                                         (rule "hideAuxiliaryEq" (formula "53"))
                                                         (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "54") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "54") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "54") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "54") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                                         (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "54") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "pullOutSelect" (formula "54") (term "2,0,1") (inst "selectSK=arr_1524"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEqReverse" (formula "55") (term "2,0,1") (ifseqformula "54"))
                                                         (rule "hideAuxiliaryEq" (formula "54"))
                                                         (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "35") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "35") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "35") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "35") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1525"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "60")))
                                                         (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_1526"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "73") (term "0,0,1") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "60")))
                                                         (rule "allLeft" (formula "39") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet1000201011000000000_34" (formula "39") (term "1,0,1"))
                                                         (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "39") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_35" (formula "39") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "39") (term "2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "cut_direct" (formula "66") (term "0"))
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_4), array2seq2d(heapAfter_retrieveSortedMessages, result_1)) TRUE"
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "commute_and" (formula "10") (term "0,0,0"))
                                                            (rule "andRight" (formula "67"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "67") (inst "sk=i_0_9"))
                                                               (rule "orRight" (formula "67"))
                                                               (rule "orRight" (formula "67"))
                                                               (rule "inEqSimp_leqRight" (formula "69"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "69"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "69"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1639"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1640"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "arrayLengthIsAShort" (formula "78") (term "2,1,1,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "arrayLengthNotNegative" (formula "78") (term "2,1,1,0,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "cut_direct" (formula "58") (term "0"))
                                                               (branch "CUT: result_4.length <= 1 + i_101 TRUE"
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "true_left" (formula "59"))
                                                                  (rule "inEqSimp_subsumption0" (formula "59") (term "0") (ifseqformula "58"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "59") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "true_left" (formula "59"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "58"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "59"))
                                                                  (rule "times_zero_1" (formula "57") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "57") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                  (rule "mul_literals" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                  (rule "leq_literals" (formula "57") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "true_left" (formula "57"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "allLeft" (formula "66") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "66") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "66") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1659"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "76")) (ifInst ""  (formula "83")) (ifInst ""  (formula "62")))
                                                                  (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                                  (rule "hideAuxiliaryEq" (formula "50"))
                                                                  (rule "allLeft" (formula "51") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1660"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "77")) (ifInst ""  (formula "6")))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_1661"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "narrowSelectArrayType" (formula "70") (term "0,0,0") (ifseqformula "59") (ifseqformula "84"))
                                                                  (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1662"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "80")) (ifInst ""  (formula "6")))
                                                                  (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1663"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "98")) (ifInst ""  (formula "29")))
                                                                  (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_1664"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "100")) (ifInst ""  (formula "29")))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_1665"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "89")) (ifInst ""  (formula "7")))
                                                                  (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_1666"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "91")) (ifInst ""  (formula "7")))
                                                                  (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "52") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "52") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "18"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "2,0,1") (inst "selectSK=arr_1667"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "applyEqReverse" (formula "53") (term "2,0,1") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "andRight" (formula "98"))
                                                                  (branch "Case 1"
                                                                     (rule "orRight" (formula "98"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "87"))
                                                                     (rule "close" (formula "99") (ifseqformula "49"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "orRight" (formula "98"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "86"))
                                                                     (rule "close" (formula "99") (ifseqformula "49"))
                                                                  )
                                                               )
                                                               (branch "CUT: result_4.length <= 1 + i_101 FALSE"
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "inEqSimp_leqRight" (formula "65"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "60") (term "0"))
                                                                  (branch "CUT: result_4.length <= 2 + i_101 TRUE"
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "true_left" (formula "61"))
                                                                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "60"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "61"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                                                                     (rule "add_literals" (formula "61") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "61") (term "0"))
                                                                     (rule "qeq_literals" (formula "61"))
                                                                     (rule "true_left" (formula "61"))
                                                                     (rule "applyEq" (formula "61") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "1,1,0,0"))
                                                                     (rule "add_literals" (formula "61") (term "0,1,1,0,0"))
                                                                     (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "4") (term "0,0"))
                                                                     (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                     (rule "mul_literals" (formula "57") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "57") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "true_left" (formula "57"))
                                                                     (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1652"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "72")) (ifInst ""  (formula "7")))
                                                                     (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1653"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                     (rule "allLeft" (formula "47") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1654"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "75")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1655"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "77")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "allLeft" (formula "58") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1656"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "94")) (ifInst ""  (formula "27")))
                                                                     (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_1657"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "98")) (ifInst ""  (formula "27")))
                                                                     (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1658"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                     (rule "hideAuxiliaryEq" (formula "51"))
                                                                     (rule "andRight" (formula "95"))
                                                                     (branch "Case 1"
                                                                        (rule "orRight" (formula "95"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "84"))
                                                                        (rule "close" (formula "96") (ifseqformula "48"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "orRight" (formula "95"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "83"))
                                                                        (rule "close" (formula "96") (ifseqformula "48"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result_4.length <= 2 + i_101 FALSE"
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "inEqSimp_leqRight" (formula "66"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "2") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "35") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "64") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "64") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "notLeft" (formula "64"))
                                                                     (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_1641"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "66") (term "0") (ifseqformula "53") (ifseqformula "80"))
                                                                     (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1642"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                                                     (rule "allLeft" (formula "51") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1643"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "92")) (ifInst ""  (formula "27")))
                                                                     (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1644"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "94")) (ifInst ""  (formula "27")))
                                                                     (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "allLeft" (formula "70") (inst "t=i_101"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "70") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "70") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "notLeft" (formula "70"))
                                                                     (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1645"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "87")) (ifInst ""  (formula "7")))
                                                                     (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "49") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "notLeft" (formula "49"))
                                                                     (rule "pullOutSelect" (formula "77") (term "0") (inst "selectSK=arr_1646"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "94")) (ifInst ""  (formula "68")))
                                                                     (rule "applyEqReverse" (formula "78") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1647"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "88")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1648"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "90")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "49") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "49") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "notLeft" (formula "49"))
                                                                     (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_1649"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "98")) (ifInst ""  (formula "72")))
                                                                     (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "allLeft" (formula "79") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "79") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "79") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "notLeft" (formula "79"))
                                                                     (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_1650"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "narrowSelectArrayType" (formula "81") (term "0") (ifseqformula "68") (ifseqformula "97"))
                                                                     (rule "allLeft" (formula "78") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "78") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "78") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "78") (term "0,0,0") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "true_left" (formula "78"))
                                                                     (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1651"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                     (rule "hideAuxiliaryEq" (formula "51"))
                                                                     (rule "andRight" (formula "101"))
                                                                     (branch "Case 1"
                                                                        (rule "orRight" (formula "101"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "90"))
                                                                        (rule "close" (formula "102") (ifseqformula "48"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "orRight" (formula "101"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "89"))
                                                                        (rule "close" (formula "102") (ifseqformula "48"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "67"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "67") (inst "sk=i_119"))
                                                                  (rule "orRight" (formula "67"))
                                                                  (rule "orRight" (formula "67"))
                                                                  (rule "inEqSimp_leqRight" (formula "69"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "69"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "69"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1610"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "43"))
                                                                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1611"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "43"))
                                                                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "arrayLengthNotNegative" (formula "78") (term "2,1,1,0,0,0"))
                                                                  (rule "arrayLengthIsAShort" (formula "78") (term "2,1,1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "arrayLengthNotNegative" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                  (rule "cut_direct" (formula "58") (term "0"))
                                                                  (branch "CUT: result_4.length <= 1 + i_101 TRUE"
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "true_left" (formula "59"))
                                                                     (rule "inEqSimp_subsumption0" (formula "59") (term "0") (ifseqformula "58"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "59") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "59") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "true_left" (formula "59"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "58"))
                                                                     (rule "mul_literals" (formula "56") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "56") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                                     (rule "mul_literals" (formula "56") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "17"))
                                                                     (rule "leq_literals" (formula "56") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "true_left" (formula "56"))
                                                                     (rule "allLeft" (formula "61") (inst "t=i_101"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "61") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "61") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "allLeft" (formula "46") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1630"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "72")) (ifInst ""  (formula "5")))
                                                                     (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1631"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "74")) (ifInst ""  (formula "5")))
                                                                     (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1632"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "90")) (ifInst ""  (formula "26")))
                                                                     (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1633"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "92")) (ifInst ""  (formula "26")))
                                                                     (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1634"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "85")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_1635"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "87")) (ifInst ""  (formula "6")))
                                                                     (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1636"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "87")) (ifInst ""  (formula "94")) (ifInst ""  (formula "73")))
                                                                     (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "hideAuxiliaryEq" (formula "49"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "allLeft" (formula "81") (inst "t=i_101"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "81") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "81"))
                                                                     (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=arr_1637"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "71"))
                                                                     (builtin "One Step Simplification" (formula "81"))
                                                                     (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "81"))
                                                                     (rule "hideAuxiliaryEq" (formula "81"))
                                                                     (rule "narrowSelectArrayType" (formula "81") (term "0,0,0") (ifseqformula "70") (ifseqformula "95"))
                                                                     (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                     (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1638"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                     (rule "hideAuxiliaryEq" (formula "51"))
                                                                     (rule "andRight" (formula "97"))
                                                                     (branch "Case 1"
                                                                        (rule "orRight" (formula "97"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "86"))
                                                                        (rule "close" (formula "98") (ifseqformula "48"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "orRight" (formula "97"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "85"))
                                                                        (rule "close" (formula "98") (ifseqformula "48"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result_4.length <= 1 + i_101 FALSE"
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "inEqSimp_leqRight" (formula "65"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "cut_direct" (formula "60") (term "0"))
                                                                     (branch "CUT: result_4.length <= 2 + i_101 TRUE"
                                                                        (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "true_left" (formula "61"))
                                                                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "60"))
                                                                        (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "61"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                                                                        (rule "add_literals" (formula "61") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "61") (term "0"))
                                                                        (rule "qeq_literals" (formula "61"))
                                                                        (rule "true_left" (formula "61"))
                                                                        (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "applyEq" (formula "60") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                        (rule "polySimp_addAssoc" (formula "60") (term "1,1,0,0"))
                                                                        (rule "add_literals" (formula "60") (term "0,1,1,0,0"))
                                                                        (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                        (rule "mul_literals" (formula "57") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                        (rule "leq_literals" (formula "57") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "true_left" (formula "57"))
                                                                        (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1623"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "73")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1624"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "75")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1625"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "80")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1626"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "83")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "63") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1627"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "99")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "65"))
                                                                        (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_1628"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "101")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1629"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                        (rule "hideAuxiliaryEq" (formula "51"))
                                                                        (rule "andRight" (formula "95"))
                                                                        (branch "Case 1"
                                                                           (rule "orRight" (formula "95"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "84"))
                                                                           (rule "close" (formula "96") (ifseqformula "48"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "orRight" (formula "95"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "83"))
                                                                           (rule "close" (formula "96") (ifseqformula "48"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result_4.length <= 2 + i_101 FALSE"
                                                                        (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "inEqSimp_leqRight" (formula "66"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "2") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "35") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "notLeft" (formula "35"))
                                                                        (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "allLeft" (formula "37") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "37") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "37") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "notLeft" (formula "37"))
                                                                        (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1612"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "77")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "68") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "68"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "68") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "68") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "68"))
                                                                        (rule "notLeft" (formula "68"))
                                                                        (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=arr_1613"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "narrowSelectArrayType" (formula "70") (term "0") (ifseqformula "57") (ifseqformula "84"))
                                                                        (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1614"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "82")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1615"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "84")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "allLeft" (formula "73") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "73") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "73") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "73") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "73") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "73") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "73") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "73") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "73") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "73") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1"))
                                                                        (rule "mul_literals" (formula "73") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "73") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "73") (term "0,0,0,1"))
                                                                        (rule "add_literals" (formula "73") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "73") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "73") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "73"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "73") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "73"))
                                                                        (rule "notLeft" (formula "73"))
                                                                        (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "50") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "notLeft" (formula "50"))
                                                                        (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_1616"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")) (ifInst ""  (formula "93")) (ifInst ""  (formula "67")))
                                                                        (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                                        (rule "add_literals" (formula "50") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "50") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "notLeft" (formula "50"))
                                                                        (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_1617"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")) (ifInst ""  (formula "93")) (ifInst ""  (formula "67")))
                                                                        (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "36"))
                                                                        (rule "allLeft" (formula "74") (inst "t=i_101"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "74") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "74") (term "0,0,0,0"))
                                                                        (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "79"))
                                                                        (builtin "One Step Simplification" (formula "74"))
                                                                        (rule "true_left" (formula "74"))
                                                                        (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "allLeft" (formula "76") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "76") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "76") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "76") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "76") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "76") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "76") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "76") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "76") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1"))
                                                                        (rule "mul_literals" (formula "76") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "76") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "76") (term "0,0,0,1"))
                                                                        (rule "add_literals" (formula "76") (term "0,0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                                                                        (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "76") (term "0,0,1"))
                                                                        (rule "leq_literals" (formula "76") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "notLeft" (formula "76"))
                                                                        (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_1618"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "narrowSelectArrayType" (formula "78") (term "0") (ifseqformula "65") (ifseqformula "94"))
                                                                        (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1619"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "89")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "63") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1620"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "105")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "65"))
                                                                        (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_1621"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "107")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1622"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                        (rule "hideAuxiliaryEq" (formula "51"))
                                                                        (rule "andRight" (formula "101"))
                                                                        (branch "Case 1"
                                                                           (rule "orRight" (formula "101"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "90"))
                                                                           (rule "close" (formula "102") (ifseqformula "48"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "orRight" (formula "101"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "89"))
                                                                           (rule "close" (formula "102") (ifseqformula "48"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "67"))
                                                                  (branch "Case 1"
                                                                     (rule "allRight" (formula "67") (inst "sk=i_118"))
                                                                     (rule "orRight" (formula "67"))
                                                                     (rule "orRight" (formula "67"))
                                                                     (rule "notRight" (formula "69"))
                                                                     (rule "inEqSimp_leqRight" (formula "68"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "69"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1582"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "52") (ifseqformula "76"))
                                                                     (rule "arrayLengthIsAShort" (formula "78") (term "2,1,1,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "arrayLengthNotNegative" (formula "78") (term "2,1,1,0,0,0"))
                                                                     (rule "arrayLengthNotNegative" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                     (rule "arrayLengthIsAShort" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "true_left" (formula "13"))
                                                                     (rule "cut_direct" (formula "58") (term "0"))
                                                                     (branch "CUT: result_4.length <= 1 + i_101 TRUE"
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "inEqSimp_subsumption0" (formula "59") (term "0") (ifseqformula "58"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "0,0,0"))
                                                                        (rule "qeq_literals" (formula "59") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "58"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "59"))
                                                                        (rule "mul_literals" (formula "57") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "57") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                        (rule "mul_literals" (formula "57") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                        (rule "leq_literals" (formula "57") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (rule "true_left" (formula "57"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                                        (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "3") (term "0"))
                                                                        (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1601"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "73")) (ifInst ""  (formula "80")) (ifInst ""  (formula "60")))
                                                                        (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                                        (rule "hideAuxiliaryEq" (formula "48"))
                                                                        (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1602"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "54"))
                                                                        (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1603"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "79")) (ifInst ""  (formula "7")))
                                                                        (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "allLeft" (formula "71") (inst "t=i_101"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "71") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "71") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "71"))
                                                                        (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1604"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "83")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1605"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "85")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "allLeft" (formula "64") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "64"))
                                                                        (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_1606"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "102")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "66") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                        (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_1607"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "104")) (ifInst ""  (formula "29")))
                                                                        (rule "allLeft" (formula "83") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "83") (term "1,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "83") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "83"))
                                                                        (rule "pullOutSelect" (formula "83") (term "0,0,0") (inst "selectSK=arr_1608"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "73"))
                                                                        (builtin "One Step Simplification" (formula "83"))
                                                                        (rule "applyEqReverse" (formula "84") (term "0,0,0") (ifseqformula "83"))
                                                                        (rule "hideAuxiliaryEq" (formula "83"))
                                                                        (rule "narrowSelectArrayType" (formula "83") (term "0,0,0") (ifseqformula "72") (ifseqformula "97"))
                                                                        (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "52") (term "1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "52") (term "1,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,2,2,0,1"))
                                                                        (rule "add_literals" (formula "52") (term "0,0,2,2,0,1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "52") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "18"))
                                                                        (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "pullOutSelect" (formula "52") (term "2,0,1") (inst "selectSK=arr_1609"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "applyEqReverse" (formula "53") (term "2,0,1") (ifseqformula "52"))
                                                                        (rule "hideAuxiliaryEq" (formula "52"))
                                                                        (rule "andRight" (formula "98"))
                                                                        (branch "Case 1"
                                                                           (rule "orRight" (formula "98"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "87"))
                                                                           (rule "close" (formula "99") (ifseqformula "49"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "orRight" (formula "98"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "86"))
                                                                           (rule "close" (formula "99") (ifseqformula "49"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result_4.length <= 1 + i_101 FALSE"
                                                                        (builtin "One Step Simplification" (formula "58"))
                                                                        (rule "inEqSimp_leqRight" (formula "65"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "cut_direct" (formula "60") (term "0"))
                                                                        (branch "CUT: result_4.length <= 2 + i_101 TRUE"
                                                                           (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "true_left" (formula "61"))
                                                                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "60"))
                                                                           (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "62") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "62") (term "1,1,0,0"))
                                                                           (rule "add_literals" (formula "62") (term "0,1,1,0,0"))
                                                                           (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "61"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                                                                           (rule "add_literals" (formula "61") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "61") (term "0"))
                                                                           (rule "qeq_literals" (formula "61"))
                                                                           (rule "true_left" (formula "61"))
                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "0"))
                                                                           (rule "leq_literals" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                           (rule "mul_literals" (formula "57") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                           (rule "leq_literals" (formula "57") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "true_left" (formula "57"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                           (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "19"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1594"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "72")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1595"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "74")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1596"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "55"))
                                                                           (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1597"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "79")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "58") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "58"))
                                                                           (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1598"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "94")) (ifInst ""  (formula "28")))
                                                                           (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "60"))
                                                                           (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1599"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "96")) (ifInst ""  (formula "28")))
                                                                           (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1600"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                           (rule "hideAuxiliaryEq" (formula "51"))
                                                                           (rule "andRight" (formula "95"))
                                                                           (branch "Case 1"
                                                                              (rule "orRight" (formula "95"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "84"))
                                                                              (rule "close" (formula "96") (ifseqformula "48"))
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "orRight" (formula "95"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "83"))
                                                                              (rule "close" (formula "96") (ifseqformula "48"))
                                                                           )
                                                                        )
                                                                        (branch "CUT: result_4.length <= 2 + i_101 FALSE"
                                                                           (builtin "One Step Simplification" (formula "60"))
                                                                           (rule "inEqSimp_leqRight" (formula "66"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "36") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "notLeft" (formula "36"))
                                                                           (rule "allLeft" (formula "64") (inst "t=i_101"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "64") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "64") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "64") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "64") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "notLeft" (formula "64"))
                                                                           (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1583"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "76")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1584"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "78")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "69") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "69") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "69") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "69") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                           (rule "notLeft" (formula "69"))
                                                                           (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_1585"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "58") (ifseqformula "85"))
                                                                           (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "68") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "68") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "68") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "68") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "68") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "68") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "68") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "68") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "68") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "68"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "68") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "68"))
                                                                           (rule "notLeft" (formula "68"))
                                                                           (rule "allLeft" (formula "69") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "69") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "69") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "69") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "69") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "69") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "69") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "69") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "69") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "69") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "69") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "69") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "69") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                           (rule "notLeft" (formula "69"))
                                                                           (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_1586"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "58") (ifseqformula "86"))
                                                                           (rule "allLeft" (formula "54") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "54"))
                                                                           (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1587"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "95")) (ifInst ""  (formula "28")))
                                                                           (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "56"))
                                                                           (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_1588"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "97")) (ifInst ""  (formula "28")))
                                                                           (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1589"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "86")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "38") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "notLeft" (formula "38"))
                                                                           (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "58"))
                                                                           (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1590"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "47"))
                                                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "92")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "50") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "notLeft" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=arr_1591"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "99")) (ifInst ""  (formula "73")))
                                                                           (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "50") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "50") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "50") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "notLeft" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=arr_1592"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "99")) (ifInst ""  (formula "73")))
                                                                           (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1593"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                           (rule "hideAuxiliaryEq" (formula "51"))
                                                                           (rule "andRight" (formula "101"))
                                                                           (branch "Case 1"
                                                                              (rule "orRight" (formula "101"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "90"))
                                                                              (rule "close" (formula "102") (ifseqformula "48"))
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "orRight" (formula "101"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "89"))
                                                                              (rule "close" (formula "102") (ifseqformula "48"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "67") (inst "sk=i_117"))
                                                                     (rule "orRight" (formula "67"))
                                                                     (rule "orRight" (formula "67"))
                                                                     (rule "notRight" (formula "69"))
                                                                     (rule "inEqSimp_leqRight" (formula "68"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "69"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1554"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "43"))
                                                                     (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "41") (ifseqformula "79"))
                                                                     (rule "arrayLengthNotNegative" (formula "78") (term "2,1,1,0,0,0"))
                                                                     (rule "arrayLengthIsAShort" (formula "78") (term "2,1,1,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "arrayLengthIsAShort" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "true_left" (formula "13"))
                                                                     (rule "arrayLengthNotNegative" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                                                     (rule "cut_direct" (formula "58") (term "0"))
                                                                     (branch "CUT: result_4.length <= 1 + i_101 TRUE"
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "inEqSimp_subsumption0" (formula "59") (term "0") (ifseqformula "58"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                                        (rule "add_literals" (formula "59") (term "0,0,0"))
                                                                        (rule "qeq_literals" (formula "59") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "58"))
                                                                        (rule "times_zero_1" (formula "56") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "56") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                                        (rule "mul_literals" (formula "56") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "17"))
                                                                        (rule "leq_literals" (formula "56") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "true_left" (formula "56"))
                                                                        (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1573"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "74")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1574"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "76")) (ifInst ""  (formula "6")))
                                                                        (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1575"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "77")) (ifInst ""  (formula "84")) (ifInst ""  (formula "64")))
                                                                        (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                                        (rule "hideAuxiliaryEq" (formula "48"))
                                                                        (rule "allLeft" (formula "69") (inst "t=i_101"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "69") (term "0,0,0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "69") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "69"))
                                                                        (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1576"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "80")) (ifInst ""  (formula "5")))
                                                                        (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1577"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "82")) (ifInst ""  (formula "5")))
                                                                        (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "allLeft" (formula "76") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "pullOutSelect" (formula "76") (term "0,0,0") (inst "selectSK=arr_1578"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "66"))
                                                                        (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "applyEqReverse" (formula "77") (term "0,0,0") (ifseqformula "76"))
                                                                        (rule "hideAuxiliaryEq" (formula "76"))
                                                                        (rule "narrowSelectArrayType" (formula "76") (term "0,0,0") (ifseqformula "65") (ifseqformula "90"))
                                                                        (rule "allLeft" (formula "61") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_1579"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "99")) (ifInst ""  (formula "28")))
                                                                        (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")))
                                                                        (rule "true_left" (formula "38"))
                                                                        (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "31"))
                                                                        (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "65"))
                                                                        (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_1580"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "103")) (ifInst ""  (formula "28")))
                                                                        (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                                        (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "50") (term "1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "50") (term "1,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0,2,2,0,1"))
                                                                        (rule "add_literals" (formula "50") (term "0,0,2,2,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "17"))
                                                                        (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "pullOutSelect" (formula "50") (term "2,0,1") (inst "selectSK=arr_1581"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "48"))
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (rule "applyEqReverse" (formula "51") (term "2,0,1") (ifseqformula "50"))
                                                                        (rule "hideAuxiliaryEq" (formula "50"))
                                                                        (rule "andRight" (formula "97"))
                                                                        (branch "Case 1"
                                                                           (rule "orRight" (formula "97"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "86"))
                                                                           (rule "close" (formula "98") (ifseqformula "47"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "orRight" (formula "97"))
                                                                           (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "85"))
                                                                           (rule "close" (formula "98") (ifseqformula "47"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result_4.length <= 1 + i_101 FALSE"
                                                                        (builtin "One Step Simplification" (formula "58"))
                                                                        (rule "inEqSimp_leqRight" (formula "65"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "cut_direct" (formula "60") (term "0"))
                                                                        (branch "CUT: result_4.length <= 2 + i_101 TRUE"
                                                                           (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "true_left" (formula "61"))
                                                                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "60"))
                                                                           (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "61"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "61") (term "0"))
                                                                           (rule "add_literals" (formula "61") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "61") (term "0"))
                                                                           (rule "qeq_literals" (formula "61"))
                                                                           (rule "true_left" (formula "61"))
                                                                           (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "0"))
                                                                           (rule "leq_literals" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "applyEq" (formula "60") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "60") (term "1,1,0,0"))
                                                                           (rule "add_literals" (formula "60") (term "0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                           (rule "mul_literals" (formula "57") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "57") (ifseqformula "18"))
                                                                           (rule "leq_literals" (formula "57") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                           (rule "true_left" (formula "57"))
                                                                           (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1566"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "74")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1567"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "76")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                           (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1568"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "77")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1569"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "79")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "63") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1570"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "99")) (ifInst ""  (formula "29")))
                                                                           (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                           (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_1571"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "101")) (ifInst ""  (formula "29")))
                                                                           (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1572"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                           (rule "hideAuxiliaryEq" (formula "51"))
                                                                           (rule "andRight" (formula "95"))
                                                                           (branch "Case 1"
                                                                              (rule "orRight" (formula "95"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "84"))
                                                                              (rule "close" (formula "96") (ifseqformula "48"))
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "orRight" (formula "95"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "83"))
                                                                              (rule "close" (formula "96") (ifseqformula "48"))
                                                                           )
                                                                        )
                                                                        (branch "CUT: result_4.length <= 2 + i_101 FALSE"
                                                                           (builtin "One Step Simplification" (formula "60"))
                                                                           (rule "inEqSimp_leqRight" (formula "66"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1555"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "76")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1556"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "78")) (ifInst ""  (formula "7")))
                                                                           (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "allLeft" (formula "71") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "71") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "71") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "71") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "71") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "71") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "71") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "71") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "71") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "71") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "71") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "71") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "71") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "71"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "71") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "71") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "71"))
                                                                           (rule "notLeft" (formula "71"))
                                                                           (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=arr_1557"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "narrowSelectArrayType" (formula "73") (term "0") (ifseqformula "60") (ifseqformula "85"))
                                                                           (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "38") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "notLeft" (formula "38"))
                                                                           (rule "allLeft" (formula "70") (inst "t=i_101"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "70") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "70") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "70"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "70") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "70"))
                                                                           (rule "notLeft" (formula "70"))
                                                                           (rule "allLeft" (formula "70") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "70") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "70") (term "0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "70") (term "0,0,0") (ifseqformula "76"))
                                                                           (builtin "One Step Simplification" (formula "70"))
                                                                           (rule "true_left" (formula "70"))
                                                                           (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "52") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "52") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "notLeft" (formula "52"))
                                                                           (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_1558"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "92")) (ifInst ""  (formula "67")))
                                                                           (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1559"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "87")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "76") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "76") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "76") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "76"))
                                                                           (rule "notLeft" (formula "76"))
                                                                           (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_1560"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "narrowSelectArrayType" (formula "78") (term "0") (ifseqformula "65") (ifseqformula "94"))
                                                                           (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "52") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "52") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "52") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "52") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "notLeft" (formula "52"))
                                                                           (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_1561"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "95")) (ifInst ""  (formula "69")))
                                                                           (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "allLeft" (formula "61") (inst "t=i_101"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "61"))
                                                                           (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_1562"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "103")) (ifInst ""  (formula "29")))
                                                                           (rule "allLeft" (formula "63") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "63") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "63") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                           (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1563"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "105")) (ifInst ""  (formula "29")))
                                                                           (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "55"))
                                                                           (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1564"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "93")) (ifInst ""  (formula "6")))
                                                                           (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                           (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "51") (term "1,0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "51") (term "1,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                           (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "18"))
                                                                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_1565"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "49"))
                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                           (rule "hideAuxiliaryEq" (formula "51"))
                                                                           (rule "andRight" (formula "101"))
                                                                           (branch "Case 1"
                                                                              (rule "orRight" (formula "101"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "90"))
                                                                              (rule "close" (formula "102") (ifseqformula "48"))
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "orRight" (formula "101"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "89"))
                                                                              (rule "close" (formula "102") (ifseqformula "48"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_4), array2seq2d(heapAfter_retrieveSortedMessages, result_1)) FALSE"
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "false_right" (formula "67"))
                                                            (rule "commute_and" (formula "9") (term "0,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "75") (term "2,1,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "arrayLengthNotNegative" (formula "75") (term "2,1,1,0,0,0"))
                                                            (rule "arrayLengthNotNegative" (formula "9") (term "1,1,1,0,0,1,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "9") (term "1,1,1,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "cut_direct" (formula "54") (term "0"))
                                                            (branch "CUT: result_4.length <= 1 + i_101 TRUE"
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "inEqSimp_subsumption0" (formula "55") (term "0") (ifseqformula "54"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "55") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                               (rule "times_zero_1" (formula "52") (term "0,0"))
                                                               (rule "add_zero_left" (formula "52") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                               (rule "mul_literals" (formula "52") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "52") (term "0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1545"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "74")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1546"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "76")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "67") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "67") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "67") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_1547"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "80")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "71") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_1548"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "narrowSelectArrayType" (formula "71") (term "0,0,0") (ifseqformula "60") (ifseqformula "86"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1549"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "82")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "47") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1550"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "81")) (ifInst ""  (formula "89")) (ifInst ""  (formula "67")))
                                                               (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "allLeft" (formula "58") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1551"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "97")) (ifInst ""  (formula "23")))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1552"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "99")) (ifInst ""  (formula "23")))
                                                               (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "47") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "47") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1553"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "andRight" (formula "94"))
                                                               (branch "Case 1"
                                                                  (rule "orRight" (formula "94"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "82"))
                                                                  (rule "close" (formula "95") (ifseqformula "44"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "orRight" (formula "94"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "81"))
                                                                  (rule "close" (formula "95") (ifseqformula "44"))
                                                               )
                                                            )
                                                            (branch "CUT: result_4.length <= 1 + i_101 FALSE"
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "inEqSimp_leqRight" (formula "61"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "cut_direct" (formula "56") (term "0"))
                                                               (branch "CUT: result_4.length <= 2 + i_101 TRUE"
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "true_left" (formula "57"))
                                                                  (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "56"))
                                                                  (rule "applyEq" (formula "58") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,1,1,0,0"))
                                                                  (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "61") (term "1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                                                  (rule "add_literals" (formula "57") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "57") (term "0"))
                                                                  (rule "qeq_literals" (formula "57"))
                                                                  (rule "true_left" (formula "57"))
                                                                  (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "mul_literals" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "53") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1538"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "69")) (ifInst ""  (formula "3")))
                                                                  (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1539"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "71")) (ifInst ""  (formula "3")))
                                                                  (rule "allLeft" (formula "43") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1540"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "72")) (ifInst ""  (formula "2")))
                                                                  (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1541"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "74")) (ifInst ""  (formula "2")))
                                                                  (rule "allLeft" (formula "28") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1542"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "95")) (ifInst ""  (formula "24")))
                                                                  (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1543"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "97")) (ifInst ""  (formula "24")))
                                                                  (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "47") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "47") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1544"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "andRight" (formula "92"))
                                                                  (branch "Case 1"
                                                                     (rule "orRight" (formula "92"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "93") (ifseqformula "80"))
                                                                     (rule "close" (formula "93") (ifseqformula "44"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "orRight" (formula "92"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "93") (ifseqformula "79"))
                                                                     (rule "close" (formula "93") (ifseqformula "44"))
                                                                  )
                                                               )
                                                               (branch "CUT: result_4.length <= 2 + i_101 FALSE"
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "inEqSimp_leqRight" (formula "62"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1527"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "71")) (ifInst ""  (formula "3")))
                                                                  (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1528"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "73")) (ifInst ""  (formula "3")))
                                                                  (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "42") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "notLeft" (formula "42"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_1529"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "80")) (ifInst ""  (formula "57")))
                                                                  (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "42") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "notLeft" (formula "42"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=arr_1530"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "81")) (ifInst ""  (formula "57")))
                                                                  (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "allLeft" (formula "49") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_1531"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "90")) (ifInst ""  (formula "23")))
                                                                  (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1532"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "92")) (ifInst ""  (formula "23")))
                                                                  (rule "allLeft" (formula "43") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1533"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "80")) (ifInst ""  (formula "2")))
                                                                  (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1534"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "82")) (ifInst ""  (formula "2")))
                                                                  (rule "allLeft" (formula "72") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "72") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "72") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=arr_1535"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "74") (term "0") (ifseqformula "61") (ifseqformula "89"))
                                                                  (rule "allLeft" (formula "22") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_28" (formula "72") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_29" (formula "72") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "72") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "72") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "72") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "72") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "72") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "72") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "72") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "72") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "72") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "notLeft" (formula "72"))
                                                                  (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "allLeft" (formula "76") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_30" (formula "76") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_31" (formula "76") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "76") (term "0,0,0") (ifseqformula "81"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "true_left" (formula "76"))
                                                                  (rule "allLeft" (formula "77") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "77") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "77") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "77") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "77") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "77") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "77") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "77") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "77") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "77") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "77") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "77") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "77") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "notLeft" (formula "77"))
                                                                  (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_1536"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "79") (term "0") (ifseqformula "66") (ifseqformula "96"))
                                                                  (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet1000201011000000000_36" (formula "47") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000201011000000000_37" (formula "47") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1537"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "andRight" (formula "98"))
                                                                  (branch "Case 1"
                                                                     (rule "orRight" (formula "98"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "86"))
                                                                     (rule "close" (formula "99") (ifseqformula "44"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "orRight" (formula "98"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "85"))
                                                                     (rule "close" (formula "99") (ifseqformula "44"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "result_2 = result_1 FALSE"
                                                      (rule "applyEqReverse" (formula "64") (term "0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0,1,0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,0,0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0,1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0,1,0,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0,1,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,0,1,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_6" (formula "35") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_8" (formula "35") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_25" (formula "35") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "35") (term "2,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "commute_and_2" (formula "4") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "result_4 = result_2 TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "66") (term "1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,0,1") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,2,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "65") (term "0,1,1") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "65") (term "1,1,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEqReverse" (formula "65") (term "0,1,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "23") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "48") (term "1,2,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "48") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "68") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "47") (term "1,1,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "49") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "1,2,1") (ifseqformula "5"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "67") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "68")))
                                                         (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "44"))
                                                         (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "32"))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_left" (formula "51") (term "1,0,1") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "12")) (ifInst ""  (formula "42")))
                                                         (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "0,2,2,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "0,2,2,0,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0"))
                                                         (rule "nonNull" (formula "51") (term "1,1") (inst "i=i"))
                                                         (rule "greater_literals" (formula "51") (term "0,1,1,1"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "59")))
                                                         (rule "sub_literals" (formula "51") (term "2,1,0,1,1"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,1"))
                                                         (rule "nnf_imp2or" (formula "51") (term "0,0"))
                                                         (rule "nnf_imp2or" (formula "51") (term "0,0,1"))
                                                         (rule "nnf_imp2or" (formula "51") (term "0,1,1"))
                                                         (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "51") (term "0,0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0,0,1"))
                                                         (rule "nnf_notAnd" (formula "51") (term "0,0,1,1"))
                                                         (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,1"))
                                                         (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,1"))
                                                         (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,1,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,1"))
                                                         (rule "mul_literals" (formula "51") (term "1,0,0,0,1,1"))
                                                         (rule "andRight" (formula "51"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "51") (inst "sk=i_0_8"))
                                                            (rule "orRight" (formula "51"))
                                                            (rule "orRight" (formula "51"))
                                                            (rule "inEqSimp_leqRight" (formula "53"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "53"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "53"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1509"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1510"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_6" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_25" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "replace_known_right" (formula "63") (term "0,0,1,0") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "54")))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                                                            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "51"))
                                                            (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_8" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "replace_known_right" (formula "64") (term "0,0,1") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "54")))
                                                            (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                                            (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_and" (formula "10") (term "0,0,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "18"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "20"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "arrayLengthNotNegative" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                            (rule "arrayLengthIsAShort" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "arrayLengthIsAShort" (formula "73") (term "1,1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "arrayLengthNotNegative" (formula "73") (term "1,1"))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_8" (formula "46") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "46") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "2,0,1") (inst "selectSK=arr_1511"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "66")) (ifInst ""  (formula "73")) (ifInst ""  (formula "43")))
                                                            (rule "applyEqReverse" (formula "47") (term "2,0,1") (ifseqformula "46"))
                                                            (rule "hideAuxiliaryEq" (formula "46"))
                                                            (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "27") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1512"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "72")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                            (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1513"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "74")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "57") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_1514"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "77")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_1515"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "79")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "64") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_1516"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "96")) (ifInst ""  (formula "10")))
                                                            (rule "allLeft" (formula "45") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "68") (term "0,1,0"))
                                                            (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_1517"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "100")) (ifInst ""  (formula "10")))
                                                            (rule "allLeft" (formula "40") (inst "t=i_0_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_0_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                            (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "allLeft" (formula "78") (inst "t=i_0_8"))
                                                            (rule "replaceKnownSelect_taclet00100201011000000000_30" (formula "78") (term "2,0,1"))
                                                            (rule "replaceKnownSelect_taclet00100201011000000000_28" (formula "78") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100201011000000000_31" (formula "78") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100201011000000000_29" (formula "78") (term "1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "78") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "78") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "78") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "78") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "78"))
                                                            (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "78") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                                                            (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "78") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "78") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "78"))
                                                            (rule "allLeft" (formula "82") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "82") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                            (rule "add_literals" (formula "82") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "82") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "82") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "82") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "82") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "82") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "82") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "82") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "82") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "82") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "notLeft" (formula "82"))
                                                            (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=arr_1518"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "84") (term "0") (ifseqformula "74") (ifseqformula "96"))
                                                            (rule "allLeft" (formula "79") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_7" (formula "79") (term "1,0,1"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_9" (formula "79") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_27" (formula "79") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_26" (formula "79") (term "2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "79") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "79") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "79") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "79") (term "0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "79") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "inEqSimp_contradInEq1" (formula "79") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "79") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "79") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0"))
                                                            (rule "add_literals" (formula "79") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "79") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "79") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "79") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "allLeft" (formula "82") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_9" (formula "82") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_26" (formula "82") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "86"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "true_left" (formula "82"))
                                                            (rule "allLeft" (formula "82") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet201011000000000_7" (formula "82") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_27" (formula "82") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "82") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "82") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "82") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "notLeft" (formula "82"))
                                                            (rule "allLeft" (formula "82") (inst "t=add(Z(1(#)), i_0_8)"))
                                                            (rule "replaceKnownSelect_taclet00100201011000000000_30" (formula "82") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100201011000000000_31" (formula "82") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "82") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                            (rule "add_literals" (formula "82") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "82") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "82") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "82") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "82") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "82") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "82") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "82") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "82") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "82") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "notLeft" (formula "82"))
                                                            (rule "allLeft" (formula "82") (inst "t=i_0_8"))
                                                            (rule "replaceKnownSelect_taclet00100201011000000000_28" (formula "82") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100201011000000000_29" (formula "82") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "82") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                                                            (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "82") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "82") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "notLeft" (formula "82"))
                                                            (rule "allLeft" (formula "83") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                                                            (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "83") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "notLeft" (formula "83"))
                                                            (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=arr_1519"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "85") (term "0") (ifseqformula "74") (ifseqformula "101"))
                                                            (rule "allLeft" (formula "83") (inst "t=add(Z(1(#)), i_0_8)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "83") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "83") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "83") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "83") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "83") (term "0,1,0"))
                                                            (rule "add_literals" (formula "83") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "83") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "83") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "83") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "83") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "83") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "83") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "83") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "83") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                                                            (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "83") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "notLeft" (formula "83"))
                                                            (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=arr_1520"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "85") (term "0") (ifseqformula "74") (ifseqformula "101"))
                                                            (rule "allLeft" (formula "83") (inst "t=i_0_8"))
                                                            (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                                                            (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "83") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "83") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "notLeft" (formula "83"))
                                                            (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=arr_1521"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "85") (term "0") (ifseqformula "74") (ifseqformula "101"))
                                                            (rule "andRight" (formula "101"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "101"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "101") (ifseqformula "92"))
                                                               (rule "close" (formula "101") (ifseqformula "21"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "101"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "101") (ifseqformula "91"))
                                                               (rule "close" (formula "101") (ifseqformula "21"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "51"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "51") (inst "sk=i_116"))
                                                               (rule "orRight" (formula "51"))
                                                               (rule "orRight" (formula "51"))
                                                               (rule "inEqSimp_leqRight" (formula "53"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "52"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "53"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1500"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1501"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_6" (formula "42") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_25" (formula "42") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "54")))
                                                               (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_8" (formula "42") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "42") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "54")))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                                                               (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "51"))
                                                               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                                               (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                                               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "commute_and" (formula "7") (term "0,0,0"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "17"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "18"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "20"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "arrayLengthIsAShort" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "arrayLengthNotNegative" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "73") (term "1,1"))
                                                               (rule "arrayLengthIsAShort" (formula "73") (term "1,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_8" (formula "46") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "46") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "46") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "pullOutSelect" (formula "46") (term "2,0,1") (inst "selectSK=arr_1502"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "66")) (ifInst ""  (formula "73")) (ifInst ""  (formula "43")))
                                                               (rule "applyEqReverse" (formula "47") (term "2,0,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "54") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1503"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "86")) (ifInst ""  (formula "10")))
                                                               (rule "allLeft" (formula "43") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                               (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1504"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "48"))
                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "90")) (ifInst ""  (formula "10")))
                                                               (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1505"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "79")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                               (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_1506"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "81")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_1507"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "85")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "63") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "63") (term "0,1,0"))
                                                               (rule "add_literals" (formula "63") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "63"))
                                                               (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1508"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "87")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "40") (inst "t=i_116"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "40") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_116)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "40") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "andRight" (formula "95"))
                                                               (branch "Case 1"
                                                                  (rule "orRight" (formula "95"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "86"))
                                                                  (rule "close" (formula "95") (ifseqformula "21"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "orRight" (formula "95"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "85"))
                                                                  (rule "close" (formula "95") (ifseqformula "21"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "allRight" (formula "51") (inst "sk=i_115"))
                                                               (rule "orRight" (formula "51"))
                                                               (rule "orRight" (formula "51"))
                                                               (rule "notRight" (formula "53"))
                                                               (rule "inEqSimp_geqRight" (formula "53"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "53"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1490"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "45") (ifseqformula "61"))
                                                               (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_6" (formula "42") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_25" (formula "42") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "54")))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "51"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "35"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_8" (formula "42") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "42") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "42") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "54")))
                                                               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                                               (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "16"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "17"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "18"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "commute_and" (formula "11") (term "0,0,0"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "19"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "20"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "arrayLengthNotNegative" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "13") (term "2,1,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "arrayLengthIsAShort" (formula "73") (term "1,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "arrayLengthNotNegative" (formula "73") (term "1,1"))
                                                               (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_8" (formula "46") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "46") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "46") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "pullOutSelect" (formula "46") (term "2,0,1") (inst "selectSK=arr_1491"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "66")) (ifInst ""  (formula "73")) (ifInst ""  (formula "43")))
                                                               (rule "applyEqReverse" (formula "47") (term "2,0,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1492"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "70")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1493"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "72")) (ifInst ""  (formula "1")))
                                                               (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_1494"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "87")) (ifInst ""  (formula "10")))
                                                               (rule "allLeft" (formula "40") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                               (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "59"))
                                                               (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_1495"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "91")) (ifInst ""  (formula "10")))
                                                               (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1496"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "80")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1497"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "82")) (ifInst ""  (formula "2")))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "40") (inst "t=i_115"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "40") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "allLeft" (formula "81") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "81") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                               (rule "add_literals" (formula "81") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "81") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "81") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "81") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "81") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "81") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                                                               (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "81") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "notLeft" (formula "81"))
                                                               (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=arr_1498"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "83") (term "0") (ifseqformula "74") (ifseqformula "94"))
                                                               (rule "allLeft" (formula "78") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_7" (formula "78") (term "1,0,1"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_9" (formula "78") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_27" (formula "78") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_26" (formula "78") (term "2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "78") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "78") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "78") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "78") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "78") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "78") (term "0,0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "78") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "78") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "78") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                                                               (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "78") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "78") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "allLeft" (formula "81") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_9" (formula "81") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_26" (formula "81") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "81") (term "0,0,0") (ifseqformula "85"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "true_left" (formula "81"))
                                                               (rule "allLeft" (formula "81") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet201011000000000_7" (formula "81") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0100201011000000000_27" (formula "81") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                                                               (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "81") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "notLeft" (formula "81"))
                                                               (rule "allLeft" (formula "81") (inst "t=i_115"))
                                                               (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                                                               (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "81") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "81") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "notLeft" (formula "81"))
                                                               (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=arr_1499"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "85") (ifseqformula "10"))
                                                            )
                                                         )
                                                      )
                                                      (branch "result_4 = result_2 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,2,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "66") (term "1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "65") (term "0,1,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "65") (term "1,1,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,1,0,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "65") (term "0,1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet201011000000000_6" (formula "39") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_25" (formula "39") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "replace_known_right" (formula "64") (term "0,0,1,0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "53")))
                                                         (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet201011000000000_8" (formula "39") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100201011000000000_24" (formula "39") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "53")))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                         (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "64"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "50"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_and" (formula "8") (term "0,0,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "10") (term "2,1,1,0,0,1,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "10") (term "2,1,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "arrayLengthIsAShort" (formula "74") (term "1,1,1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "74") (term "1,1,1,0,0,0"))
                                                         (rule "andRight" (formula "73"))
                                                         (branch "Case 1"
                                                            (rule "orRight" (formula "73"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "73") (ifseqformula "62"))
                                                            (rule "close" (formula "73") (ifseqformula "17"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "orRight" (formula "73"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "73") (ifseqformula "61"))
                                                            (rule "close" (formula "73") (ifseqformula "17"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_4.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "55") (ifseqformula "51") (ifseqformula "62"))
                                                   (rule "close" (formula "55") (ifseqformula "14"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "1,0,1,0,0,1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "1,0,1,0,1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "0,0,0,0") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "0,0,0,0,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "59") (term "1,0,1,0,1,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "59") (term "0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "59") (term "0,0,0,1,1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "arrayLengthIsAShort" (formula "24") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "arrayLengthNotNegative" (formula "24") (term "1,1"))
                                                (rule "arrayLengthNotNegative" (formula "44") (term "1,0"))
                                                (rule "arrayLengthIsAShort" (formula "45") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "arrayLengthNotNegative" (formula "61") (term "1,1"))
                                                (rule "arrayLengthIsAShort" (formula "62") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "arrayLengthIsAShort" (formula "62") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "arrayLengthNotNegative" (formula "62") (term "0,1"))
                                                (rule "ex_pull_out3" (formula "3") (term "1,0"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "19") (term "0"))
                                                (rule "commute_or" (formula "51") (term "0,0"))
                                                (rule "commute_or" (formula "23") (term "0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "commute_or" (formula "35") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "cut_direct" (formula "45") (term "0,0"))
                                                (branch "CUT: result_4.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "true_left" (formula "46"))
                                                   (rule "commute_or" (formula "20") (term "0,0"))
                                                   (rule "commute_or" (formula "19") (term "0,0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "commute_or" (formula "37") (term "0,0"))
                                                   (rule "commute_or" (formula "36") (term "0,0"))
                                                   (rule "shift_paren_and" (formula "62"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,1,0"))
                                                   (rule "commute_or" (formula "3") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "3") (term "1,0,0,1,0"))
                                                   (rule "ex_pull_out3" (formula "3") (term "0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                   (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                   (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                   (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                   (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "result_4 = result_2 TRUE"
                                                      (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,1,1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,1,1,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,0,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,1,1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "63") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,2,1,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "62") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "48") (term "1") (ifseqformula "4"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "52") (ifseqformula "48") (ifseqformula "60"))
                                                      (rule "close" (formula "52") (ifseqformula "11"))
                                                   )
                                                   (branch "result_4 = result_2 FALSE"
                                                      (rule "applyEqReverse" (formula "64") (term "1,1,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,1,1,1,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,1,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,1,0,1,0,0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "63") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,2,1,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1,0,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "0,0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,2,1,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "3") (term "0,1,1,0,0"))
                                                      (rule "eqSymm" (formula "62") (term "1,0,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_8" (formula "33") (term "2,0,1"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_6" (formula "33") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1201011000000000_25" (formula "33") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1201011000000000_24" (formula "33") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "33") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "33") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "commute_and_2" (formula "4") (term "0,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                      (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "50"))
                                                      (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_8" (formula "41") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1201011000000000_25" (formula "41") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "41") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "41") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "notLeft" (formula "41"))
                                                      (rule "replace_known_right" (formula "66") (term "0,0,1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "55")))
                                                      (rule "commute_and_2" (formula "66"))
                                                      (rule "allLeft" (formula "41") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_6" (formula "41") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1201011000000000_24" (formula "41") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "41") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "41") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "notLeft" (formula "41"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "55")))
                                                      (rule "commute_and" (formula "4") (term "0,0,0"))
                                                      (rule "commute_and" (formula "67"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "arrayLengthNotNegative" (formula "74") (term "2,1,1,0,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "74") (term "2,1,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "pullOutSelect" (formula "56") (term "2,0,1") (inst "selectSK=arr_1486"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "applyEqReverse" (formula "57") (term "2,0,1") (ifseqformula "56"))
                                                      (rule "hideAuxiliaryEq" (formula "56"))
                                                      (rule "pullOutSelect" (formula "56") (term "1,0,1") (inst "selectSK=arr_1487"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1") (ifseqformula "56"))
                                                      (rule "hideAuxiliaryEq" (formula "56"))
                                                      (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet101201011000000000_28" (formula "57") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101201011000000000_29" (formula "57") (term "1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,2,2,0,1"))
                                                      (rule "add_literals" (formula "57") (term "0,0,2,2,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "57") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "pullOutSelect" (formula "57") (term "2,0,1") (inst "selectSK=arr_1488"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "applyEqReverse" (formula "58") (term "2,0,1") (ifseqformula "57"))
                                                      (rule "hideAuxiliaryEq" (formula "57"))
                                                      (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet201011000000000_8" (formula "42") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1201011000000000_25" (formula "42") (term "1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,2,2,0,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,2,2,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "2,0,1") (inst "selectSK=arr_1489"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "76")) (ifInst ""  (formula "68")))
                                                      (rule "applyEqReverse" (formula "43") (term "2,0,1") (ifseqformula "42"))
                                                      (rule "hideAuxiliaryEq" (formula "42"))
                                                      (rule "andRight" (formula "76"))
                                                      (branch "Case 1"
                                                         (rule "orRight" (formula "76"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "64"))
                                                         (rule "close" (formula "77") (ifseqformula "37"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "orRight" (formula "76"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "65"))
                                                         (rule "close" (formula "77") (ifseqformula "37"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_4.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "53") (ifseqformula "49") (ifseqformula "61"))
                                                   (rule "close" (formula "53") (ifseqformula "12"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Exceptional Post (compare)"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#))))))_1011000000000_0" (formula "40") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0") (ifseqformula "20"))
                                          (rule "translateJavaSubInt" (formula "34") (term "1,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "34") (term "0,2,2,0,1,0"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "close" (formula "41") (ifseqformula "40"))
                                       )
                                       (branch "Pre (compare)"
                                          (builtin "One Step Simplification" (formula "10"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_101)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(add(i_101,Z(1(#))))))_1011000000000_0" (formula "39") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "20"))
                                          (rule "wellFormedAnonEQ" (formula "38") (term "0,0,1") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,1") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0,1") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,1,1") (ifseqformula "20"))
                                          (rule "wellFormedAnonEQ" (formula "38") (term "0,0,0,1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,1,0,1") (ifseqformula "20"))
                                          (rule "translateJavaSubInt" (formula "34") (term "1,1,0,0"))
                                          (rule "translateJavaAddInt" (formula "34") (term "0,2,2,0,1,0"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "38") (term "1,0,0,1") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "4")) (ifInst ""  (formula "19")))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,2,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,2,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,0,0,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,2,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,2,1,0,1,0,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1"))
                                          (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "39"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "38") (inst "i=i"))
                                          (rule "greater_literals" (formula "38") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "sub_literals" (formula "38") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "34") (term "0") (inst "u=u"))
                                          (rule "nonNull" (formula "27") (inst "i=i"))
                                          (rule "greater_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "39"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "23") (term "0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "2,0") (ifseqformula "29") (ifseqformula "39"))
                                          (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "5") (ifseqformula "44"))
                                          (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "2,1") (ifseqformula "29") (ifseqformula "44"))
                                          (rule "array2seqDef" (formula "34") (term "1") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "34") (term "2,1") (ifseqformula "29") (ifseqformula "43"))
                                          (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "17") (term "2,1") (ifseqformula "5") (ifseqformula "49"))
                                          (rule "nonNull" (formula "18") (inst "i=i"))
                                          (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "44")))
                                          (rule "greater_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "44"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1175"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                          (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_15"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
                                          (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "eqSymm" (formula "38") (term "0,0"))
                                          (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "35") (term "1,2,1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "38"))
                                          (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "eqSymm" (formula "38") (term "0,0"))
                                          (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "35") (term "1,2,1") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "35") (term "0,1,1") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "35") (term "1,2,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "16") (term "1,0,0,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                          (rule "pullOutSelect" (formula "42") (term "1,0,1,1,0,1") (inst "selectSK=arr_1176"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "43") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "43") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "43") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "replaceKnownSelect_taclet21011000000000_1" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_1177"))
                                          (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "42")))
                                          (rule "pullOutSelect" (formula "44") (term "1,0,0,0,1,1,1") (inst "selectSK=arr_1178"))
                                          (rule "applyEq" (formula "45") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "replaceKnownSelect_taclet21011000000000_6" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "39") (term "0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "41") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                          (rule "commute_or_2" (formula "37"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "16") (ifseqformula "11"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "nonNull" (formula "18") (inst "i=i"))
                                          (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "57")))
                                          (rule "greater_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "57"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "17") (inst "i=i"))
                                          (rule "greater_literals" (formula "17") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "16") (inst "i=i"))
                                          (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "greater_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "31") (ifseqformula "11"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "nonNull" (formula "33") (inst "i=i"))
                                          (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "greater_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "andLeft" (formula "33"))
                                          (rule "notLeft" (formula "33"))
                                          (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "36") (ifseqformula "46"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "31") (inst "i=i"))
                                          (rule "greater_literals" (formula "31") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "notLeft" (formula "31"))
                                          (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "36") (ifseqformula "46"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "32") (inst "i=i"))
                                          (rule "sub_literals" (formula "32") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "greater_literals" (formula "32") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "narrowSelectArrayType" (formula "32") (term "0,0,1,0") (ifseqformula "36") (ifseqformula "46"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_17"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_17"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_17"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_17"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                          (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_17"))
                                          (rule "applyEq" (formula "34") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_17"))
                                          (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_17"))
                                          (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "33") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "11")))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                          (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_or_2" (formula "54") (term "1,0,1"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "54") (term "1,1,1"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "nnf_imp2or" (formula "33") (term "0"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "commute_or_2" (formula "30") (term "0"))
                                          (rule "nnf_imp2or" (formula "32") (term "0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "result_2 = result_1 | !result_2.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "41") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "42") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "29") (term "1,2,0,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "28") (term "1,2,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "34") (term "1,0,0,1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "61") (term "3,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "29") (term "1,1,0,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "22") (term "1,0"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "arrayLengthNotNegative" (formula "22") (term "1,1"))
                                                (rule "arrayLengthIsAShort" (formula "23") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "commute_or_2" (formula "17") (term "0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "commute_or" (formula "29") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0"))
                                                (rule "shift_paren_or" (formula "53") (term "0,1"))
                                                (rule "shift_paren_or" (formula "53") (term "1,1"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "60") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "61")))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "38"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "28"))
                                                (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "46") (term "0,0,1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")))
                                                (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,2,2,0,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,2,2,0,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                                (rule "nonNull" (formula "46") (term "1,1,1,1") (inst "i=i"))
                                                (rule "sub_literals" (formula "46") (term "2,1,0,1,1,1,1,1,1"))
                                                (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "55")))
                                                (rule "greater_literals" (formula "46") (term "0,1,1,1,1"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,1,1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,1,1"))
                                                (rule "nonNull" (formula "46") (term "0,1,1,1") (inst "i=i"))
                                                (rule "sub_literals" (formula "46") (term "2,1,0,1,1,0,1,1,1"))
                                                (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                (rule "greater_literals" (formula "46") (term "0,0,1,1,1"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1,1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1,1"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,0,1"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,0,1,1"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,1,1,1,1"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1"))
                                                (rule "nnf_imp2or" (formula "46") (term "0,0,1,1,1"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,1,1,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,1,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,1,1,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,1,1,1"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,1,1,1,1"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,1,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,1,1,1,1"))
                                                (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,1"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1,1,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1,1"))
                                                (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "cut_direct" (formula "39") (term "0,0"))
                                                (branch "CUT: result_4.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "commute_or" (formula "33") (term "0,0"))
                                                   (rule "commute_or" (formula "17") (term "0,0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "commute_or" (formula "31") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "54") (term "0,0,1"))
                                                   (rule "shift_paren_or" (formula "54") (term "0,1,1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "result_4 = result_1 TRUE"
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,0,0,1,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "56") (term "0,0,0,0,1,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "56") (term "0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,1,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,0,1,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "55") (term "0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,0,0,1") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "applyEq" (formula "46") (term "0,1,1,1,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "42") (term "1,1,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "1,2,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "38") (term "1,2,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "1,2,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "1,0,0,1,0,0,1,1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "1,1,0,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "42") (term "1,2,0,1,0,0") (ifseqformula "2"))
                                                      (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "56") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "57")))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "36"))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "27"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "42") (term "1,1") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")) (ifInst ""  (formula "25")))
                                                      (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                      (rule "nonNull" (formula "42") (term "1,1") (inst "i=i"))
                                                      (rule "greater_literals" (formula "42") (term "0,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "51")))
                                                      (rule "sub_literals" (formula "42") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1"))
                                                      (rule "nnf_imp2or" (formula "42") (term "0,0"))
                                                      (rule "nnf_imp2or" (formula "42") (term "0,0,1"))
                                                      (rule "nnf_imp2or" (formula "42") (term "0,1,1"))
                                                      (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "42") (term "0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1"))
                                                      (rule "nnf_notAnd" (formula "42") (term "0,0,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1"))
                                                      (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1"))
                                                      (rule "shift_paren_and" (formula "49"))
                                                      (rule "andRight" (formula "42"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "42") (inst "sk=i_0_5"))
                                                         (rule "orRight" (formula "42"))
                                                         (rule "orRight" (formula "42"))
                                                         (rule "inEqSimp_leqRight" (formula "44"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "44"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "44"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1282"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1283"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "45"))
                                                         (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "32") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_1284"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                         (rule "hideAuxiliaryEq" (formula "32"))
                                                         (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=arr_1285"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                                         (rule "hideAuxiliaryEq" (formula "32"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_32" (formula "38") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_33" (formula "38") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "38") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1286"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                         (rule "hideAuxiliaryEq" (formula "38"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_30" (formula "43") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_31" (formula "43") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_32" (formula "43") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_33" (formula "43") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_1287"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_1288"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_0_5"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_36" (formula "39") (term "2,0,1"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_38" (formula "39") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_37" (formula "39") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_39" (formula "39") (term "1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_101"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "51") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "51") (term "2,0") (inst "selectSK=arr_1289"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEqReverse" (formula "52") (term "2,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=arr_1290"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "allLeft" (formula "52") (inst "t=i_0_5"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_26" (formula "52") (term "2,0,1"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_28" (formula "52") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_27" (formula "52") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_29" (formula "52") (term "1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                                         (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "52") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1291"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "71"))
                                                         (rule "replace_known_right" (formula "70") (term "0,0,0,1,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1292"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "72"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_42" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_43" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_40" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_41" (formula "55") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "replace_known_right" (formula "72") (term "0,0,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1293"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "74"))
                                                         (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_26" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_27" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_0_5"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_28" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_29" (formula "55") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "allLeft" (formula "56") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1294"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "75"))
                                                         (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "36"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "2,0") (ifseqformula "37"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "replaceKnownSelect_taclet0000021011000000000_36" (formula "47") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_37" (formula "47") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1295"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                         (rule "hideAuxiliaryEq" (formula "47"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1296"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "10")))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1297"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "10")))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_1298"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "10")))
                                                         (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "allLeft" (formula "52") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1299"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "10")))
                                                         (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                         (rule "hideAuxiliaryEq" (formula "52"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1300"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "82")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                         (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1301"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "84")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                         (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1302"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "86")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "56") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_1303"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "88")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "60") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1304"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "92")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_1305"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "96")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "39") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_0_5)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                         (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_1306"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "99")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "69") (inst "t=i_0_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "69"))
                                                         (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_1307"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "101")) (ifInst ""  (formula "2")))
                                                         (rule "cut_direct" (formula "50") (term "0"))
                                                         (branch "CUT: result_1.length <= 2 + i_101 TRUE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51"))
                                                            (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                                                            (rule "add_literals" (formula "51") (term "1,0"))
                                                            (rule "times_zero_1" (formula "51") (term "0"))
                                                            (rule "qeq_literals" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "applyEq" (formula "53") (term "1,1,1,0,0") (ifseqformula "19"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0"))
                                                            (rule "add_literals" (formula "53") (term "0,1,1,0,0"))
                                                            (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "87") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "81") (term "1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "86") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                                            (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "52") (term "0,0,0"))
                                                            (rule "applyEq" (formula "84") (term "1,1,1,0,0") (ifseqformula "19"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "1,1,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,1,1,0,0"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0"))
                                                            (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20"))
                                                            (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "1,0"))
                                                            (rule "times_zero_1" (formula "20") (term "0"))
                                                            (rule "leq_literals" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_0_5)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "71")))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_0_5"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "72")))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "andRight" (formula "104"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "104"))
                                                               (rule "orRight" (formula "104"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "105") (ifseqformula "91"))
                                                               (rule "close" (formula "105") (ifseqformula "76"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "104"))
                                                               (rule "orRight" (formula "104"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "105") (ifseqformula "89"))
                                                               (rule "close" (formula "105") (ifseqformula "76"))
                                                            )
                                                         )
                                                         (branch "CUT: result_1.length <= 2 + i_101 FALSE"
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_leqRight" (formula "88"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "qeq_literals" (formula "20") (term "0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "allLeft" (formula "84") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet0000021011000000000_40" (formula "84") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_41" (formula "84") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "84") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "84") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "84") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "84") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "inEqSimp_contradInEq1" (formula "84") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "84") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "84") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0"))
                                                            (rule "add_literals" (formula "84") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "84") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "84") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "pullOutSelect" (formula "84") (term "2,0") (inst "selectSK=arr_1308"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "applyEqReverse" (formula "85") (term "2,0") (ifseqformula "84"))
                                                            (rule "hideAuxiliaryEq" (formula "84"))
                                                            (rule "allLeft" (formula "85") (inst "t=add(Z(1(#)), i_0_5)"))
                                                            (rule "replaceKnownSelect_taclet0000021011000000000_26" (formula "85") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000021011000000000_27" (formula "85") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "85") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "85") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "85") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "85") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,0,0"))
                                                            (rule "add_literals" (formula "85") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "85") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "85") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "85") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "85"))
                                                            (rule "pullOutSelect" (formula "85") (term "2,0,1") (inst "selectSK=arr_1309"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "85"))
                                                            (rule "applyEqReverse" (formula "86") (term "2,0,1") (ifseqformula "85"))
                                                            (rule "hideAuxiliaryEq" (formula "85"))
                                                            (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_0_5)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "73")))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "allLeft" (formula "27") (inst "t=i_0_5"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "74")))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "andRight" (formula "108"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "108"))
                                                               (rule "orRight" (formula "108"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "109") (ifseqformula "95"))
                                                               (rule "close" (formula "109") (ifseqformula "78"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "108"))
                                                               (rule "orRight" (formula "108"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "109") (ifseqformula "93"))
                                                               (rule "close" (formula "109") (ifseqformula "78"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                         (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "42"))
                                                         (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "andRight" (formula "44"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "44") (inst "sk=i_108"))
                                                            (rule "orRight" (formula "44"))
                                                            (rule "orRight" (formula "44"))
                                                            (rule "inEqSimp_leqRight" (formula "46"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "46"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "46"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1254"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1255"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "32") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=arr_1256"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                                            (rule "hideAuxiliaryEq" (formula "32"))
                                                            (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_1257"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                            (rule "hideAuxiliaryEq" (formula "32"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "14"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "34") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "notLeft" (formula "34"))
                                                            (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "34") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "notLeft" (formula "34"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_32" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_33" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_30" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_31" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_30" (formula "38") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_31" (formula "38") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1258"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "allLeft" (formula "39") (inst "t=i_108"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "39") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_1259"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "applyEqReverse" (formula "40") (term "2,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=arr_1260"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "allLeft" (formula "51") (inst "t=i_101"))
                                                            (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "51") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "51") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "2,0") (inst "selectSK=arr_1261"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "applyEqReverse" (formula "52") (term "2,0") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=arr_1262"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "allLeft" (formula "52") (inst "t=i_108"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_28" (formula "52") (term "2,0,1"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_26" (formula "52") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_29" (formula "52") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_27" (formula "52") (term "1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                                            (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "52") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                            (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "56") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1263"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "69"))
                                                            (rule "replace_known_right" (formula "68") (term "0,1,0,0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "57")))
                                                            (rule "allLeft" (formula "56") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "56") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1264"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "70"))
                                                            (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "56") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1265"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "71"))
                                                            (rule "replace_known_right" (formula "70") (term "0,0,0") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "57")))
                                                            (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                            (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                            (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "56") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "notLeft" (formula "56"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1266"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "72"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_42" (formula "55") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_43" (formula "55") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "59"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_40" (formula "55") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_41" (formula "55") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_28" (formula "55") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_29" (formula "55") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_108"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_26" (formula "55") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_27" (formula "55") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "2,0") (ifseqformula "36"))
                                                            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "62"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0") (ifseqformula "37"))
                                                            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "36") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "36") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_36" (formula "46") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_37" (formula "46") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_108"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_38" (formula "46") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_39" (formula "46") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "46") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "notLeft" (formula "46"))
                                                            (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_36" (formula "44") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_37" (formula "44") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "44") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "pullOutSelect" (formula "44") (term "2,0,1") (inst "selectSK=arr_1267"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "applyEqReverse" (formula "45") (term "2,0,1") (ifseqformula "44"))
                                                            (rule "hideAuxiliaryEq" (formula "44"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1268"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "76")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1269"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "78")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1270"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "80")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "52") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1271"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "82")) (ifInst ""  (formula "1")))
                                                            (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_1272"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "86")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                            (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1273"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "88")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                            (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1274"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "90")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "62") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_1275"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "92")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "31") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "allLeft" (formula "67") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_1276"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "10")))
                                                            (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                            (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_1277"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "10")))
                                                            (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                            (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_1278"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "10")))
                                                            (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "allLeft" (formula "39") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "allLeft" (formula "73") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "pullOutSelect" (formula "73") (term "0,0,0") (inst "selectSK=arr_1279"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "10")))
                                                            (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "73"))
                                                            (rule "hideAuxiliaryEq" (formula "73"))
                                                            (rule "allLeft" (formula "84") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_28" (formula "84") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_29" (formula "84") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "84") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "84") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "84") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "84") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "84") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "pullOutSelect" (formula "84") (term "2,0,1") (inst "selectSK=arr_1280"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "applyEqReverse" (formula "85") (term "2,0,1") (ifseqformula "84"))
                                                            (rule "hideAuxiliaryEq" (formula "84"))
                                                            (rule "allLeft" (formula "85") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet01000021011000000000_40" (formula "85") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01000021011000000000_41" (formula "85") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "85") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "85") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "85") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "85") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "85") (term "0,0,0"))
                                                            (rule "add_literals" (formula "85") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "85") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "85") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "85") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "85"))
                                                            (rule "pullOutSelect" (formula "85") (term "2,0,1") (inst "selectSK=arr_1281"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "85"))
                                                            (rule "applyEqReverse" (formula "86") (term "2,0,1") (ifseqformula "85"))
                                                            (rule "hideAuxiliaryEq" (formula "85"))
                                                            (rule "allLeft" (formula "27") (inst "t=i_108"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "74")))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_108)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "73")))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "cut_direct" (formula "50") (term "0"))
                                                            (branch "CUT: result_1.length <= 2 + i_101 TRUE"
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "replace_known_left" (formula "85") (term "0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "85"))
                                                               (rule "true_left" (formula "85"))
                                                               (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "51") (term "0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51"))
                                                               (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                                                               (rule "add_literals" (formula "51") (term "1,0"))
                                                               (rule "times_zero_1" (formula "51") (term "0"))
                                                               (rule "qeq_literals" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "53") (term "1,1,1,0,0") (ifseqformula "19"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,1,1,0,0"))
                                                               (rule "applyEq" (formula "85") (term "1,1,1,0,0") (ifseqformula "19"))
                                                               (rule "polySimp_addAssoc" (formula "85") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "85") (term "0,1,1,0,0"))
                                                               (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "52") (term "0,0,0"))
                                                               (rule "applyEq" (formula "87") (term "1,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0,0"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20"))
                                                               (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                               (rule "add_literals" (formula "20") (term "1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "0"))
                                                               (rule "leq_literals" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "87") (term "1,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "83") (term "0,0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq0" (formula "83") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "83") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "83") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "83") (term "0,0,0"))
                                                               (rule "add_literals" (formula "83") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "83") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "mul_literals" (formula "18") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "83") (term "1,0"))
                                                               (rule "polySimp_elimOne" (formula "83") (term "1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "18") (term "0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                                               (rule "times_zero_1" (formula "7") (term "0,0"))
                                                               (rule "add_zero_left" (formula "7") (term "0"))
                                                               (rule "andRight" (formula "105"))
                                                               (branch "Case 1"
                                                                  (rule "orRight" (formula "105"))
                                                                  (rule "orRight" (formula "105"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "106") (ifseqformula "92"))
                                                                  (rule "close" (formula "106") (ifseqformula "76"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "orRight" (formula "105"))
                                                                  (rule "orRight" (formula "105"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "106") (ifseqformula "94"))
                                                                  (rule "close" (formula "106") (ifseqformula "76"))
                                                               )
                                                            )
                                                            (branch "CUT: result_1.length <= 2 + i_101 FALSE"
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "90"))
                                                               (builtin "One Step Simplification" (formula "85"))
                                                               (rule "inEqSimp_leqRight" (formula "90"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0"))
                                                               (rule "qeq_literals" (formula "20") (term "0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "andRight" (formula "108"))
                                                               (branch "Case 1"
                                                                  (rule "orRight" (formula "108"))
                                                                  (rule "orRight" (formula "108"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "109") (ifseqformula "95"))
                                                                  (rule "close" (formula "109") (ifseqformula "78"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "orRight" (formula "108"))
                                                                  (rule "orRight" (formula "108"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "109") (ifseqformula "97"))
                                                                  (rule "close" (formula "109") (ifseqformula "78"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "44") (inst "sk=i_107"))
                                                            (rule "orRight" (formula "44"))
                                                            (rule "notRight" (formula "45"))
                                                            (rule "orRight" (formula "45"))
                                                            (rule "inEqSimp_geqRight" (formula "46"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "46"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1247"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "39") (ifseqformula "54"))
                                                            (rule "allLeft" (formula "32") (inst "t=i_101"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "32") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=arr_1248"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                                            (rule "hideAuxiliaryEq" (formula "32"))
                                                            (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_1249"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                            (rule "hideAuxiliaryEq" (formula "32"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "14"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "34") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "notLeft" (formula "34"))
                                                            (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "34") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "notLeft" (formula "34"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet11000021011000000000_30" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11000021011000000000_31" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet11000021011000000000_28" (formula "42") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11000021011000000000_29" (formula "42") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "42") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "notLeft" (formula "42"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet11000021011000000000_28" (formula "38") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11000021011000000000_29" (formula "38") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1250"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "50") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "2,0") (inst "selectSK=arr_1251"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEqReverse" (formula "51") (term "2,0") (ifseqformula "50"))
                                                            (rule "hideAuxiliaryEq" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "1,0") (inst "selectSK=arr_1252"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                                            (rule "hideAuxiliaryEq" (formula "50"))
                                                            (rule "allLeft" (formula "54") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "54") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "notLeft" (formula "54"))
                                                            (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_1253"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "55") (term "0") (ifseqformula "46") (ifseqformula "67"))
                                                            (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "55")))
                                                            (rule "allLeft" (formula "54") (inst "t=i_107"))
                                                            (rule "replaceKnownSelect_taclet11000021011000000000_26" (formula "54") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11000021011000000000_27" (formula "54") (term "0,0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "54") (term "0,0,0,0") (ifseqformula "46") (ifseqformula "68"))
                                                            (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "54") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "8"))
                                                            (rule "andLeft" (formula "54"))
                                                            (rule "inEqSimp_homoInEq1" (formula "54"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "54") (term "1,0"))
                                                            (rule "add_zero_right" (formula "54") (term "0"))
                                                            (rule "leq_literals" (formula "54"))
                                                            (rule "closeFalse" (formula "54"))
                                                         )
                                                      )
                                                   )
                                                   (branch "result_4 = result_1 FALSE"
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,0,0,1,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,1,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "56") (term "1,0,1,0,1,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "56") (term "0,0,0,0,1,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "56") (term "0,0,1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,1") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "55") (term "0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "shift_paren_and" (formula "54"))
                                                      (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "45"))
                                                      (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "29") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=arr_1220"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=arr_1221"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "cut_direct" (formula "48") (term "0"))
                                                      (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_4), array2seq2d(heapAfter_retrieveSortedMessages, result_1)) TRUE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "andRight" (formula "49"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "49") (inst "sk=i_0_4"))
                                                            (rule "orRight" (formula "49"))
                                                            (rule "orRight" (formula "49"))
                                                            (rule "inEqSimp_leqRight" (formula "51"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "50"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "51"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1238"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1239"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "29") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "29") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "29") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "29") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet100021011000000000_26" (formula "38") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_27" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "replace_known_right" (formula "62") (term "0,0,0,1,0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "51")))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet100021011000000000_28" (formula "38") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_29" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "notLeft" (formula "38"))
                                                            (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "51")))
                                                            (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "1,0,1") (inst "selectSK=arr_1240"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "applyEqReverse" (formula "48") (term "1,0,1") (ifseqformula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1241"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "47"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                            (rule "replaceKnownSelect_taclet00100021011000000000_34" (formula "48") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100021011000000000_35" (formula "48") (term "2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "pullOutSelect" (formula "48") (term "1,0,1") (inst "selectSK=arr_1242"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEqReverse" (formula "49") (term "1,0,1") (ifseqformula "48"))
                                                            (rule "hideAuxiliaryEq" (formula "48"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "12"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_0_4)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                            (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "31") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "notLeft" (formula "31"))
                                                            (rule "allLeft" (formula "31") (inst "t=i_0_4"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                            (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "31") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "notLeft" (formula "31"))
                                                            (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_0_4)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                            (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1243"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "74")) (ifInst ""  (formula "51")))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_0_4"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1244"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "74")) (ifInst ""  (formula "51")))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_0_4)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                            (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "58") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                            (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "58") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "58") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "58") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1245"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "47") (ifseqformula "73"))
                                                            (rule "allLeft" (formula "58") (inst "t=i_0_4"))
                                                            (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                            (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "58") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1246"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "47") (ifseqformula "74"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_0_4"))
                                                            (rule "replaceKnownSelect_taclet00100021011000000000_32" (formula "55") (term "1,0,1"))
                                                            (rule "replaceKnownSelect_taclet00100021011000000000_30" (formula "55") (term "2,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100021011000000000_33" (formula "55") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100021011000000000_31" (formula "55") (term "2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "55") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "55") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "2,0") (ifseqformula "37"))
                                                            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "65"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "replace_known_left" (formula "77") (term "1,1") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "orRight" (formula "77"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "78") (ifseqformula "66"))
                                                            (rule "close" (formula "78") (ifseqformula "38"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "49"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "49") (inst "sk=i_106"))
                                                               (rule "orRight" (formula "49"))
                                                               (rule "orRight" (formula "49"))
                                                               (rule "inEqSimp_leqRight" (formula "51"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "50"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "51"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1233"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "33"))
                                                               (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1234"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "33"))
                                                               (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "29") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "29") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet100021011000000000_26" (formula "38") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_27" (formula "38") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "38") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "38") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "notLeft" (formula "38"))
                                                               (rule "replace_known_right" (formula "62") (term "0,0,0,1,0") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "51")))
                                                               (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "replaceKnownSelect_taclet100021011000000000_28" (formula "38") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_29" (formula "38") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "38") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "38") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "notLeft" (formula "38"))
                                                               (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "51")))
                                                               (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "1,0,1") (inst "selectSK=arr_1235"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEqReverse" (formula "48") (term "1,0,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1236"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                               (rule "replaceKnownSelect_taclet010100021011000000000_36" (formula "48") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet010100021011000000000_37" (formula "48") (term "2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "1,0,1") (inst "selectSK=arr_1237"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "applyEqReverse" (formula "49") (term "1,0,1") (ifseqformula "48"))
                                                               (rule "hideAuxiliaryEq" (formula "48"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "14"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "15"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "37"))
                                                               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "replace_known_left" (formula "72") (term "1,0") (ifseqformula "15"))
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "orRight" (formula "72"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "73") (ifseqformula "60"))
                                                               (rule "close" (formula "73") (ifseqformula "38"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "49"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "49") (inst "sk=i_105"))
                                                                  (rule "orRight" (formula "49"))
                                                                  (rule "orRight" (formula "49"))
                                                                  (rule "notRight" (formula "51"))
                                                                  (rule "inEqSimp_geqRight" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "51"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1229"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "41") (ifseqformula "58"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet100021011000000000_26" (formula "38") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_27" (formula "38") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "replace_known_right" (formula "62") (term "0,0,0,1,0") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "51")))
                                                                  (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet100021011000000000_28" (formula "38") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_29" (formula "38") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "replace_known_right" (formula "63") (term "0,0,0,1") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "51")))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1230"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "1,0,1") (inst "selectSK=arr_1231"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "1,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet0110100021011000000000_34" (formula "48") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0110100021011000000000_35" (formula "48") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "pullOutSelect" (formula "48") (term "1,0,1") (inst "selectSK=arr_1232"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "applyEqReverse" (formula "49") (term "1,0,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "12"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "15"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_105"))
                                                                  (rule "replaceKnownSelect_taclet0110100021011000000000_30" (formula "58") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0110100021011000000000_31" (formula "58") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "58") (term "0,0,0,0") (ifseqformula "47") (ifseqformula "71"))
                                                                  (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "9"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "58"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                  (rule "add_literals" (formula "8") (term "0"))
                                                                  (rule "leq_literals" (formula "8"))
                                                                  (rule "closeFalse" (formula "8"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "allRight" (formula "49") (inst "sk=i_104"))
                                                                  (rule "orRight" (formula "49"))
                                                                  (rule "orRight" (formula "49"))
                                                                  (rule "notRight" (formula "51"))
                                                                  (rule "inEqSimp_geqRight" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "51"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1225"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "33"))
                                                                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "31") (ifseqformula "60"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "29") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet100021011000000000_26" (formula "38") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_27" (formula "38") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "51")))
                                                                  (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "replaceKnownSelect_taclet100021011000000000_28" (formula "38") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_29" (formula "38") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "notLeft" (formula "38"))
                                                                  (rule "replace_known_right" (formula "63") (term "0,0,0,1") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "51")))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_101)"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "1,0,1") (inst "selectSK=arr_1226"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "1,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "pullOutSelect" (formula "47") (term "2,0,1") (inst "selectSK=arr_1227"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEqReverse" (formula "48") (term "2,0,1") (ifseqformula "47"))
                                                                  (rule "hideAuxiliaryEq" (formula "47"))
                                                                  (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                                  (rule "replaceKnownSelect_taclet1110100021011000000000_33" (formula "48") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110100021011000000000_34" (formula "48") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "pullOutSelect" (formula "48") (term "1,0,1") (inst "selectSK=arr_1228"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "applyEqReverse" (formula "49") (term "1,0,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "13"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "14"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "15"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "17"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_104"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "37"))
                                                                  (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "replace_known_left" (formula "73") (term "1,0") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "orRight" (formula "73"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "61"))
                                                                  (rule "close" (formula "74") (ifseqformula "38"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_4), array2seq2d(heapAfter_retrieveSortedMessages, result_1)) FALSE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "25") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "25") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet100021011000000000_26" (formula "34") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_27" (formula "34") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "replace_known_right" (formula "59") (term "0,0,0,1,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "47")))
                                                         (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet100021011000000000_28" (formula "34") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100021011000000000_29" (formula "34") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "replace_known_right" (formula "60") (term "0,0,0,1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "47")))
                                                         (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "43") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "pullOutSelect" (formula "43") (term "2,0,1") (inst "selectSK=arr_1222"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEqReverse" (formula "44") (term "2,0,1") (ifseqformula "43"))
                                                         (rule "hideAuxiliaryEq" (formula "43"))
                                                         (rule "pullOutSelect" (formula "43") (term "1,0,1") (inst "selectSK=arr_1223"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEqReverse" (formula "44") (term "1,0,1") (ifseqformula "43"))
                                                         (rule "hideAuxiliaryEq" (formula "43"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet1100021011000000000_32" (formula "44") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1100021011000000000_33" (formula "44") (term "2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "pullOutSelect" (formula "44") (term "1,0,1") (inst "selectSK=arr_1224"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "applyEqReverse" (formula "45") (term "1,0,1") (ifseqformula "44"))
                                                         (rule "hideAuxiliaryEq" (formula "44"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "8"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "2,0") (ifseqformula "33"))
                                                         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "replace_known_left" (formula "69") (term "1,1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "69"))
                                                         (rule "orRight" (formula "69"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "70") (ifseqformula "57"))
                                                         (rule "close" (formula "70") (ifseqformula "34"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_4.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "43") (ifseqformula "54"))
                                                   (rule "close" (formula "46") (ifseqformula "9"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "arrayLengthNotNegative" (formula "21") (term "1,0"))
                                                (rule "arrayLengthNotNegative" (formula "22") (term "1,1"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "23") (term "1,1"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_or" (formula "35") (term "0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1"))
                                                (rule "shift_paren_or" (formula "57") (term "1,1"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "cut_direct" (formula "41") (term "0,0"))
                                                (branch "CUT: result_4.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or" (formula "15") (term "0,0"))
                                                   (rule "commute_or" (formula "34") (term "0,0"))
                                                   (rule "commute_or" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "33") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,0,1"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,1,1"))
                                                   (rule "shift_paren_and" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "result_4 = result_2 TRUE"
                                                      (rule "applyEqReverse" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,0,1,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "1,2,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "1,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "43") (ifseqformula "53"))
                                                      (rule "close" (formula "46") (ifseqformula "7"))
                                                   )
                                                   (branch "result_4 = result_2 FALSE"
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "58") (term "1,0,1,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "57") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_1" (formula "28") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_6" (formula "28") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet021011000000000_22" (formula "28") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet021011000000000_23" (formula "28") (term "2,0,1"))
                                                      (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_1" (formula "34") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet021011000000000_22" (formula "34") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "notLeft" (formula "34"))
                                                      (rule "replace_known_right" (formula "58") (term "0,0,0,1,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "47")))
                                                      (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_6" (formula "34") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet021011000000000_23" (formula "34") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "notLeft" (formula "34"))
                                                      (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "47")))
                                                      (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                                      (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "46"))
                                                      (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andRight" (formula "67"))
                                                      (branch "Case 1"
                                                         (rule "orRight" (formula "67"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "68") (ifseqformula "56"))
                                                         (rule "close" (formula "68") (ifseqformula "33"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "orRight" (formula "67"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "68") (ifseqformula "55"))
                                                         (rule "close" (formula "68") (ifseqformula "33"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_4.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "48") (ifseqformula "45") (ifseqformula "57"))
                                                   (rule "close" (formula "48") (ifseqformula "8"))
                                                )
                                             )
                                          )
                                          (branch "result_2 = result_1 | !result_2.<created> = TRUE FALSE"
                                             (rule "orRight" (formula "46"))
                                             (rule "notRight" (formula "47"))
                                             (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "46")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "41") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "arrayLengthIsAShort" (formula "22") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "23") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "arrayLengthNotNegative" (formula "23") (term "1,1"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or" (formula "25") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "commute_or" (formula "20") (term "0,0"))
                                             (rule "shift_paren_or" (formula "57") (term "0,1"))
                                             (rule "commute_or_2" (formula "32") (term "0"))
                                             (rule "shift_paren_or" (formula "57") (term "1,1"))
                                             (rule "commute_or_2" (formula "33") (term "0"))
                                             (rule "commute_or" (formula "46") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: result_4.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "32") (term "0,0"))
                                                (rule "commute_or" (formula "33") (term "0,0"))
                                                (rule "shift_paren_or" (formula "57") (term "0,0,1"))
                                                (rule "shift_paren_or" (formula "57") (term "0,1,1"))
                                                (rule "shift_paren_and" (formula "57"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "result_4 = result_2 TRUE"
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "0,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "1,2,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "44") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "43") (term "1,1,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "60") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "1,2,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "59") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "60")))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "38"))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "28"))
                                                   (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "replace_known_left" (formula "44") (term "0,0,1") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")))
                                                   (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1"))
                                                   (rule "nonNull" (formula "44") (term "1,1") (inst "i=i"))
                                                   (rule "greater_literals" (formula "44") (term "0,1,1,1"))
                                                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                                   (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,1"))
                                                   (rule "nnf_imp2or" (formula "44") (term "0,0"))
                                                   (rule "nnf_imp2or" (formula "44") (term "0,0,1"))
                                                   (rule "nnf_imp2or" (formula "44") (term "0,1,1"))
                                                   (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "44") (term "0,0,0,1"))
                                                   (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1"))
                                                   (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1"))
                                                   (rule "nnf_notAnd" (formula "44") (term "0,0,1,1"))
                                                   (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,1"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,1"))
                                                   (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,1"))
                                                   (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,1"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,0,0,1,1"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_1" (formula "29") (term "1,0,1"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_6" (formula "29") (term "2,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "29") (term "1,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "29") (term "2,0,1"))
                                                   (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "andRight" (formula "44"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "44") (inst "sk=i_0_3"))
                                                      (rule "orRight" (formula "44"))
                                                      (rule "orRight" (formula "44"))
                                                      (rule "inEqSimp_leqRight" (formula "46"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "45"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "46"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1195"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1196"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "47"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "true_left" (formula "46"))
                                                      (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "allLeft" (formula "45") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_1" (formula "45") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "45") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "45") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_6" (formula "45") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "45") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "45") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_6" (formula "41") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "41") (term "1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,2,2,0,1"))
                                                      (rule "add_literals" (formula "41") (term "0,0,2,2,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1197"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")) (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                      (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                      (rule "hideAuxiliaryEq" (formula "41"))
                                                      (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "56") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "56") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1198"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "67"))
                                                      (rule "replace_known_right" (formula "68") (term "0,0,0,1,0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "57")))
                                                      (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                      (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "56") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1199"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "68"))
                                                      (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "57")))
                                                      (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_0_3)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "31") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "notLeft" (formula "31"))
                                                      (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_0_3)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                      (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "56") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1200"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "70"))
                                                      (rule "allLeft" (formula "56") (inst "t=i_0_3"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "56") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "56") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "notLeft" (formula "56"))
                                                      (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1201"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_5" (formula "53") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_7" (formula "53") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_24" (formula "53") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "53") (term "2,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "53") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "53") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "53") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "53") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "allLeft" (formula "54") (inst "t=i_0_3"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_28" (formula "54") (term "2,0,1"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_26" (formula "54") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_29" (formula "54") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_27" (formula "54") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "54") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "54") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "allLeft" (formula "57") (inst "t=i_101"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_5" (formula "57") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_24" (formula "57") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "57") (term "0,0,0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "true_left" (formula "57"))
                                                      (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "replaceKnownSelect_taclet21011000000000_7" (formula "57") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "57") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "57") (term "0,0,0") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "true_left" (formula "57"))
                                                      (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_3)"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_28" (formula "57") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_29" (formula "57") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "57") (term "0,0,0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "true_left" (formula "57"))
                                                      (rule "allLeft" (formula "57") (inst "t=i_0_3"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_26" (formula "57") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_27" (formula "57") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "57") (term "0,0,0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "true_left" (formula "57"))
                                                      (rule "allLeft" (formula "31") (inst "t=i_0_3"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "31") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "notLeft" (formula "31"))
                                                      (rule "allLeft" (formula "42") (inst "t=i_0_3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=arr_1202"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "69")) (ifInst ""  (formula "76")) (ifInst ""  (formula "11")))
                                                      (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                      (rule "hideAuxiliaryEq" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_1203"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "69")) (ifInst ""  (formula "76")) (ifInst ""  (formula "11")))
                                                      (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "42"))
                                                      (rule "hideAuxiliaryEq" (formula "42"))
                                                      (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_3)"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_42" (formula "47") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_43" (formula "47") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "true_left" (formula "47"))
                                                      (rule "allLeft" (formula "47") (inst "t=i_0_3"))
                                                      (rule "replaceKnownSelect_taclet000121011000000000_40" (formula "47") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_41" (formula "47") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "true_left" (formula "47"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "18"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "2,0") (ifseqformula "19"))
                                                      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                      (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "cut_direct" (formula "47") (term "0"))
                                                      (branch "CUT: result_2.length <= 2 + i_101 TRUE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq0" (formula "48"))
                                                         (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                         (rule "add_literals" (formula "48") (term "1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "0"))
                                                         (rule "qeq_literals" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0,0"))
                                                         (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "62") (term "1,1,1,0,0") (ifseqformula "19"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "62") (term "0,1,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20"))
                                                         (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                         (rule "add_literals" (formula "20") (term "1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "0"))
                                                         (rule "leq_literals" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "48") (term "1,1,1,0,0") (ifseqformula "19"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "allLeft" (formula "48") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1208"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "75")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                         (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1209"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "77")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                         (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1210"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "79")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "54") (inst "t=i_0_3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1211"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "81")) (ifInst ""  (formula "2")))
                                                         (rule "allLeft" (formula "58") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1212"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "96")) (ifInst ""  (formula "7")))
                                                         (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                         (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_1213"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "98")) (ifInst ""  (formula "7")))
                                                         (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                         (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_1214"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "100")) (ifInst ""  (formula "7")))
                                                         (rule "allLeft" (formula "64") (inst "t=i_0_3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_1215"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "102")) (ifInst ""  (formula "7")))
                                                         (rule "allLeft" (formula "29") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_0_3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "63") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_1216"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "98")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                         (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_1217"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "100")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                         (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_1218"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "102")) (ifInst ""  (formula "1")))
                                                         (rule "allLeft" (formula "69") (inst "t=i_0_3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "69"))
                                                         (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_1219"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "104")) (ifInst ""  (formula "1")))
                                                         (rule "andRight" (formula "110"))
                                                         (branch "Case 1"
                                                            (rule "orRight" (formula "110"))
                                                            (rule "orRight" (formula "110"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "111") (ifseqformula "99"))
                                                            (rule "close" (formula "111") (ifseqformula "84"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "orRight" (formula "110"))
                                                            (rule "orRight" (formula "110"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "111") (ifseqformula "98"))
                                                            (rule "close" (formula "111") (ifseqformula "84"))
                                                         )
                                                      )
                                                      (branch "CUT: result_2.length <= 2 + i_101 FALSE"
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_leqRight" (formula "66"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "allLeft" (formula "50") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_1204"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "77")) (ifInst ""  (formula "3")))
                                                         (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                         (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_1205"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "79")) (ifInst ""  (formula "3")))
                                                         (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                         (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_1206"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "81")) (ifInst ""  (formula "3")))
                                                         (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_0_3)"))
                                                         (rule "replaceKnownSelect_taclet000121011000000000_28" (formula "68") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet000121011000000000_29" (formula "68") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "68") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                         (rule "add_literals" (formula "68") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "68") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "68") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "68") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "68") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "pullOutSelect" (formula "68") (term "2,0,1") (inst "selectSK=arr_1207"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "applyEqReverse" (formula "69") (term "2,0,1") (ifseqformula "68"))
                                                         (rule "hideAuxiliaryEq" (formula "68"))
                                                         (rule "andRight" (formula "89"))
                                                         (branch "Case 1"
                                                            (rule "orRight" (formula "89"))
                                                            (rule "orRight" (formula "89"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "90") (ifseqformula "78"))
                                                            (rule "close" (formula "90") (ifseqformula "62"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "orRight" (formula "89"))
                                                            (rule "orRight" (formula "89"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "90") (ifseqformula "77"))
                                                            (rule "close" (formula "90") (ifseqformula "62"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "44"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "44") (inst "sk=i_103"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "inEqSimp_leqRight" (formula "46"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "45"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "46"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1182"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1183"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "47"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_1" (formula "45") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "45") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_6" (formula "45") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "45") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_6" (formula "41") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "41") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "41") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1184"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")) (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                         (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                         (rule "hideAuxiliaryEq" (formula "41"))
                                                         (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1185"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "67"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,1,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1186"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "68"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_103)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1187"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "69"))
                                                         (rule "allLeft" (formula "56") (inst "t=i_103"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "56") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notLeft" (formula "56"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1188"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "49") (ifseqformula "70"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_5" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_24" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_7" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_103)"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_28" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_29" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_103"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_26" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_27" (formula "55") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_5" (formula "53") (term "1,0,1"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_7" (formula "53") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_24" (formula "53") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "53") (term "2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                                         (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "53") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "53") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "allLeft" (formula "54") (inst "t=i_103"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_26" (formula "54") (term "1,0,1"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_28" (formula "54") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_27" (formula "54") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_29" (formula "54") (term "2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "54") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "54") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "54") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_103)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "31") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "31") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "31") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "allLeft" (formula "31") (inst "t=i_103"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "31") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_103"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=arr_1189"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "69")) (ifInst ""  (formula "76")) (ifInst ""  (formula "11")))
                                                         (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                         (rule "hideAuxiliaryEq" (formula "42"))
                                                         (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_1190"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "69")) (ifInst ""  (formula "76")) (ifInst ""  (formula "11")))
                                                         (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "42"))
                                                         (rule "hideAuxiliaryEq" (formula "42"))
                                                         (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_103)"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_42" (formula "47") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_43" (formula "47") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_103"))
                                                         (rule "replaceKnownSelect_taclet0100121011000000000_40" (formula "47") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100121011000000000_41" (formula "47") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "2,0") (ifseqformula "18"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0") (ifseqformula "19"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "69"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_101"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "cut_direct" (formula "47") (term "0"))
                                                         (branch "CUT: result_2.length <= 2 + i_101 TRUE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "47"))
                                                            (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "66") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq0" (formula "48"))
                                                            (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                                            (rule "add_literals" (formula "48") (term "1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0"))
                                                            (rule "qeq_literals" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0"))
                                                            (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "62") (term "1,1,1,0,0") (ifseqformula "19"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "1,1,0,0"))
                                                            (rule "add_literals" (formula "62") (term "0,1,1,0,0"))
                                                            (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20"))
                                                            (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "1,0"))
                                                            (rule "times_zero_1" (formula "20") (term "0"))
                                                            (rule "leq_literals" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "48") (term "1,1,1,0,0") (ifseqformula "19"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                                            (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "19"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                                                            (rule "mul_literals" (formula "9") (term "0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0"))
                                                            (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "allLeft" (formula "30") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_103)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_103)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_103"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "allLeft" (formula "56") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_1193"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "83")) (ifInst ""  (formula "2")))
                                                            (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                            (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_1194"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "51"))
                                                            (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "85")) (ifInst ""  (formula "2")))
                                                            (rule "andRight" (formula "91"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "91"))
                                                               (rule "orRight" (formula "91"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "80"))
                                                               (rule "close" (formula "92") (ifseqformula "65"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "91"))
                                                               (rule "orRight" (formula "91"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "79"))
                                                               (rule "close" (formula "92") (ifseqformula "65"))
                                                            )
                                                         )
                                                         (branch "CUT: result_2.length <= 2 + i_101 FALSE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_leqRight" (formula "66"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "qeq_literals" (formula "20") (term "0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "allLeft" (formula "31") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_103)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_103"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "allLeft" (formula "57") (inst "t=i_101"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_1191"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "95")) (ifInst ""  (formula "8")))
                                                            (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_103)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "allLeft" (formula "39") (inst "t=i_103"))
                                                            (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), i_101)"))
                                                            (rule "replaceKnownSelect_taclet21011000000000_7" (formula "72") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "72") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "72") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                            (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "72") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "72") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "72") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "72") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "72") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "72"))
                                                            (rule "inEqSimp_contradInEq1" (formula "72") (term "0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "72") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "72"))
                                                            (rule "pullOutSelect" (formula "72") (term "2,0") (inst "selectSK=arr_1192"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "72"))
                                                            (rule "applyEqReverse" (formula "73") (term "2,0") (ifseqformula "72"))
                                                            (rule "hideAuxiliaryEq" (formula "72"))
                                                            (rule "andRight" (formula "93"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "93"))
                                                               (rule "orRight" (formula "93"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "82"))
                                                               (rule "close" (formula "94") (ifseqformula "66"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "orRight" (formula "93"))
                                                               (rule "orRight" (formula "93"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "81"))
                                                               (rule "close" (formula "94") (ifseqformula "66"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "44") (inst "sk=i_102"))
                                                         (rule "orRight" (formula "44"))
                                                         (rule "notRight" (formula "45"))
                                                         (rule "orRight" (formula "45"))
                                                         (rule "inEqSimp_leqRight" (formula "45"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1179"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "39") (ifseqformula "54"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                         (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "48"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_1" (formula "45") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "45") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_6" (formula "45") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "45") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_6" (formula "41") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "41") (term "1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,2,2,0,1"))
                                                         (rule "add_literals" (formula "41") (term "0,0,2,2,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1180"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")) (ifInst ""  (formula "67")) (ifInst ""  (formula "11")))
                                                         (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                         (rule "hideAuxiliaryEq" (formula "41"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_101"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_5" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_24" (formula "55") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_101)"))
                                                         (rule "replaceKnownSelect_taclet21011000000000_7" (formula "55") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00121011000000000_25" (formula "55") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,0,1") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "57")))
                                                         (rule "allLeft" (formula "55") (inst "t=i_102"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1181"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                   )
                                                )
                                                (branch "result_4 = result_2 FALSE"
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "58") (term "1,0,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "0,0,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0,1,0,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "allLeft" (formula "28") (inst "t=i_101"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_1" (formula "28") (term "1,0,1"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_6" (formula "28") (term "2,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "28") (term "1,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "28") (term "2,0,1"))
                                                   (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_101"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_1" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_22" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "47")))
                                                   (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_101)"))
                                                   (rule "replaceKnownSelect_taclet21011000000000_6" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121011000000000_23" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "replace_known_right" (formula "59") (term "0,0,0,1") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "47")))
                                                   (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                                   (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "46"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "andRight" (formula "67"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "67"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "67") (ifseqformula "56"))
                                                      (rule "close" (formula "67") (ifseqformula "14"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "orRight" (formula "67"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "67") (ifseqformula "55"))
                                                      (rule "close" (formula "67") (ifseqformula "14"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_4.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "48") (ifseqformula "45") (ifseqformula "57"))
                                                (rule "close" (formula "48") (ifseqformula "9"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "7"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "12")))
                                    (rule "true_left" (formula "6"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "17"))
                                    (rule "translateJavaSubInt" (formula "31") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "31") (term "0,2,2,0,1,0"))
                                    (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                                    (rule "translateJavaAddInt" (formula "20") (term "0,2,2,0,1,0"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,2,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,2,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "34") (inst "i=i"))
                                    (rule "greater_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "sub_literals" (formula "34") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "2,1") (ifseqformula "1") (ifseqformula "44"))
                                    (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "19") (term "2,1") (ifseqformula "25") (ifseqformula "39"))
                                    (rule "nonNull" (formula "36") (inst "i=i"))
                                    (rule "sub_literals" (formula "36") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "greater_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1"))
                                    (rule "array2seqDef" (formula "30") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "30") (term "2,1") (ifseqformula "25") (ifseqformula "38"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allRight" (formula "37") (inst "sk=i_96"))
                                    (rule "impRight" (formula "37"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "39"))
                                    (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "28") (ifseqformula "38"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "4") (ifseqformula "42"))
                                    (rule "nonNull" (formula "17") (inst "i=i"))
                                    (rule "greater_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "42")))
                                    (rule "sub_literals" (formula "17") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "22") (term "0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "22") (term "2,0") (ifseqformula "28") (ifseqformula "38"))
                                    (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_12"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "37") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,2,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "0,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "34") (term "1,2,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "24") (term "1,0,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "33") (term "1,2,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "44") (term "1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1125"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "30") (ifseqformula "39"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "29") (ifseqformula "39"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (rule "ifEqualsNull" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_1126"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "34"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "8"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "nonNull" (formula "15") (inst "i=i"))
                                    (rule "greater_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "53")))
                                    (rule "sub_literals" (formula "15") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "53"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "13") (inst "i=i"))
                                    (rule "greater_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "14") (inst "i=i"))
                                    (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "greater_literals" (formula "14") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "28") (ifseqformula "8"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "nonNull" (formula "30") (inst "i=i"))
                                    (rule "greater_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "33") (ifseqformula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "29") (inst "i=i"))
                                    (rule "greater_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "33") (ifseqformula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "28") (inst "i=i"))
                                    (rule "greater_literals" (formula "28") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "33") (ifseqformula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_15"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_15"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_15"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_15"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_15"))
                                    (rule "applyEq" (formula "31") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_15"))
                                    (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_15"))
                                    (rule "applyEq" (formula "29") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "8")))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "cnf_rightDist" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "arrayLengthIsAShort" (formula "27") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "arrayLengthNotNegative" (formula "27") (term "1,1"))
                                    (rule "arrayLengthIsAShort" (formula "41") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "arrayLengthNotNegative" (formula "41") (term "1,0"))
                                    (rule "cut_direct" (formula "26") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "2"))
                                       (rule "commute_or" (formula "13") (term "0,0"))
                                       (rule "commute_or" (formula "47") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "34") (term "0"))
                                       (rule "commute_or" (formula "23") (term "0,0"))
                                       (rule "commute_or" (formula "31") (term "0,0"))
                                       (rule "commute_or" (formula "46") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "commute_or_2" (formula "34") (term "0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "commute_or" (formula "4"))
                                       (rule "commute_or" (formula "3"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "cut_direct" (formula "42") (term "0,0"))
                                       (branch "CUT: result_4.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or" (formula "35") (term "0,0"))
                                          (rule "commute_or" (formula "34") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or" (formula "2"))
                                          (rule "commute_or" (formula "33") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "result_2 = result_1 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "31") (term "1,2,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "61") (term "3,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "1"))
                                             (rule "commute_or" (formula "4"))
                                             (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "59") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "60")))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "38"))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "27"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "46") (term "1,0,1") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "8")) (ifInst ""  (formula "36")))
                                             (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,2,2,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,2,2,0,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                             (rule "nonNull" (formula "46") (term "0,1,1,1") (inst "i=i"))
                                             (rule "greater_literals" (formula "46") (term "0,1,0,1,1,1"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                             (rule "sub_literals" (formula "46") (term "2,1,0,0,1,1,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1,1"))
                                             (rule "nonNull" (formula "46") (term "1,1,1,1") (inst "i=i"))
                                             (rule "greater_literals" (formula "46") (term "0,1,1,1,1,1"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "54")))
                                             (rule "sub_literals" (formula "46") (term "2,1,0,1,1,1,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,1,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,1,1"))
                                             (rule "nnf_imp2or" (formula "46") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "46") (term "0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1"))
                                             (rule "nnf_imp2or" (formula "46") (term "0,0,1,1,1"))
                                             (rule "nnf_imp2or" (formula "46") (term "0,1,1,1,1"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,1,1,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1,1"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,1,1,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,1,1,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,1,1,1,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,0,1,1,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,1,1,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,1,1,1"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,1,1,1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "cut_direct" (formula "9") (term "0,0"))
                                             (branch "CUT: result_4 = result_1 TRUE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "applyEq" (formula "52") (term "0,1,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "49") (term "0,1,1,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "49") (term "1,2,0,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "47") (term "1,2,1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "47") (term "0,1,1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "47") (term "1,2,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "47") (term "1,1,0,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "50") (term "1,2,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "50") (term "1,0,0,1,0,0,1,1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "50") (term "1,1,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "50") (term "0,1,1,0,0,0,1,1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,0") (ifseqformula "9"))
                                                (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "63") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "64")))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "44"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "34"))
                                                (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,1") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "32")) (ifInst ""  (formula "42")))
                                                (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "50") (term "0,2,2,0,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "50") (term "0,2,2,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "50") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                (rule "nonNull" (formula "50") (term "1,1") (inst "i=i"))
                                                (rule "greater_literals" (formula "50") (term "0,1,1,1"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "58")))
                                                (rule "sub_literals" (formula "50") (term "2,1,0,1,1"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1"))
                                                (rule "nnf_imp2or" (formula "50") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "50") (term "0,0,1"))
                                                (rule "nnf_imp2or" (formula "50") (term "0,1,1"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,1"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,1"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,1"))
                                                (rule "andRight" (formula "50"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "50") (inst "sk=i_0_1"))
                                                   (rule "orRight" (formula "50"))
                                                   (rule "orRight" (formula "50"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "52"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1155"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1156"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "notLeft" (formula "42"))
                                                   (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_1157"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "22") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "allLeft" (formula "26") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1158"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                                                   (rule "allLeft" (formula "46") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1159"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "10")))
                                                   (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                   (rule "replaceKnownSelect_taclet00000111000000000_24" (formula "41") (term "1,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000111000000000_25" (formula "41") (term "1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1160"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                   (rule "hideAuxiliaryEq" (formula "41"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1161"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "64")) (ifInst ""  (formula "4")))
                                                   (rule "allLeft" (formula "42") (inst "t=i_0_1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=arr_1162"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                   (rule "hideAuxiliaryEq" (formula "42"))
                                                   (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_1163"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "42"))
                                                   (rule "hideAuxiliaryEq" (formula "42"))
                                                   (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0_1)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_0_1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_1)"))
                                                   (rule "replaceKnownSelect_taclet00000111000000000_34" (formula "51") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000111000000000_35" (formula "51") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "51") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "notLeft" (formula "51"))
                                                   (rule "allLeft" (formula "51") (inst "t=i_0_1"))
                                                   (rule "replaceKnownSelect_taclet00000111000000000_32" (formula "51") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000111000000000_33" (formula "51") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "51") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "51") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "notLeft" (formula "51"))
                                                   (rule "allLeft" (formula "61") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "61") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "61") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "61") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "notLeft" (formula "61"))
                                                   (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_1164"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "54") (ifseqformula "75"))
                                                   (rule "close" (formula "62") (ifseqformula "13"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allLeft" (formula "30") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "allLeft" (formula "39") (inst "t=i_96"))
                                                   (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "39") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "39") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "notLeft" (formula "39"))
                                                   (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=arr_1138"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "andRight" (formula "52"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "52") (inst "sk=i_100"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "inEqSimp_leqRight" (formula "54"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "53"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "54"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1145"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1146"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "43") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1147"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                                                      (rule "allLeft" (formula "46") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1148"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "10")))
                                                      (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                      (rule "hideAuxiliaryEq" (formula "46"))
                                                      (rule "allLeft" (formula "42") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1149"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "63")) (ifInst ""  (formula "4")))
                                                      (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                      (rule "replaceKnownSelect_taclet10000111000000000_20" (formula "41") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet10000111000000000_21" (formula "41") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1150"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                      (rule "hideAuxiliaryEq" (formula "41"))
                                                      (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_100)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "50") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1151"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_100"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "50") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1152"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "allLeft" (formula "42") (inst "t=i_100"))
                                                      (rule "replaceKnownSelect_taclet010000111000000000_32" (formula "42") (term "2,0,1"))
                                                      (rule "replaceKnownSelect_taclet010000111000000000_34" (formula "42") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000111000000000_33" (formula "42") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000111000000000_35" (formula "42") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_100)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "36") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "allLeft" (formula "36") (inst "t=i_100"))
                                                      (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "36") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "36") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "36") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "notLeft" (formula "36"))
                                                      (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_100)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_1153"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "54") (ifseqformula "75"))
                                                      (rule "allLeft" (formula "60") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                      (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "60") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "notLeft" (formula "60"))
                                                      (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_1154"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "63") (ifseqformula "14"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "52") (inst "sk=i_99"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "notRight" (formula "53"))
                                                      (rule "orRight" (formula "53"))
                                                      (rule "inEqSimp_leqRight" (formula "53"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "54"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1139"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "45") (ifseqformula "61"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "44") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1140"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "10")))
                                                      (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                                      (rule "hideAuxiliaryEq" (formula "44"))
                                                      (rule "allLeft" (formula "43") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1141"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                                                      (rule "allLeft" (formula "42") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1142"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "63")) (ifInst ""  (formula "4")))
                                                      (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                      (rule "replaceKnownSelect_taclet10000111000000000_20" (formula "41") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet10000111000000000_21" (formula "41") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1143"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                      (rule "hideAuxiliaryEq" (formula "41"))
                                                      (rule "allLeft" (formula "60") (inst "t=i_96"))
                                                      (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                      (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "60") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "notLeft" (formula "60"))
                                                      (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_1144"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "61") (term "0") (ifseqformula "53") (ifseqformula "70"))
                                                      (rule "close" (formula "61") (ifseqformula "13"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_4 = result_1 FALSE"
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "allLeft" (formula "40") (inst "t=i_96"))
                                                (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                (rule "leq_literals" (formula "40") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notLeft" (formula "40"))
                                                (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_1137"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "54") (ifseqformula "10"))
                                             )
                                          )
                                          (branch "result_2 = result_1 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "36") (inst "t=i_96"))
                                             (rule "replaceKnownSelect_taclet111000000000_4" (formula "36") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100111000000000_19" (formula "36") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                             (rule "leq_literals" (formula "36") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "notLeft" (formula "36"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "44") (term "1,2,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "45") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "41") (term "1,2,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "58") (term "1") (ifseqformula "2"))
                                             (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "60") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "61")))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "39"))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "27"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "45") (term "0,0,1") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "25")) (ifInst ""  (formula "37")))
                                             (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,2,2,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,2,2,0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1"))
                                             (rule "nonNull" (formula "45") (term "1,1") (inst "i=i"))
                                             (rule "greater_literals" (formula "45") (term "0,1,1,1"))
                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "54")))
                                             (rule "sub_literals" (formula "45") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "45") (term "0,0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "45") (term "0,1,1"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,1"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,1"))
                                             (rule "mul_literals" (formula "45") (term "1,0,0,0,1,1"))
                                             (rule "andRight" (formula "45"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "45") (inst "sk=i_0_0"))
                                                (rule "orRight" (formula "45"))
                                                (rule "orRight" (formula "45"))
                                                (rule "inEqSimp_leqRight" (formula "47"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_geqRight" (formula "47"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "47"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1132"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1133"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                                (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "47"))
                                                (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                (rule "replaceKnownSelect_taclet111000000000_4" (formula "41") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100111000000000_19" (formula "41") (term "1,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1134"))
                                                (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "59")) (ifInst ""  (formula "66")) (ifInst ""  (formula "38")))
                                                (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                (rule "hideAuxiliaryEq" (formula "41"))
                                                (rule "allLeft" (formula "42") (inst "t=i_0_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "42") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_1135"))
                                                (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")) (ifInst ""  (formula "67")) (ifInst ""  (formula "38")))
                                                (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=arr_1136"))
                                                (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")) (ifInst ""  (formula "67")) (ifInst ""  (formula "38")))
                                                (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                                (rule "hideAuxiliaryEq" (formula "42"))
                                                (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "replaceKnownSelect_taclet0100111000000000_26" (formula "47") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100111000000000_27" (formula "47") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "47") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "47") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                                (rule "leq_literals" (formula "47") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "47") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "allLeft" (formula "47") (inst "t=i_0_0"))
                                                (rule "replaceKnownSelect_taclet0100111000000000_28" (formula "47") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100111000000000_29" (formula "47") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "47") (term "0,0,1"))
                                                (rule "leq_literals" (formula "47") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "allLeft" (formula "54") (inst "t=i_0_0"))
                                                (rule "replaceKnownSelect_taclet0100111000000000_20" (formula "54") (term "2,0,1"))
                                                (rule "replaceKnownSelect_taclet0100111000000000_22" (formula "54") (term "1,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100111000000000_21" (formula "54") (term "2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100111000000000_23" (formula "54") (term "1,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "54") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "54") (term "0,0,0"))
                                                (rule "leq_literals" (formula "54") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "allLeft" (formula "58") (inst "t=i_96"))
                                                (rule "replaceKnownSelect_taclet111000000000_3" (formula "58") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "58") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "inEqSimp_subsumption0" (formula "41") (term "0") (ifseqformula "58"))
                                                (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "41") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "57") (ifseqformula "16"))
                                                (rule "andLeft" (formula "57"))
                                                (rule "inEqSimp_homoInEq1" (formula "57"))
                                                (rule "polySimp_pullOutFactor1b" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0"))
                                                (rule "leq_literals" (formula "57"))
                                                (rule "closeFalse" (formula "57"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "45"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "45") (inst "sk=i_98"))
                                                   (rule "orRight" (formula "45"))
                                                   (rule "orRight" (formula "45"))
                                                   (rule "inEqSimp_leqRight" (formula "47"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "46"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "47"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_1129"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_1130"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                                   (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "48"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                   (rule "replaceKnownSelect_taclet111000000000_4" (formula "41") (term "1,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100111000000000_19" (formula "41") (term "1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1131"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "59")) (ifInst ""  (formula "66")) (ifInst ""  (formula "38")))
                                                   (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                   (rule "hideAuxiliaryEq" (formula "41"))
                                                   (rule "allLeft" (formula "56") (inst "t=i_96"))
                                                   (rule "replaceKnownSelect_taclet111000000000_3" (formula "56") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "56") (term "0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "56") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "56"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0"))
                                                   (rule "leq_literals" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "45") (inst "sk=i_97"))
                                                   (rule "orRight" (formula "45"))
                                                   (rule "notRight" (formula "46"))
                                                   (rule "orRight" (formula "46"))
                                                   (rule "inEqSimp_geqRight" (formula "47"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "47"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1127"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "40") (ifseqformula "56"))
                                                   (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "47"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "true_left" (formula "46"))
                                                   (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "12"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "14"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "41") (inst "t=i_96"))
                                                   (rule "replaceKnownSelect_taclet111000000000_4" (formula "41") (term "1,0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100111000000000_19" (formula "41") (term "1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "pullOutSelect" (formula "41") (term "2,0,1") (inst "selectSK=arr_1128"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "59")) (ifInst ""  (formula "66")) (ifInst ""  (formula "38")))
                                                   (rule "applyEqReverse" (formula "42") (term "2,0,1") (ifseqformula "41"))
                                                   (rule "hideAuxiliaryEq" (formula "41"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_97"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "notLeft" (formula "30"))
                                                   (rule "allLeft" (formula "56") (inst "t=i_96"))
                                                   (rule "replaceKnownSelect_taclet111000000000_3" (formula "56") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "56") (term "0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "56") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "56") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "56") (term "0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "closeFalse" (formula "56"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: result_4.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "46") (ifseqformula "57"))
                                          (rule "close" (formula "49") (ifseqformula "9"))
                                       )
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_or_2" (formula "13") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "commute_or" (formula "12") (term "0,0"))
                                       (rule "commute_or" (formula "46") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or" (formula "30") (term "0,0"))
                                       (rule "commute_or" (formula "45") (term "0,0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "commute_or_2" (formula "31") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "cut_direct" (formula "40") (term "0,0"))
                                       (branch "CUT: result_4.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or" (formula "2"))
                                          (rule "commute_or" (formula "34") (term "0,0"))
                                          (rule "commute_or" (formula "33") (term "0,0"))
                                          (rule "commute_or" (formula "32") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "8"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "allLeft" (formula "36") (inst "t=i_96"))
                                          (rule "replaceKnownSelect_taclet111000000000_4" (formula "36") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111000000000_19" (formula "36") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "36") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "45") (term "1") (ifseqformula "2"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "49") (ifseqformula "45") (ifseqformula "56"))
                                          (rule "close" (formula "49") (ifseqformula "8"))
                                       )
                                       (branch "CUT: result_4.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "44") (ifseqformula "56"))
                                          (rule "close" (formula "47") (ifseqformula "7"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "7"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "12")))
                           (rule "wellFormedAnonEQ" (formula "36") (ifseqformula "28"))
                           (rule "true_left" (formula "6"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "27"))
                           (rule "wellFormedAnonEQ" (formula "35") (term "0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "17"))
                           (rule "translateJavaSubInt" (formula "31") (term "1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "31") (term "0,2,2,0,1,0"))
                           (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "20") (term "0,2,2,0,1,0"))
                           (rule "eqSymm" (formula "32"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
                           (rule "closeTrue" (formula "35"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "8"))
                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")))
                        (rule "true_left" (formula "7"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1") (ifseqformula "18"))
                        (rule "translateJavaSubInt" (formula "32") (term "1,1,0,0"))
                        (rule "translateJavaAddInt" (formula "32") (term "0,2,2,0,1,0"))
                        (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                        (rule "translateJavaAddInt" (formula "21") (term "0,2,2,0,1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "close" (formula "46") (ifseqformula "2"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "7"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
                     (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "16") (term "0,2,2,0,1,0,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "19"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1,0") (ifseqformula "19"))
                     (rule "andLeft" (formula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,1,0") (ifseqformula "15"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "15"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "20"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "20"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "eqSymm" (formula "31"))
                     (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "replace_known_left" (formula "44") (term "1,1,1") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "35")))
                     (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,2,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,2,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "14") (term "2,1") (ifseqformula "1") (ifseqformula "42"))
                     (rule "array2seqDef" (formula "14") (term "0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "1") (ifseqformula "38"))
                     (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                     (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "18") (term "2,1") (ifseqformula "24") (ifseqformula "38"))
                     (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "29") (term "2,1") (ifseqformula "24") (ifseqformula "36"))
                     (rule "array2seqDef" (formula "29") (term "0") (inst "u=u"))
                     (rule "nonNull" (formula "15") (inst "i=i"))
                     (rule "greater_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "38")))
                     (rule "sub_literals" (formula "15") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "38"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "21") (inst "i=i"))
                     (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "greater_literals" (formula "21") (term "0,1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "notLeft" (formula "21"))
                     (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                     (rule "narrowSelectArrayType" (formula "18") (term "2,0") (ifseqformula "24") (ifseqformula "35"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "33") (inst "i=i"))
                     (rule "greater_literals" (formula "33") (term "0,1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "sub_literals" (formula "33") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "allRight" (formula "46") (inst "sk=i_95"))
                     (rule "impRight" (formula "46"))
                     (rule "notRight" (formula "47"))
                     (rule "andLeft" (formula "2"))
                     (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "pullOutSelect" (formula "30") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_10"))
                     (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "30"))
                     (rule "applyEq" (formula "33") (term "1,2,1") (ifseqformula "30"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "42") (term "0") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "eqSymm" (formula "30") (term "0,0"))
                     (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "44"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "33") (term "0,1,1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "33") (term "1,2,1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_11"))
                     (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "36") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet1000000_0" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_1" (formula "1") (term "2,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "48"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "32") (term "1,2,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "9") (term "0,1,1,1,0,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "44") (term "1") (ifseqformula "34"))
                     (rule "applyEq" (formula "9") (term "1,0,0,1,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1122"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_imp2or" (formula "33") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "36") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                     (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "31"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "12") (ifseqformula "6"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "13"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "13"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "14"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "14"))
                     (rule "andLeft" (formula "12"))
                     (rule "nonNull" (formula "14") (inst "i=i"))
                     (rule "greater_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "51")))
                     (rule "sub_literals" (formula "14") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "51"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "40"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "12") (inst "i=i"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "40"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or_2" (formula "19") (term "0"))
                     (rule "commute_or_2" (formula "25") (term "0"))
                     (rule "commute_or_2" (formula "37") (term "0"))
                     (rule "commute_or_2" (formula "36") (term "0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "6"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "26"))
                     (rule "andLeft" (formula "24"))
                     (rule "nonNull" (formula "26") (inst "i=i"))
                     (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "30") (ifseqformula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "30") (ifseqformula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "30") (ifseqformula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                     (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                     (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_14"))
                     (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "27") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                     (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_14"))
                     (rule "applyEq" (formula "26") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "55"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                     (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_14"))
                     (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "52"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "commute_or_2" (formula "9") (term "0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "29") (term "0"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "1,1"))
                     (rule "arrayLengthIsAShort" (formula "19") (term "1,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "19") (term "1,0"))
                     (rule "arrayLengthIsAShort" (formula "20") (term "1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "arrayLengthNotNegative" (formula "24") (term "1,0"))
                     (rule "arrayLengthIsAShort" (formula "25") (term "1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthNotNegative" (formula "38") (term "1,0"))
                     (rule "arrayLengthIsAShort" (formula "39") (term "1,0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "cut_direct" (formula "34") (term "0"))
                     (branch "CUT: result_2.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "commute_or" (formula "42") (term "0,0"))
                        (rule "commute_or_2" (formula "29") (term "0"))
                        (rule "commute_or" (formula "9") (term "0,0"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "cut_direct" (formula "37") (term "0,0"))
                        (branch "CUT: result_4.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or" (formula "12") (term "0,0"))
                           (rule "commute_or" (formula "29") (term "0,0"))
                           (rule "commute_or" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "10") (inst "t=i_95"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "10") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "allLeft" (formula "33") (inst "t=i_95"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1"))
                           (rule "leq_literals" (formula "33") (term "0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1124"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "39")))
                           (rule "allLeft" (formula "44") (inst "t=i_95"))
                           (rule "replaceKnownSelect_taclet1000000_4" (formula "44") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1000000_5" (formula "44") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "44") (term "0"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "closeFalse" (formula "44"))
                        )
                        (branch "CUT: result_4.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "41") (ifseqformula "52"))
                           (rule "close" (formula "45") (ifseqformula "4"))
                        )
                     )
                     (branch "CUT: result_2.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "43") (term "0,0"))
                        (rule "commute_or" (formula "42") (term "0,0"))
                        (rule "commute_or_2" (formula "29") (term "0"))
                        (rule "commute_or" (formula "9") (term "0,0"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "cut_direct" (formula "37") (term "0,0"))
                        (branch "CUT: result_4.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or" (formula "12") (term "0,0"))
                           (rule "commute_or" (formula "29") (term "0,0"))
                           (rule "commute_or" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "27") (term "0,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "44") (inst "t=i_95"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_literals" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "44") (term "0,1"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "notLeft" (formula "44"))
                           (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1123"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "36") (ifseqformula "54"))
                           (rule "close" (formula "46") (ifseqformula "2"))
                        )
                        (branch "CUT: result_4.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "41") (ifseqformula "53"))
                           (rule "close" (formula "45") (ifseqformula "4"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "7"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "16") (term "0,2,2,0,1,0,0,1,0,1,1"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,1,0,0,0") (ifseqformula "15"))
                  (rule "andLeft" (formula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,1,0") (ifseqformula "15"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "20"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "20"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "allRight" (formula "44") (inst "sk=f_0"))
                  (rule "allRight" (formula "44") (inst "sk=o_0"))
                  (rule "orRight" (formula "44"))
                  (rule "orRight" (formula "44"))
                  (rule "eqSymm" (formula "31"))
                  (rule "eqSymm" (formula "46"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "39"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,2,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,2,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "14") (term "0") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "1") (ifseqformula "37"))
                  (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "14") (term "2,1") (ifseqformula "1") (ifseqformula "42"))
                  (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                  (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "18") (term "2,1") (ifseqformula "24") (ifseqformula "37"))
                  (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "29") (term "2,1") (ifseqformula "24") (ifseqformula "36"))
                  (rule "array2seqDef" (formula "29") (term "0") (inst "u=u"))
                  (rule "nonNull" (formula "15") (inst "i=i"))
                  (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "37")))
                  (rule "greater_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "37"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                  (rule "narrowSelectArrayType" (formula "18") (term "2,0") (ifseqformula "24") (ifseqformula "35"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "33") (inst "i=i"))
                  (rule "greater_literals" (formula "33") (term "0,1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "sub_literals" (formula "33") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "33"))
                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_8"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "27"))
                  (rule "applyEq" (formula "47") (term "1") (ifseqformula "27"))
                  (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "30") (term "1,2,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "27"))
                  (rule "applyEq" (formula "23") (term "1,0,0,1,0") (ifseqformula "27"))
                  (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "eqSymm" (formula "27") (term "0,0"))
                  (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,1") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "30") (term "1,2,1") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "27"))
                  (rule "hideAuxiliaryEq" (formula "27"))
                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_9"))
                  (rule "applyEq" (formula "33") (term "1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet100000_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100000_1" (formula "1") (term "2,0"))
                  (rule "eqSymm" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "31"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "43") (term "1") (ifseqformula "31"))
                  (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "31"))
                  (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "23") (term "1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "41") (term "1") (ifseqformula "31"))
                  (rule "applyEq" (formula "29") (term "1,2,1") (ifseqformula "31"))
                  (rule "applyEq" (formula "6") (term "1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "6") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "46"))
                  (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                  (rule "replaceKnownSelect_taclet100000_4" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "closeTrue" (formula "47"))
               )
            )
            (branch "Exceptional Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "7"))
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "16") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
               (rule "andLeft" (formula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0") (ifseqformula "15"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "11"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "13"))
               (rule "notLeft" (formula "20"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "26"))
               (rule "close" (formula "30") (ifseqformula "29"))
            )
            (branch "Pre (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "7"))
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "16"))
               (rule "close" (formula "23") (ifseqformula "16"))
            )
         )
         (branch "Precondition"
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1") (ifseqformula "15"))
            (rule "wellFormedAnonEQ" (formula "22") (term "1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "14"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replace_known_left" (formula "33") (term "1,0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "25")) (ifInst ""  (formula "1")) (ifInst ""  (formula "16")) (ifInst ""  (formula "19")))
            (rule "closeTrue" (formula "33"))
         )
         (branch "Usage"
            (builtin "One Step Simplification" (formula "20"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x") (userinteraction))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1") (userinteraction))
            (rule "inequality_comparison_simple" (formula "20") (term "1") (userinteraction))
            (rule "if" (formula "20") (term "1,1") (userinteraction))
            (rule "blockThrow" (formula "20") (term "1,1,1") (userinteraction))
            (rule "methodCallParamThrow" (formula "20") (term "1,1,1") (userinteraction))
            (rule "tryCatchThrow" (formula "20") (term "1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "25"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "22"))
            (rule "notLeft" (formula "27"))
            (rule "andLeft" (formula "23"))
            (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,2,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
            (rule "pullOutSelect" (formula "42") (term "0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_6"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "34") (term "0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "33") (term "0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "27") (term "0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "23") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "28") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "0,1,0,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "23") (term "0,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "0,1,0,0,0,1,0,0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "33") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "32") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "26") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "22") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "41") (term "0,1,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "0,1,0,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "22") (term "0,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "0,1,0,0,0,1,0,0,1,0,0"))
            (rule "blockEmpty" (formula "41") (term "1"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "signedResult_2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
            (rule "narrowSelectArrayType" (formula "13") (term "2,1") (ifseqformula "1") (ifseqformula "39"))
            (rule "array2seqDef" (formula "13") (term "0") (inst "u=u"))
            (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "1") (ifseqformula "35"))
            (rule "array2seqDef" (formula "20") (term "0") (inst "u=u"))
            (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
            (rule "nonNull" (formula "14") (inst "i=i"))
            (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "35")))
            (rule "greater_literals" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "35"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "24") (inst "i=i"))
            (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "greater_literals" (formula "24") (term "0,1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_7"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "29") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "29") (term "0,1,1,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "33") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "28") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_imp2or" (formula "6") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "21") (term "0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "14") (term "0"))
            (rule "nnf_imp2or" (formula "24") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "6") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "31") (term "1"))
            (rule "commute_or_2" (formula "30"))
            (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "26") (term "0") (inst "i_0=i_0") (inst "i=i"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
            (rule "wellFormedAnon" (formula "26") (term "0,1,0"))
            (rule "wellFormedAnonEQ" (formula "26") (term "1,1,0") (ifseqformula "17"))
            (rule "wellFormedAnonEQ" (formula "26") (term "0,0,1,0") (ifseqformula "17"))
            (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0,0,1,0,0"))
            (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0,0,1,1,0,0"))
            (rule "translateJavaAddInt" (formula "26") (term "0,2,2,0,1,0,0,1,1,0,0"))
            (rule "translateJavaAddInt" (formula "26") (term "0,2,2,0,1,0,0,1,0,0"))
            (rule "eqSymm" (formula "26") (term "1"))
            (rule "replace_known_left" (formula "26") (term "0,1,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")) (ifInst ""  (formula "30")) (ifInst ""  (formula "16")))
            (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,2,2,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,2,2,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
            (rule "nonNull" (formula "26") (term "0,1,1,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "26") (term "0,1,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")))
            (rule "sub_literals" (formula "26") (term "2,1,0,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "nonNull" (formula "26") (term "1,1,1,1,0") (inst "i=i"))
            (rule "sub_literals" (formula "26") (term "2,1,0,1,1,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
            (rule "greater_literals" (formula "26") (term "0,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,0,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,0,1,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,1,1,1,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,1,1,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,1,1,1,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1,1,0"))
            (rule "commute_or_2" (formula "7") (term "0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,1,1,1,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,1,1,1,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,1,1,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,1,1,1,1,0"))
            (rule "commute_or_2" (formula "6") (term "0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "3"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "nonNull" (formula "11") (inst "i=i"))
            (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "46")))
            (rule "greater_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "46"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "10") (inst "i=i"))
            (rule "greater_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "sub_literals" (formula "10") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "35"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "9") (inst "i=i"))
            (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "35"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (ifseqformula "3"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "nonNull" (formula "27") (inst "i=i"))
            (rule "greater_literals" (formula "27") (term "0,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "sub_literals" (formula "27") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "27"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "25") (inst "i=i"))
            (rule "greater_literals" (formula "25") (term "0,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "sub_literals" (formula "25") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "26") (inst "i=i"))
            (rule "greater_literals" (formula "26") (term "0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "sub_literals" (formula "26") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "3")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "43") (term "0"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "53"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "42") (term "0"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "3")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "41") (term "0"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_8"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "40") (term "0"))
            (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_8"))
            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "52")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet2000_12" (formula "40") (term "0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "28") (term "0,1,1,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "27") (term "0,0"))
            (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "52"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "50")))
            (rule "hideAuxiliaryEq" (formula "27"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "39") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "27") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "27") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_8"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet2000_14" (formula "39") (term "0"))
            (rule "replaceKnownSelect_taclet2000_14" (formula "26") (term "0,1,1,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "25") (term "0,0"))
            (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "38") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "25") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "25") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_8"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet2000_16" (formula "38") (term "0"))
            (rule "replaceKnownSelect_taclet2000_16" (formula "27") (term "0,1,1,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
            (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "37") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "26") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "26") (term "0,1,1,1,0,0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (builtin "Use Operation Contract" (formula "52") (newnames "heapBefore_postProcess_1,result_7,exc_7") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::postProcess([[B)].JML normal_behavior operation contract.0"))
            (branch "Post (postProcess)"
               (builtin "One Step Simplification" (formula "53"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,1,0") (ifseqformula "19"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "40"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "assignment" (formula "56") (term "1"))
               (builtin "One Step Simplification" (formula "56"))
               (rule "commute_or_2" (formula "33") (term "0"))
               (rule "shift_paren_or" (formula "36"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "25") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "commute_or" (formula "7") (term "0,0"))
               (rule "arrayLengthNotNegative" (formula "15") (term "1,1"))
               (rule "arrayLengthIsAShort" (formula "16") (term "1,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "arrayLengthNotNegative" (formula "16") (term "1,0"))
               (rule "arrayLengthIsAShort" (formula "17") (term "1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "arrayLengthIsAShort" (formula "24") (term "1,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "arrayLengthNotNegative" (formula "24") (term "1,0"))
               (rule "commute_or" (formula "6") (term "0,0"))
               (rule "commute_or" (formula "35") (term "0,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "33") (term "0,0,1,1,1,0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "33") (term "0,1,1,1,1,0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or_2" (formula "41"))
               (rule "commute_or" (formula "31") (term "0,0"))
               (rule "commute_or" (formula "36") (term "0,0"))
               (rule "shift_paren_or" (formula "39") (term "0"))
               (rule "commute_or_2" (formula "30") (term "0"))
               (rule "arrayLengthNotNegative" (formula "33") (term "1,1,1,0,0,0,1,0"))
               (rule "arrayLengthIsAShort" (formula "34") (term "1,1,1,0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "43") (ifseqformula "3"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "nonNull" (formula "45") (inst "i=i"))
               (rule "sub_literals" (formula "45") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "greater_literals" (formula "45") (term "0,1"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "andLeft" (formula "45"))
               (rule "notLeft" (formula "45"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "43") (inst "i=i"))
               (rule "greater_literals" (formula "43") (term "0,1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "sub_literals" (formula "43") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "43"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "44") (inst "i=i"))
               (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "greater_literals" (formula "44") (term "0,1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "notLeft" (formula "44"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
               (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "69"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_19" (formula "52") (term "0"))
               (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
               (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "68"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_21" (formula "51") (term "0"))
               (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
               (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_23" (formula "50") (term "0"))
               (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
               (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "66"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_25" (formula "49") (term "0"))
               (rule "pullOutSelect" (formula "45") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
               (rule "simplifySelectOfAnon" (formula "45"))
               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "62")))
               (rule "replaceKnownSelect_taclet02000_26" (formula "49") (term "0"))
               (rule "replaceKnownSelect_taclet2000_12" (formula "45") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "45") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,0,0") (ifseqformula "21"))
               (rule "replaceKnownSelect_taclet02000_26" (formula "46") (term "0,1,1,1,0,0"))
               (rule "eqSymm" (formula "45") (term "0,0,0"))
               (rule "replace_known_left" (formula "45") (term "0,0,1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "sortsDisjointModuloNull" (formula "45") (term "0,0"))
               (rule "replace_known_right" (formula "45") (term "0,0,0") (ifseqformula "65"))
               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "62")))
               (rule "hideAuxiliaryEq" (formula "45"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_27" (formula "48") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_27" (formula "45") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_27" (formula "45") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
               (rule "simplifySelectOfAnon" (formula "43"))
               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "61")))
               (rule "replaceKnownSelect_taclet02000_28" (formula "48") (term "0"))
               (rule "replaceKnownSelect_taclet2000_14" (formula "43") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "43") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0,0") (ifseqformula "21"))
               (rule "replaceKnownSelect_taclet02000_28" (formula "44") (term "0,1,1,1,0,0"))
               (rule "eqSymm" (formula "43") (term "0,0,0"))
               (rule "replace_known_left" (formula "43") (term "0,0,1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "sortsDisjointModuloNull" (formula "43") (term "0,0"))
               (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "64"))
               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "61")))
               (rule "hideAuxiliaryEq" (formula "43"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_29" (formula "47") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_29" (formula "43") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_29" (formula "43") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
               (rule "simplifySelectOfAnon" (formula "44"))
               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")))
               (rule "replaceKnownSelect_taclet02000_30" (formula "47") (term "0"))
               (rule "replaceKnownSelect_taclet2000_16" (formula "44") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "44") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0,0") (ifseqformula "21"))
               (rule "replaceKnownSelect_taclet02000_30" (formula "45") (term "0,1,1,1,0,0"))
               (rule "eqSymm" (formula "44") (term "0,0,0"))
               (rule "replace_known_left" (formula "44") (term "0,0,1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "sortsDisjointModuloNull" (formula "44") (term "0,0"))
               (rule "replace_known_right" (formula "44") (term "0,0,0") (ifseqformula "63"))
               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")))
               (rule "hideAuxiliaryEq" (formula "44"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_31" (formula "46") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_31" (formula "44") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_31" (formula "44") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "45") (term "0"))
               (rule "nnf_imp2or" (formula "43") (term "0"))
               (rule "nnf_imp2or" (formula "44") (term "0"))
               (rule "nnf_notAnd" (formula "45") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
               (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
               (rule "mul_literals" (formula "45") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "43") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
               (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
               (rule "mul_literals" (formula "43") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "44") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
               (rule "mul_literals" (formula "44") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "29") (term "0"))
               (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "30") (term "0,0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "methodCallReturn" (formula "62") (term "1"))
               (rule "assignment" (formula "62") (term "1"))
               (builtin "One Step Simplification" (formula "62"))
               (rule "commute_or" (formula "34") (term "0,0,0,1,1,1,0"))
               (rule "commute_or" (formula "34") (term "0,0,1,1,1,1,0"))
               (rule "commute_or_2" (formula "45") (term "0"))
               (rule "commute_or_2" (formula "43") (term "0"))
               (rule "commute_or_2" (formula "44") (term "0"))
               (rule "commute_or" (formula "29") (term "0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "1"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "1") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_or" (formula "47") (term "0,0"))
               (rule "commute_or" (formula "45") (term "0,0"))
               (rule "commute_or" (formula "46") (term "0,0"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "tryEmpty" (formula "66") (term "1"))
               (rule "emptyModality" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "66") (ifseqformula "5"))
               (rule "replaceKnownSelect_taclet02000_18" (formula "66") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_19" (formula "66") (term "0,0,1"))
               (rule "replaceKnownSelect_taclet02000_20" (formula "66") (term "0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_21" (formula "66") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet02000_22" (formula "66") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_23" (formula "66") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet02000_24" (formula "66") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet02000_26" (formula "66") (term "1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_25" (formula "66") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_27" (formula "66") (term "1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet02000_28" (formula "66") (term "1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet02000_30" (formula "66") (term "1,1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_29" (formula "66") (term "1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet02000_31" (formula "66") (term "1,1,0,0,0,0,0"))
               (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "56"))
               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")))
               (rule "nonNull" (formula "66") (term "1,0") (inst "i=i"))
               (rule "greater_literals" (formula "66") (term "0,1,1,0"))
               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "52")))
               (rule "sub_literals" (formula "66") (term "2,1,0,1,0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,0"))
               (rule "nonNull" (formula "66") (term "1") (inst "i=i"))
               (rule "greater_literals" (formula "66") (term "0,1,1"))
               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "64")))
               (rule "sub_literals" (formula "66") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
               (rule "nonNull" (formula "66") (term "0,0") (inst "i=i"))
               (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0"))
               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")))
               (rule "greater_literals" (formula "66") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "66") (term "0,1"))
               (rule "nnf_imp2or" (formula "66") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "66") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "66") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "66") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1"))
               (rule "mul_literals" (formula "66") (term "1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "66") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "66") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "66") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "66") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0"))
               (rule "andRight" (formula "66"))
               (branch "Case 1"
                  (rule "andRight" (formula "66"))
                  (branch "Case 1"
                     (rule "allRight" (formula "66") (inst "sk=i_48"))
                     (rule "orRight" (formula "66"))
                     (rule "notRight" (formula "67"))
                     (rule "orRight" (formula "67"))
                     (rule "inEqSimp_geqRight" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "68"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_340"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "46") (ifseqformula "55"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_341"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "8") (ifseqformula "56"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "29") (ifseqformula "56"))
                     (rule "orLeft" (formula "4"))
                     (branch " ( self.b = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.b.<created> = TRUE | (self.b@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & (self.b@heap)[i_48]@anon_heap<<anonHeapFunction>> = null"
                        (rule "andLeft" (formula "4"))
                        (rule "cut_direct" (formula "50") (term "0,0,0"))
                        (branch "CUT: result_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_zero_right" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "19") (inst "t=i_48"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_literals" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_zero_right" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_literals" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "19") (inst "t=i_48"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "19") (inst "t=i_48"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_zero_right" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_literals" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "cut_direct" (formula "52") (term "0,0"))
                           (branch "CUT: result_7.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "cut_direct" (formula "49") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "53"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "53"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "53"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_literals" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                           )
                           (branch "CUT: result_7.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "cut_direct" (formula "49") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_zero_right" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "2"))
                                    (rule "andLeft" (formula "53"))
                                    (rule "inEqSimp_homoInEq1" (formula "53"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0"))
                                    (rule "add_literals" (formula "53") (term "0"))
                                    (rule "leq_literals" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "19") (inst "t=i_48"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "38") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_33" (formula "38") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "leq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "53"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "19") (inst "t=i_48"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "38") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_33" (formula "38") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "38") (term "0,0,1"))
                                    (rule "leq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "allLeft" (formula "53") (inst "t=i_48"))
                                    (rule "replaceKnownSelect_taclet0002000_32" (formula "53") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "53"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " !( self.b = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.b.<created> = TRUE | (self.b@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & arr_341<<selectSK>> = null"
                        (rule "andLeft" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "orRight" (formula "55"))
                        (rule "notRight" (formula "56"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "ifEqualsNull" (formula "4"))
                        (rule "commute_and" (formula "4") (term "0"))
                        (rule "orLeft" (formula "4"))
                        (branch " (self.b@heap)[i_48]@anon_heap_sort<<anonHeapFunction>> = null & (self.b = result_1 | !self.b.<created> = TRUE)"
                           (rule "andLeft" (formula "4"))
                           (rule "cut_direct" (formula "51") (term "0,0,0"))
                           (branch "CUT: result_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "cut_direct" (formula "53") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "39"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0"))
                                       (rule "leq_literals" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "3"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "inEqSimp_homoInEq1" (formula "54"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0"))
                                       (rule "leq_literals" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                       (rule "leq_literals" (formula "54") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "54"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "54") (term "0,0,1"))
                                       (rule "leq_literals" (formula "54") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "54"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "3"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "inEqSimp_homoInEq1" (formula "54"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0"))
                                       (rule "leq_literals" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "3"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "inEqSimp_homoInEq1" (formula "54"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0"))
                                       (rule "leq_literals" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "54"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "cut_direct" (formula "53") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "3"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "inEqSimp_homoInEq1" (formula "54"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0"))
                                       (rule "leq_literals" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                       (rule "leq_literals" (formula "54") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                       (rule "leq_literals" (formula "54") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "closeFalse" (formula "54"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "54") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_32" (formula "54") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "54"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "20") (inst "t=i_48"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "39") (inst "t=i_48"))
                                       (rule "replaceKnownSelect_taclet0002000_33" (formula "39") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch " !(self.b = result_1 | !self.b.<created> = TRUE) & self.b[i_48] = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "56"))
                           (rule "notRight" (formula "57"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "19") (inst "t=i_48"))
                           (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "66") (inst "sk=i_47"))
                     (rule "orRight" (formula "66"))
                     (rule "notRight" (formula "67"))
                     (rule "orRight" (formula "67"))
                     (rule "inEqSimp_geqRight" (formula "68"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "68"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_338"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "46") (ifseqformula "56"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_339"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "8") (ifseqformula "57"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "29") (ifseqformula "57"))
                     (rule "orLeft" (formula "4"))
                     (branch " ( self.a = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.a.<created> = TRUE | (self.a@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & (self.a@heap)[i_47]@anon_heap<<anonHeapFunction>> = null"
                        (rule "andLeft" (formula "4"))
                        (rule "cut_direct" (formula "50") (term "0,0,0"))
                        (branch "CUT: result_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_zero_right" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "39") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_33" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "54"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "cut_direct" (formula "49") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "cut_direct" (formula "52") (term "0,0"))
                           (branch "CUT: result_7.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "cut_direct" (formula "49") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "39") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_33" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "54"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "39") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_33" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "54"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_zero_right" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "21") (inst "t=i_47"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                           )
                           (branch "CUT: result_7.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "cut_direct" (formula "49") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "39") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_33" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "54"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "39") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_33" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                    (rule "leq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "cut_direct" (formula "33") (term "0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "54"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "54") (inst "t=i_47"))
                                    (rule "replaceKnownSelect_taclet1002000_32" (formula "54") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "54") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (ifseqformula "2"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "54") (term "1,0"))
                                    (rule "add_literals" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "closeFalse" (formula "54"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " !( self.a = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.a.<created> = TRUE | (self.a@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & arr_339<<selectSK>> = null"
                        (rule "andLeft" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "orRight" (formula "55"))
                        (rule "notRight" (formula "56"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "ifEqualsNull" (formula "4"))
                        (rule "commute_and" (formula "4") (term "0"))
                        (rule "orLeft" (formula "4"))
                        (branch " (self.a@heap)[i_47]@anon_heap_sort<<anonHeapFunction>> = null & (self.a = result_1 | !self.a.<created> = TRUE)"
                           (rule "andLeft" (formula "4"))
                           (rule "cut_direct" (formula "51") (term "0,0,0"))
                           (branch "CUT: result_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "cut_direct" (formula "53") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "3"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "40"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0"))
                                       (rule "leq_literals" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "40"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "3"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "40"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0"))
                                       (rule "leq_literals" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "40"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "55") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_32" (formula "55") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "55") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "3"))
                                       (rule "andLeft" (formula "55"))
                                       (rule "inEqSimp_homoInEq1" (formula "55"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                       (rule "add_literals" (formula "55") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0"))
                                       (rule "add_zero_right" (formula "55") (term "0"))
                                       (rule "leq_literals" (formula "55"))
                                       (rule "closeFalse" (formula "55"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "55") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_32" (formula "55") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "55") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "3"))
                                       (rule "andLeft" (formula "55"))
                                       (rule "inEqSimp_homoInEq1" (formula "55"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                       (rule "add_literals" (formula "55") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0"))
                                       (rule "add_literals" (formula "55") (term "0"))
                                       (rule "leq_literals" (formula "55"))
                                       (rule "closeFalse" (formula "55"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "cut_direct" (formula "53") (term "0,0"))
                              (branch "CUT: result_7.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "3"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "40"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0"))
                                       (rule "leq_literals" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "55") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_32" (formula "55") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                       (rule "leq_literals" (formula "55") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "55"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "55") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_32" (formula "55") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                       (rule "leq_literals" (formula "55") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "55") (term "0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "closeFalse" (formula "55"))
                                    )
                                 )
                              )
                              (branch "CUT: result_7.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "cut_direct" (formula "50") (term "0,0"))
                                 (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "3"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "40"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0"))
                                       (rule "add_literals" (formula "40") (term "0"))
                                       (rule "leq_literals" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "22") (inst "t=i_47"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch "CUT: result_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                    (branch "CUT: result_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "40") (inst "t=i_47"))
                                       (rule "replaceKnownSelect_taclet1002000_33" (formula "40") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                       (rule "leq_literals" (formula "40") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch " !(self.a = result_1 | !self.a.<created> = TRUE) & self.a[i_47] = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "56"))
                           (rule "notRight" (formula "57"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "21") (inst "t=i_47"))
                           (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1"))
                           (rule "leq_literals" (formula "21") (term "0,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "66") (inst "sk=i_46"))
                  (rule "orRight" (formula "66"))
                  (rule "notRight" (formula "67"))
                  (rule "orRight" (formula "67"))
                  (rule "inEqSimp_geqRight" (formula "68"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "68"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_334"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "7") (ifseqformula "68"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "28") (ifseqformula "68"))
                  (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "5"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cut_direct" (formula "50") (term "0,0,0"))
                  (branch "CUT: result_3 = null TRUE"
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "cut_direct" (formula "52") (term "0,0"))
                     (branch "CUT: result_7.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "53"))
                        (rule "true_left" (formula "53"))
                        (rule "cut_direct" (formula "49") (term "0,0"))
                        (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0,0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "2"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                              (rule "add_literals" (formula "55") (term "1,1,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0"))
                              (rule "add_literals" (formula "55") (term "0"))
                              (rule "leq_literals" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                        )
                        (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "allLeft" (formula "40") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_33" (formula "40") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "40") (term "0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "40"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "40") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_33" (formula "40") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1"))
                              (rule "leq_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "CUT: result_7.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "cut_direct" (formula "49") (term "0,0"))
                        (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "55"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "cut_direct" (formula "33") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0,0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "2"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                              (rule "add_literals" (formula "55") (term "1,1,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0"))
                              (rule "add_literals" (formula "55") (term "0"))
                              (rule "leq_literals" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0,0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "55"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
                  (branch "CUT: result_3 = null FALSE"
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "cut_direct" (formula "33") (term "0"))
                     (branch "CUT: result_2.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "cut_direct" (formula "52") (term "0,0"))
                        (branch "CUT: result_7.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "cut_direct" (formula "49") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "allLeft" (formula "16") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "16") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_literals" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "25") (term "1,2,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "67") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "67"))
                              (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "allLeft" (formula "50") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                              (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                              (rule "add_literals" (formula "50") (term "0,0,1"))
                              (rule "leq_literals" (formula "50") (term "0,1"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "50") (term "0,1"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_337"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "25") (ifseqformula "64"))
                              (rule "close" (formula "51") (ifseqformula "4"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "allLeft" (formula "40") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_33" (formula "40") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                              (rule "add_literals" (formula "40") (term "0,0,1"))
                              (rule "leq_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: result_7.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "cut_direct" (formula "49") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                        )
                     )
                     (branch "CUT: result_2.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "cut_direct" (formula "52") (term "0,0"))
                        (branch "CUT: result_7.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "cut_direct" (formula "49") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "allLeft" (formula "16") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "16") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "71"))
                              (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "54") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "26") (term "1,2,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "53") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "allLeft" (formula "50") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                              (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "50") (term "0,0,1"))
                              (rule "leq_literals" (formula "50") (term "0,1"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "50") (term "0,1"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "notLeft" (formula "50"))
                              (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_336"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "25") (ifseqformula "65"))
                              (rule "close" (formula "51") (ifseqformula "4"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "allLeft" (formula "55") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_32" (formula "55") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1"))
                              (rule "leq_literals" (formula "55") (term "0,1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "closeFalse" (formula "55"))
                           )
                        )
                        (branch "CUT: result_7.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "cut_direct" (formula "49") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "allLeft" (formula "40") (inst "t=i_46"))
                              (rule "replaceKnownSelect_taclet102000_33" (formula "40") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1"))
                              (rule "leq_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "40"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "allLeft" (formula "16") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_literals" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "73") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "1,2,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "70") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "70"))
                              (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "allLeft" (formula "35") (inst "t=i_46"))
                              (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "35") (term "0,0,1"))
                              (rule "leq_literals" (formula "35") (term "0,1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "35") (term "0,1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_335"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "25") (ifseqformula "67"))
                              (rule "close" (formula "51") (ifseqformula "4"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (postProcess)"
               (builtin "One Step Simplification" (formula "37"))
               (builtin "One Step Simplification" (formula "53"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "19"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "37"))
               (rule "close" (formula "41") (ifseqformula "40"))
            )
            (branch "Pre (postProcess)"
               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "44")))
               (rule "andRight" (formula "52") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "52") (userinteraction))
                  (branch "Case 1"
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "52") (ifseqformula "3") (userinteraction))
                     (rule "andRight" (formula "52") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "52") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "52") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "52") (userinteraction))
                              (branch "Case 1"
                                 (rule "nonNull" (formula "52") (term "0,0") (inst "i=i"))
                                 (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "greater_literals" (formula "52") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,0,0"))
                                 (rule "nonNull" (formula "52") (term "1") (inst "i=i"))
                                 (rule "greater_literals" (formula "52") (term "0,1,1"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1"))
                                 (rule "nonNull" (formula "52") (term "1,0") (inst "i=i"))
                                 (rule "sub_literals" (formula "52") (term "2,1,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "greater_literals" (formula "52") (term "0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0"))
                                 (rule "pullOutSelect" (formula "52") (term "0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_13"))
                                 (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,0,0,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "replaceKnownSelect_taclet2000_16" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                 (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,1,0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "pullOutSelect" (formula "52") (term "0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_13"))
                                 (rule "applyEq" (formula "53") (term "1,0,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "replaceKnownSelect_taclet2000_14" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,0,0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "pullOutSelect" (formula "52") (term "0,0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_13"))
                                 (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,0,0,1,0,1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "replaceKnownSelect_taclet2000_12" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                 (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,1") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "nnf_imp2or" (formula "26") (term "0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "shift_paren_or" (formula "35"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "commute_or" (formula "7") (term "0,0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0"))
                                 (rule "commute_or" (formula "6") (term "0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,1,1,1,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,1,1,1,1,0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "commute_or" (formula "32") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0"))
                                 (rule "shift_paren_or" (formula "35") (term "0"))
                                 (rule "commute_or" (formula "10") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "andRight" (formula "51"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "51"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "51") (inst "sk=i_94"))
                                       (rule "orRight" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "notRight" (formula "53"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1025"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "37") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_1026"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "6") (ifseqformula "41"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "22") (ifseqformula "41"))
                                       (rule "orLeft" (formula "4"))
                                       (branch " ( self.b = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.b.<created> = TRUE | (self.b@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & (self.b@heap)[i_94]@anon_heap<<anonHeapFunction>> = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "arrayLengthIsAShort" (formula "20") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "40") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                          (rule "cut_direct" (formula "45") (term "0,0"))
                                          (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,1,1,1,0"))
                                             (rule "cut_direct" (formula "28") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000000000022000_26" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,1,0,1,1") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,2,1") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "6") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "1,0,0,1") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "47") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "63") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "0,1,1,0") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "27")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "56")))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "42") (term "0,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "57")))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1114"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")) (ifInst ""  (formula "25")))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "hideAuxiliaryEq" (formula "40"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "pullOutSelect" (formula "39") (term "0,0,0") (inst "selectSK=arr_1115"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "56")) (ifInst ""  (formula "1")))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "1,0") (ifseqformula "30") (ifseqformula "56"))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "12") (ifseqformula "56"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1116"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "64")) (ifInst ""  (formula "34")))
                                                         (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1117"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "65")) (ifInst ""  (formula "34")))
                                                         (rule "allLeft" (formula "48") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1118"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "67")) (ifInst ""  (formula "34")))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "1,0") (ifseqformula "31") (ifseqformula "67"))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "2,0") (ifseqformula "12") (ifseqformula "67"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "37"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "48"))
                                                         (rule "hideAuxiliaryEq" (formula "48"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "47")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1119"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "31") (ifseqformula "70"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "41") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1120"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1121"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "60") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "57"))
                                                         (rule "close" (formula "52") (ifseqformula "8"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "1,2,1") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "cut_direct" (formula "6") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "1,0,0,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,1,1,0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "64") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "1,1,1,0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "58")))
                                                         (rule "greater_literals" (formula "42") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "57")))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "cut_direct" (formula "51") (term "0,0"))
                                                         (branch "CUT: result_3.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1108"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "61")) (ifInst ""  (formula "33")))
                                                            (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1109"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                                            (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "allLeft" (formula "43") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1110"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "60")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "43") (term "2,0") (ifseqformula "12") (ifseqformula "60"))
                                                            (rule "narrowSelectArrayType" (formula "43") (term "1,0") (ifseqformula "31") (ifseqformula "60"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1111"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "67")) (ifInst ""  (formula "34")))
                                                            (rule "narrowSelectArrayType" (formula "47") (term "1,0") (ifseqformula "31") (ifseqformula "67"))
                                                            (rule "narrowSelectArrayType" (formula "47") (term "2,0") (ifseqformula "12") (ifseqformula "67"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                            (rule "hideAuxiliaryEq" (formula "47"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1112"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "26")))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "hideAuxiliaryEq" (formula "46"))
                                                            (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "12") (ifseqformula "74"))
                                                            (rule "allLeft" (formula "21") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                            (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "55") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "notLeft" (formula "55"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1113"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "60") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: result_3.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1102"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "1,0") (ifseqformula "30") (ifseqformula "62"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "2,0") (ifseqformula "12") (ifseqformula "62"))
                                                            (rule "allLeft" (formula "39") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "pullOutSelect" (formula "39") (term "0,0,0") (inst "selectSK=arr_1103"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "59")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "12") (ifseqformula "59"))
                                                            (rule "narrowSelectArrayType" (formula "39") (term "1,0") (ifseqformula "30") (ifseqformula "59"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1104"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "25")))
                                                            (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "hideAuxiliaryEq" (formula "42"))
                                                            (rule "narrowSelectArrayType" (formula "42") (term "0,0,0") (ifseqformula "12") (ifseqformula "72"))
                                                            (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "44")))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_1105"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "68")) (ifInst ""  (formula "34")))
                                                            (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=arr_1106"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "69")) (ifInst ""  (formula "34")))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "48"))
                                                            (rule "applyEqReverse" (formula "39") (term "1,0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                            (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "55") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "notLeft" (formula "55"))
                                                            (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1107"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "60") (ifseqformula "11"))
                                                         )
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "57"))
                                                         (rule "close" (formula "51") (ifseqformula "8"))
                                                      )
                                                   )
                                                )
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1099"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "63")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "62"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1100"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1101"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000022000_26" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,2,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "6") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "1,0,0,1") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,1,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0") (ifseqformula "6"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "1,0,1,0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "9")) (ifInst ""  (formula "27")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "58")))
                                                         (rule "greater_literals" (formula "42") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "57")))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "pullOutSelect" (formula "39") (term "0,0,0") (inst "selectSK=arr_1093"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "56")) (ifInst ""  (formula "1")))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "1,0") (ifseqformula "30") (ifseqformula "56"))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "12") (ifseqformula "56"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1094"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "63")) (ifInst ""  (formula "57")))
                                                         (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "hideAuxiliaryEq" (formula "43"))
                                                         (rule "narrowSelectArrayType" (formula "43") (term "0,0,0") (ifseqformula "30") (ifseqformula "62"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1095"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "27")))
                                                         (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                                         (rule "hideAuxiliaryEq" (formula "44"))
                                                         (rule "narrowSelectArrayType" (formula "44") (term "0,0,0") (ifseqformula "12") (ifseqformula "72"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=arr_1096"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "66")) (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "39") (term "1,0,1") (ifseqformula "38"))
                                                         (rule "hideAuxiliaryEq" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1097"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "66")) (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                         (rule "hideAuxiliaryEq" (formula "38"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1098"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "58"))
                                                         (rule "close" (formula "52") (ifseqformula "8"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,1,1,0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "9") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "8") (term "1,0,0,1") (ifseqformula "9"))
                                                         (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "50") (term "0,1,0,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,1") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "45") (term "1"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "67") (term "1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "48") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,1") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "44") (term "1"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "45") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                                         (rule "wellFormedAnon" (formula "45") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "1,1,0") (ifseqformula "31"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1,0") (ifseqformula "31"))
                                                         (rule "translateJavaAddInt" (formula "45") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "45") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "45") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "45") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "45") (term "1"))
                                                         (rule "replace_known_left" (formula "45") (term "1,1,1,0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "12")) (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "12")))
                                                         (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "45") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "45") (term "0,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "62")))
                                                         (rule "sub_literals" (formula "45") (term "2,1,0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nonNull" (formula "45") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "45") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "61")))
                                                         (rule "sub_literals" (formula "45") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "cut_direct" (formula "51") (term "0,0"))
                                                         (branch "CUT: result_3.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1087"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "62")) (ifInst ""  (formula "56")))
                                                            (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                            (rule "hideAuxiliaryEq" (formula "41"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "0,0,0") (ifseqformula "30") (ifseqformula "61"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1088"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "17")))
                                                            (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                            (rule "hideAuxiliaryEq" (formula "40"))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "69"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "1,0,1") (inst "selectSK=arr_1089"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "64")) (ifInst ""  (formula "58")))
                                                            (rule "applyEqReverse" (formula "37") (term "1,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1090"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "64")) (ifInst ""  (formula "58")))
                                                            (rule "applyEqReverse" (formula "37") (term "2,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "allLeft" (formula "18") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "42")))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1091"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "30") (ifseqformula "60"))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "60"))
                                                            (rule "allLeft" (formula "21") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1092"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: result_3.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "allLeft" (formula "18") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1081"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "64")) (ifInst ""  (formula "58")))
                                                            (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_1082"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "64")) (ifInst ""  (formula "58")))
                                                            (rule "applyEqReverse" (formula "38") (term "2,0,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "allLeft" (formula "22") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1083"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "61")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "42") (term "1,0") (ifseqformula "32") (ifseqformula "61"))
                                                            (rule "narrowSelectArrayType" (formula "42") (term "2,0") (ifseqformula "12") (ifseqformula "61"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1084"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "17")))
                                                            (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "12") (ifseqformula "74"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1085"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "68")) (ifInst ""  (formula "62")))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "hideAuxiliaryEq" (formula "46"))
                                                            (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "32") (ifseqformula "67"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1086"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "11"))
                                                         )
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "orRight" (formula "55"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "62"))
                                                         (rule "close" (formula "55") (ifseqformula "11"))
                                                      )
                                                   )
                                                )
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1078"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "7") (ifseqformula "62"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1079"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "notLeft" (formula "42"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1080"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "6"))
                                                )
                                             )
                                          )
                                          (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,1,1,1,0"))
                                             (rule "cut_direct" (formula "28") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00100000000022000_26" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,1,1") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "cut_direct" (formula "8") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "7") (term "1,0,0,1") (ifseqformula "8"))
                                                         (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "20") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "67") (term "1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,1,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "49") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,1,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "68") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "7"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "44") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")))
                                                         (rule "wellFormedAnon" (formula "44") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "44") (term "1,1,0") (ifseqformula "30"))
                                                         (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,0") (ifseqformula "30"))
                                                         (rule "translateJavaAddInt" (formula "44") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "44") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "eqSymm" (formula "44") (term "1"))
                                                         (rule "replace_known_left" (formula "44") (term "0,0,0,1,0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "29")) (ifInst ""  (formula "48")) (ifInst ""  (formula "11")) (ifInst ""  (formula "29")))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nonNull" (formula "44") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "44") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")))
                                                         (rule "greater_literals" (formula "44") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nonNull" (formula "44") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "44") (term "2,1,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "59")))
                                                         (rule "greater_literals" (formula "44") (term "0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1072"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")) (ifInst ""  (formula "25")))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "hideAuxiliaryEq" (formula "40"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "67"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1073"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1074"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "63")) (ifInst ""  (formula "33")))
                                                         (rule "allLeft" (formula "45") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1075"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "65")) (ifInst ""  (formula "33")))
                                                         (rule "narrowSelectArrayType" (formula "45") (term "1,0") (ifseqformula "30") (ifseqformula "65"))
                                                         (rule "narrowSelectArrayType" (formula "45") (term "2,0") (ifseqformula "12") (ifseqformula "65"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                                         (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "hideAuxiliaryEq" (formula "45"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1076"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "61")) (ifInst ""  (formula "2")))
                                                         (rule "narrowSelectArrayType" (formula "42") (term "1,0") (ifseqformula "30") (ifseqformula "61"))
                                                         (rule "narrowSelectArrayType" (formula "42") (term "2,0") (ifseqformula "12") (ifseqformula "61"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "47")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1077"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "60") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "notLeft" (formula "8"))
                                                         (rule "orRight" (formula "54"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "60"))
                                                         (rule "close" (formula "54") (ifseqformula "10"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,2,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "69"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "65") (term "1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0,1") (ifseqformula "5"))
                                                      (rule "eqSymm" (formula "43") (term "1"))
                                                      (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "40") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "40") (term "0,1,0,0,1") (ifseqformula "5"))
                                                      (rule "eqSymm" (formula "40") (term "1"))
                                                      (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "41") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                                                      (rule "wellFormedAnon" (formula "41") (term "0,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "41") (term "1,1,0") (ifseqformula "27"))
                                                      (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,0") (ifseqformula "27"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "41") (term "1,1,0,0,0,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,2,2,0,1,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "41") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "eqSymm" (formula "41") (term "1"))
                                                      (rule "replace_known_left" (formula "41") (term "1,1,1,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "8")) (ifInst ""  (formula "26")) (ifInst ""  (formula "45")) (ifInst ""  (formula "8")))
                                                      (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,2,2,0,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,2,2,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "nonNull" (formula "41") (term "1,1,1,1,0") (inst "i=i"))
                                                      (rule "sub_literals" (formula "41") (term "2,1,0,1,1,1,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "57")))
                                                      (rule "greater_literals" (formula "41") (term "0,1,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,1,1,0"))
                                                      (rule "nonNull" (formula "41") (term "0,1,1,1,0") (inst "i=i"))
                                                      (rule "greater_literals" (formula "41") (term "0,1,0,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "58")))
                                                      (rule "sub_literals" (formula "41") (term "2,1,0,0,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                      (rule "cut_direct" (formula "51") (term "0,0"))
                                                      (branch "CUT: result_3.<created> = TRUE TRUE"
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1064"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1065"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "63")) (ifInst ""  (formula "33")))
                                                         (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1066"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "62")) (ifInst ""  (formula "5")))
                                                         (rule "narrowSelectArrayType" (formula "44") (term "2,0") (ifseqformula "12") (ifseqformula "62"))
                                                         (rule "narrowSelectArrayType" (formula "44") (term "1,0") (ifseqformula "32") (ifseqformula "62"))
                                                         (rule "allLeft" (formula "48") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=arr_1067"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "69")) (ifInst ""  (formula "35")))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "2,0") (ifseqformula "12") (ifseqformula "69"))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "1,0") (ifseqformula "32") (ifseqformula "69"))
                                                         (rule "applyEq" (formula "39") (term "0") (ifseqformula "48"))
                                                         (rule "applyEqReverse" (formula "40") (term "1,0,1") (ifseqformula "39"))
                                                         (rule "hideAuxiliaryEq" (formula "39"))
                                                         (rule "allLeft" (formula "46") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1068"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "27")))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "hideAuxiliaryEq" (formula "46"))
                                                         (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "12") (ifseqformula "76"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "42") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1069"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "32") (ifseqformula "72"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1070"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1071"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "60") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: result_3.<created> = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1056"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "25")))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "hideAuxiliaryEq" (formula "40"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "69"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1057"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "65")) (ifInst ""  (formula "34")))
                                                         (rule "narrowSelectArrayType" (formula "43") (term "2,0") (ifseqformula "12") (ifseqformula "65"))
                                                         (rule "narrowSelectArrayType" (formula "43") (term "1,0") (ifseqformula "31") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1058"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "62")) (ifInst ""  (formula "5")))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "62"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "31") (ifseqformula "62"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "44")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1059"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "69")) (ifInst ""  (formula "34")))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "47"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                                         (rule "hideAuxiliaryEq" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_1060"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "69")) (ifInst ""  (formula "34")))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1061"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "31") (ifseqformula "73"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "40") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "notLeft" (formula "40"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1062"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1063"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "60") (ifseqformula "11"))
                                                      )
                                                   )
                                                )
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1053"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "63"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1054"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1055"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01100000000022000_26" (formula "34") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "cut_direct" (formula "4") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,0,0,1") (ifseqformula "4"))
                                                         (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "65") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "62") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "39") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "39") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")))
                                                         (rule "wellFormedAnon" (formula "39") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "39") (term "1,1,0") (ifseqformula "25"))
                                                         (rule "wellFormedAnonEQ" (formula "39") (term "0,0,1,0") (ifseqformula "25"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "39") (term "1"))
                                                         (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "24")))
                                                         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "39") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "39") (term "2,1,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "55")))
                                                         (rule "greater_literals" (formula "39") (term "0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "39") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "39") (term "0,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "56")))
                                                         (rule "sub_literals" (formula "39") (term "2,1,0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,2,1") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1046"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "62")) (ifInst ""  (formula "55")))
                                                         (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                         (rule "hideAuxiliaryEq" (formula "41"))
                                                         (rule "narrowSelectArrayType" (formula "41") (term "0,0,0") (ifseqformula "30") (ifseqformula "61"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "21") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1047"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "60")) (ifInst ""  (formula "1")))
                                                         (rule "narrowSelectArrayType" (formula "41") (term "1,0") (ifseqformula "32") (ifseqformula "60"))
                                                         (rule "narrowSelectArrayType" (formula "41") (term "2,0") (ifseqformula "12") (ifseqformula "60"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_1048"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "73")) (ifInst ""  (formula "74")) (ifInst ""  (formula "27")))
                                                         (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                                         (rule "hideAuxiliaryEq" (formula "44"))
                                                         (rule "narrowSelectArrayType" (formula "44") (term "0,0,0") (ifseqformula "12") (ifseqformula "73"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_94"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=arr_1049"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "67")) (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "39") (term "1,0,1") (ifseqformula "38"))
                                                         (rule "hideAuxiliaryEq" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1050"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "67")) (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                         (rule "hideAuxiliaryEq" (formula "38"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "notLeft" (formula "41"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1051"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "32") (ifseqformula "70"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                         (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1052"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "56"))
                                                         (rule "close" (formula "49") (ifseqformula "6"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,1,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "69"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "7") (term "0"))
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "6") (term "1,0,0,1") (ifseqformula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "0,1") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "66") (term "1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "66") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "6"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "0,0,0,1,0") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "10")) (ifInst ""  (formula "27")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "59")))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")))
                                                         (rule "greater_literals" (formula "42") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "12"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "cut_direct" (formula "51") (term "0,0"))
                                                         (branch "CUT: result_3.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1038"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "56")))
                                                            (rule "applyEqReverse" (formula "37") (term "2,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "1,0,1") (inst "selectSK=arr_1039"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "56")))
                                                            (rule "applyEqReverse" (formula "37") (term "1,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "allLeft" (formula "18") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "allLeft" (formula "22") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_1040"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "61")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "42") (term "1,0") (ifseqformula "32") (ifseqformula "61"))
                                                            (rule "narrowSelectArrayType" (formula "42") (term "2,0") (ifseqformula "13") (ifseqformula "61"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1041"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "5")))
                                                            (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "13") (ifseqformula "74"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1042"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "68")) (ifInst ""  (formula "61")))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "hideAuxiliaryEq" (formula "46"))
                                                            (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "32") (ifseqformula "67"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "41") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "notLeft" (formula "41"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1043"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "32") (ifseqformula "71"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1044"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1045"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "12"))
                                                         )
                                                         (branch "CUT: result_3.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1030"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")) (ifInst ""  (formula "57")))
                                                            (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                            (rule "hideAuxiliaryEq" (formula "41"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "0,0,0") (ifseqformula "30") (ifseqformula "63"))
                                                            (rule "allLeft" (formula "21") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "allLeft" (formula "18") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1031"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "62")) (ifInst ""  (formula "2")))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "2,0") (ifseqformula "13") (ifseqformula "62"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "1,0") (ifseqformula "32") (ifseqformula "62"))
                                                            (rule "allLeft" (formula "38") (inst "t=i_94"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1032"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "69")) (ifInst ""  (formula "62")))
                                                            (rule "applyEqReverse" (formula "39") (term "2,0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=arr_1033"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "69")) (ifInst ""  (formula "62")))
                                                            (rule "applyEqReverse" (formula "39") (term "1,0,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_1034"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "5")))
                                                            (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "13") (ifseqformula "76"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "notLeft" (formula "40"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1035"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "41") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "notLeft" (formula "41"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1036"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "32") (ifseqformula "72"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_94"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1037"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "12"))
                                                         )
                                                      )
                                                      (branch "CUT: self.b = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "notLeft" (formula "7"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "60"))
                                                         (rule "close" (formula "52") (ifseqformula "9"))
                                                      )
                                                   )
                                                )
                                                (branch "self.b = result_1 | !self.b.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1027"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "7") (ifseqformula "63"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1028"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_94"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "42") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "notLeft" (formula "42"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_1029"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "6"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " !( self.b = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.b.<created> = TRUE | (self.b@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & arr_1026<<selectSK>> = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "orRight" (formula "41"))
                                          (rule "notRight" (formula "42"))
                                          (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "ifEqualsNull" (formula "4"))
                                          (rule "commute_and" (formula "4") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "28") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                          (rule "arrayLengthIsAShort" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1"))
                                          (rule "commute_or" (formula "38") (term "0,0,0,1,1,1,0"))
                                          (rule "cut_direct" (formula "43") (term "0,0"))
                                          (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,1,0,0"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.b@heap)[i_94]@anon_heap_sort<<anonHeapFunction>> = null & (self.b = result_1 | !self.b.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "closeFalse" (formula "35"))
                                                )
                                                (branch " !(self.b = result_1 | !self.b.<created> = TRUE) & self.b[i_94] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.b@heap)[i_94]@anon_heap_sort<<anonHeapFunction>> = null & (self.b = result_1 | !self.b.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " !(self.b = result_1 | !self.b.<created> = TRUE) & self.b[i_94] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthNotNegative" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.b@heap)[i_94]@anon_heap_sort<<anonHeapFunction>> = null & (self.b = result_1 | !self.b.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "34") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0"))
                                                   (rule "leq_literals" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch " !(self.b = result_1 | !self.b.<created> = TRUE) & self.b[i_94] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "15") (term "0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "closeFalse" (formula "15"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.b@heap)[i_94]@anon_heap_sort<<anonHeapFunction>> = null & (self.b = result_1 | !self.b.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "34") (inst "t=i_94"))
                                                   (rule "replaceKnownSelect_taclet0000000022000_25" (formula "34") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch " !(self.b = result_1 | !self.b.<created> = TRUE) & self.b[i_94] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_94"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0"))
                                                   (rule "leq_literals" (formula "15"))
                                                   (rule "closeFalse" (formula "15"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "51") (inst "sk=i_93"))
                                       (rule "orRight" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "notRight" (formula "53"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_962"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "37") (ifseqformula "41"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_963"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                       (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "6") (ifseqformula "42"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "22") (ifseqformula "42"))
                                       (rule "orLeft" (formula "4"))
                                       (branch " ( self.a = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.a.<created> = TRUE | (self.a@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & (self.a@heap)[i_93]@anon_heap<<anonHeapFunction>> = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "arrayLengthIsAShort" (formula "20") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "40") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                          (rule "cut_direct" (formula "45") (term "0,0"))
                                          (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,1,1,1,0"))
                                             (rule "cut_direct" (formula "28") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00001000000022000_26" (formula "35") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,1,0,0,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "66"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "cut_direct" (formula "4") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,0,0,1") (ifseqformula "4"))
                                                         (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "41") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "58") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,1,0,0,1") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "38") (term "1"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "39") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")))
                                                         (rule "wellFormedAnon" (formula "39") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "39") (term "1,1,0") (ifseqformula "25"))
                                                         (rule "wellFormedAnonEQ" (formula "39") (term "0,0,1,0") (ifseqformula "25"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "39") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "39") (term "1"))
                                                         (rule "replace_known_left" (formula "39") (term "1,0,1,0") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")))
                                                         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "39") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "39") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "53")))
                                                         (rule "sub_literals" (formula "39") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "39") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "39") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "54")))
                                                         (rule "greater_literals" (formula "39") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "39") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "7"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "18") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "pullOutSelect" (formula "39") (term "0,0,0") (inst "selectSK=arr_1018"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "56")) (ifInst ""  (formula "5")))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "1,0") (ifseqformula "31") (ifseqformula "56"))
                                                         (rule "narrowSelectArrayType" (formula "39") (term "2,0") (ifseqformula "12") (ifseqformula "56"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_93"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_1019"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "63")) (ifInst ""  (formula "34")))
                                                         (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_1020"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "64")) (ifInst ""  (formula "34")))
                                                         (rule "allLeft" (formula "46") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_1021"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "17")))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "hideAuxiliaryEq" (formula "46"))
                                                         (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "12") (ifseqformula "72"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "pullOutSelect" (formula "47") (term "0,0,0") (inst "selectSK=arr_1022"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "66")) (ifInst ""  (formula "34")))
                                                         (rule "narrowSelectArrayType" (formula "47") (term "1,0") (ifseqformula "31") (ifseqformula "66"))
                                                         (rule "narrowSelectArrayType" (formula "47") (term "2,0") (ifseqformula "12") (ifseqformula "66"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "37"))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "47"))
                                                         (rule "hideAuxiliaryEq" (formula "47"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "42") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1023"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "55") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "55") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "55") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "notLeft" (formula "55"))
                                                         (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_1024"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "60") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "55"))
                                                         (rule "close" (formula "49") (ifseqformula "6"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "5") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "4") (term "1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "5"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "36") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1015"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "5")))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "26") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1016"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "5")))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1017"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "49") (ifseqformula "7"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "notLeft" (formula "5"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "56"))
                                                         (rule "close" (formula "49") (ifseqformula "7"))
                                                      )
                                                   )
                                                )
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1012"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "63")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "62"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1013"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1014"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01001000000022000_26" (formula "35") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,2,1") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "6") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "20") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "1,0,0,1") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,1,0,0,1") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "65") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "1,0,1,0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "9")) (ifInst ""  (formula "27")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "58")))
                                                         (rule "greater_literals" (formula "42") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "57")))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "1,0,1") (inst "selectSK=arr_1006"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "61")) (ifInst ""  (formula "55")))
                                                         (rule "applyEqReverse" (formula "37") (term "1,0,1") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_1007"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "61")) (ifInst ""  (formula "55")))
                                                         (rule "applyEqReverse" (formula "37") (term "2,0,1") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "allLeft" (formula "41") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_1008"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")) (ifInst ""  (formula "25")))
                                                         (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                         (rule "hideAuxiliaryEq" (formula "41"))
                                                         (rule "narrowSelectArrayType" (formula "41") (term "0,0,0") (ifseqformula "12") (ifseqformula "68"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "pullOutSelect" (formula "43") (term "0,0,0") (inst "selectSK=arr_1009"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "63")) (ifInst ""  (formula "57")))
                                                         (rule "applyEqReverse" (formula "44") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "hideAuxiliaryEq" (formula "43"))
                                                         (rule "narrowSelectArrayType" (formula "43") (term "0,0,0") (ifseqformula "30") (ifseqformula "62"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_1010"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")) (ifInst ""  (formula "3")))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "60"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "31") (ifseqformula "60"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "45")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_1011"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "58"))
                                                         (rule "close" (formula "51") (ifseqformula "8"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,2,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "cut_direct" (formula "4") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,0,0,1") (ifseqformula "4"))
                                                         (rule "allLeft" (formula "34") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "notLeft" (formula "34"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1003"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "36") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "36") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "notLeft" (formula "36"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1004"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "26") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "44") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "notLeft" (formula "44"))
                                                         (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_1005"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "49") (ifseqformula "6"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "57"))
                                                         (rule "close" (formula "49") (ifseqformula "6"))
                                                      )
                                                   )
                                                )
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1000"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "63"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1001"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_1002"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                          )
                                          (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "commute_or" (formula "40") (term "0,0,0,1,1,1,0"))
                                             (rule "cut_direct" (formula "28") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00101000000022000_26" (formula "35") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,2,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "66"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,1,0,0,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "63") (term "1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "40") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "40") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                      (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "41") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                                                      (rule "wellFormedAnon" (formula "41") (term "0,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "41") (term "1,1,0") (ifseqformula "27"))
                                                      (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,0") (ifseqformula "27"))
                                                      (rule "translateJavaSubInt" (formula "41") (term "1,1,0,0,0,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "41") (term "0,2,2,0,1,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "41") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "eqSymm" (formula "41") (term "1"))
                                                      (rule "replace_known_left" (formula "41") (term "1,0,1,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "8")) (ifInst ""  (formula "26")) (ifInst ""  (formula "8")) (ifInst ""  (formula "26")))
                                                      (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,2,2,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,2,2,0,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "nonNull" (formula "41") (term "1,1,1,1,0") (inst "i=i"))
                                                      (rule "greater_literals" (formula "41") (term "0,1,1,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "56")))
                                                      (rule "sub_literals" (formula "41") (term "2,1,0,1,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,1,1,0"))
                                                      (rule "nonNull" (formula "41") (term "0,1,1,1,0") (inst "i=i"))
                                                      (rule "sub_literals" (formula "41") (term "2,1,0,1,1,0,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "57")))
                                                      (rule "greater_literals" (formula "41") (term "0,0,1,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "41") (term "0,0,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                      (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "pullOutSelect" (formula "36") (term "1,0,1") (inst "selectSK=arr_993"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "61")) (ifInst ""  (formula "33")))
                                                      (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_994"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "62")) (ifInst ""  (formula "33")))
                                                      (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_995"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "64")) (ifInst ""  (formula "33")))
                                                      (rule "narrowSelectArrayType" (formula "44") (term "2,0") (ifseqformula "12") (ifseqformula "64"))
                                                      (rule "narrowSelectArrayType" (formula "44") (term "1,0") (ifseqformula "30") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "36") (term "0") (ifseqformula "44"))
                                                      (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "allLeft" (formula "42") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "pullOutSelect" (formula "42") (term "0,0,0") (inst "selectSK=arr_996"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")) (ifInst ""  (formula "25")))
                                                      (rule "applyEqReverse" (formula "43") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "hideAuxiliaryEq" (formula "42"))
                                                      (rule "narrowSelectArrayType" (formula "42") (term "0,0,0") (ifseqformula "12") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_997"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "61")) (ifInst ""  (formula "4")))
                                                      (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "61"))
                                                      (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "30") (ifseqformula "61"))
                                                      (rule "allLeft" (formula "20") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "46")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "44") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "44") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "44") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "notLeft" (formula "44"))
                                                      (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_998"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "59") (term "0") (ifseqformula "31") (ifseqformula "71"))
                                                      (rule "allLeft" (formula "55") (inst "t=i_93"))
                                                      (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "55") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "55") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "notLeft" (formula "55"))
                                                      (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_999"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "60") (ifseqformula "11"))
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "cut_direct" (formula "4") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,0,0,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "4"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "33") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "33") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "33") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_990"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "35") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "35") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_991"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "25") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "43") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "43") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_992"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "48") (ifseqformula "6"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "orRight" (formula "48"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "56"))
                                                         (rule "close" (formula "48") (ifseqformula "6"))
                                                      )
                                                   )
                                                )
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_987"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "64")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "63"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_988"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_989"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE TRUE"
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01101000000022000_26" (formula "35") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cut_direct" (formula "48") (term "0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "9"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,2,1") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0,1,0,0,0,0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "72"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "8") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "7") (term "1,0,0,1") (ifseqformula "8"))
                                                         (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                         (rule "eqSymm" (formula "8"))
                                                         (rule "applyEq" (formula "49") (term "0,1,0,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "68") (term "1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "48") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "44") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")))
                                                         (rule "wellFormedAnon" (formula "44") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "44") (term "1,1,0") (ifseqformula "30"))
                                                         (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,0") (ifseqformula "30"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "44") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "44") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "44") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "44") (term "1"))
                                                         (rule "replace_known_left" (formula "44") (term "1,1,1,0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "11")) (ifInst ""  (formula "29")) (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nonNull" (formula "44") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "44") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")))
                                                         (rule "sub_literals" (formula "44") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "44") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "44") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "61")))
                                                         (rule "greater_literals" (formula "44") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "44") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                         (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_980"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")) (ifInst ""  (formula "25")))
                                                         (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "hideAuxiliaryEq" (formula "40"))
                                                         (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "68"))
                                                         (rule "allLeft" (formula "38") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "pullOutSelect" (formula "38") (term "0,0,0") (inst "selectSK=arr_981"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "58")) (ifInst ""  (formula "2")))
                                                         (rule "narrowSelectArrayType" (formula "38") (term "2,0") (ifseqformula "12") (ifseqformula "58"))
                                                         (rule "narrowSelectArrayType" (formula "38") (term "1,0") (ifseqformula "30") (ifseqformula "58"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "37") (inst "t=i_93"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_982"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "59")))
                                                         (rule "applyEqReverse" (formula "38") (term "2,0,1") (ifseqformula "37"))
                                                         (rule "hideAuxiliaryEq" (formula "37"))
                                                         (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_983"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "59")))
                                                         (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                                         (rule "hideAuxiliaryEq" (formula "37"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "45")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "46") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_984"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "67")) (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "hideAuxiliaryEq" (formula "46"))
                                                         (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "31") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "notLeft" (formula "39"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_985"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "53") (inst "t=i_93"))
                                                         (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "53") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "notLeft" (formula "53"))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_986"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "notLeft" (formula "8"))
                                                         (rule "orRight" (formula "54"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "54") (ifseqformula "62"))
                                                         (rule "close" (formula "54") (ifseqformula "10"))
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,1,0,1,1") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "69"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,2,1") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "cut_direct" (formula "6") (term "0"))
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "5") (term "1,0,0,1") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "44") (term "1"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "47") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0,1,0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "67") (term "1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,1") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "41") (term "1"))
                                                         (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "42") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                         (rule "wellFormedAnon" (formula "42") (term "0,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0") (ifseqformula "28"))
                                                         (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0") (ifseqformula "28"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "42") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_left" (formula "42") (term "0,0,0,1,0") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "9")) (ifInst ""  (formula "27")))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,2,2,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "1,1,1,1,0") (inst "i=i"))
                                                         (rule "greater_literals" (formula "42") (term "0,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "59")))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,1,1,0"))
                                                         (rule "nonNull" (formula "42") (term "0,1,1,1,0") (inst "i=i"))
                                                         (rule "sub_literals" (formula "42") (term "2,1,0,1,1,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")))
                                                         (rule "greater_literals" (formula "42") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "nnf_imp2or" (formula "42") (term "0,0,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or_2" (formula "45") (term "0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,1,1,1,0"))
                                                         (rule "cut_direct" (formula "51") (term "0,0"))
                                                         (branch "CUT: result_3.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "2,0,1") (inst "selectSK=arr_974"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "56")))
                                                            (rule "applyEqReverse" (formula "37") (term "2,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "pullOutSelect" (formula "36") (term "1,0,1") (inst "selectSK=arr_975"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "56")))
                                                            (rule "applyEqReverse" (formula "37") (term "1,0,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "pullOutSelect" (formula "41") (term "0,0,0") (inst "selectSK=arr_976"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "25")))
                                                            (rule "applyEqReverse" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                                            (rule "hideAuxiliaryEq" (formula "41"))
                                                            (rule "narrowSelectArrayType" (formula "41") (term "0,0,0") (ifseqformula "12") (ifseqformula "70"))
                                                            (rule "allLeft" (formula "20") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_977"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "66")) (ifInst ""  (formula "59")))
                                                            (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                                            (rule "hideAuxiliaryEq" (formula "44"))
                                                            (rule "narrowSelectArrayType" (formula "44") (term "0,0,0") (ifseqformula "31") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_978"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "62")) (ifInst ""  (formula "3")))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "31") (ifseqformula "62"))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "62"))
                                                            (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "45")))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_979"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: result_3.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "commute_or" (formula "45") (term "0,0,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0,0,1,1,1,0"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_967"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "25")))
                                                            (rule "applyEqReverse" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                                            (rule "hideAuxiliaryEq" (formula "40"))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "0,0,0") (ifseqformula "12") (ifseqformula "70"))
                                                            (rule "allLeft" (formula "20") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "allLeft" (formula "37") (inst "t=i_93"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_968"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "59")))
                                                            (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_969"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "59")))
                                                            (rule "applyEqReverse" (formula "38") (term "2,0,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "pullOutSelect" (formula "44") (term "0,0,0") (inst "selectSK=arr_970"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "67")) (ifInst ""  (formula "60")))
                                                            (rule "applyEqReverse" (formula "45") (term "0,0,0") (ifseqformula "44"))
                                                            (rule "hideAuxiliaryEq" (formula "44"))
                                                            (rule "narrowSelectArrayType" (formula "44") (term "0,0,0") (ifseqformula "31") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "43")))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "pullOutSelect" (formula "40") (term "0,0,0") (inst "selectSK=arr_971"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "63")) (ifInst ""  (formula "3")))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "2,0") (ifseqformula "12") (ifseqformula "63"))
                                                            (rule "narrowSelectArrayType" (formula "40") (term "1,0") (ifseqformula "31") (ifseqformula "63"))
                                                            (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "43") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "43") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "notLeft" (formula "43"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_972"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "31") (ifseqformula "72"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_93"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_973"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "11"))
                                                         )
                                                      )
                                                      (branch "CUT: self.a = verif.selectvoting.system.core.ConservativeExtension.messages FALSE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "61"))
                                                         (rule "close" (formula "52") (ifseqformula "8"))
                                                      )
                                                   )
                                                )
                                                (branch "self.a = result_1 | !self.a.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                   (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "arrayLengthNotNegative" (formula "15") (term "1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_964"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "7") (ifseqformula "64"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "33") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "notLeft" (formula "33"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_965"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "66")) (ifInst ""  (formula "2")))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "43") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_966"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "6"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " !( self.a = verif.selectvoting.system.core.ConservativeExtension.messages | !( self.a.<created> = TRUE | (self.a@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & arr_963<<selectSK>> = null"
                                          (rule "andLeft" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "orRight" (formula "41"))
                                          (rule "notRight" (formula "42"))
                                          (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "ifEqualsNull" (formula "4"))
                                          (rule "commute_and" (formula "4") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "28") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                                          (rule "arrayLengthIsAShort" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1"))
                                          (rule "commute_or" (formula "38") (term "0,0,0,1,1,1,0"))
                                          (rule "cut_direct" (formula "43") (term "0,0"))
                                          (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,1,0,0"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.a@heap)[i_93]@anon_heap_sort<<anonHeapFunction>> = null & (self.a = result_1 | !self.a.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "36") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "closeFalse" (formula "36"))
                                                )
                                                (branch " !(self.a = result_1 | !self.a.<created> = TRUE) & self.a[i_93] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.a@heap)[i_93]@anon_heap_sort<<anonHeapFunction>> = null & (self.a = result_1 | !self.a.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "36") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "36") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "36") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " !(self.a = result_1 | !self.a.<created> = TRUE) & self.a[i_93] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthNotNegative" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result_2.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.a@heap)[i_93]@anon_heap_sort<<anonHeapFunction>> = null & (self.a = result_1 | !self.a.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_93"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " !(self.a = result_1 | !self.a.<created> = TRUE) & self.a[i_93] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                             (branch "CUT: result_2.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "orLeft" (formula "4"))
                                                (branch " (self.a@heap)[i_93]@anon_heap_sort<<anonHeapFunction>> = null & (self.a = result_1 | !self.a.<created> = TRUE)"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=i_93"))
                                                   (rule "replaceKnownSelect_taclet1000000022000_25" (formula "35") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "35") (term "0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "closeFalse" (formula "35"))
                                                )
                                                (branch " !(self.a = result_1 | !self.a.<created> = TRUE) & self.a[i_93] = null"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "orRight" (formula "47"))
                                                   (rule "notRight" (formula "48"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_93"))
                                                   (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0"))
                                                   (rule "leq_literals" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "51") (inst "sk=i_92"))
                                    (rule "orRight" (formula "51"))
                                    (rule "orRight" (formula "51"))
                                    (rule "notRight" (formula "53"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_960"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "37") (ifseqformula "53"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_961"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "6") (ifseqformula "54"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "22") (ifseqformula "54"))
                                    (rule "commute_and" (formula "4") (term "0"))
                                    (rule "orLeft" (formula "4"))
                                    (branch " arr_961<<selectSK>> = null & ( self.msg.<created> = TRUE | (self.msg@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)"
                                       (rule "andLeft" (formula "4"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "ifEqualsNull" (formula "3"))
                                       (rule "commute_and" (formula "3") (term "0"))
                                       (rule "orLeft" (formula "3"))
                                       (branch " (self.msg@heap)[i_92]@anon_heap_sort<<anonHeapFunction>> = null & (self.msg = result_1 | !self.msg.<created> = TRUE)"
                                          (rule "andLeft" (formula "3"))
                                          (rule "arrayLengthIsAShort" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,1,1,1,0"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch "CUT: result_2.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthNotNegative" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "32") (term "1,1,0"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "commute_or" (formula "41") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "36") (inst "t=i_92"))
                                                (rule "replaceKnownSelect_taclet100000022000_25" (formula "36") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "36"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "commute_or" (formula "41") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "36") (inst "t=i_92"))
                                                (rule "replaceKnownSelect_taclet100000022000_25" (formula "36") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                                (rule "andLeft" (formula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "36"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0"))
                                                (rule "add_literals" (formula "36") (term "0"))
                                                (rule "leq_literals" (formula "36"))
                                                (rule "closeFalse" (formula "36"))
                                             )
                                          )
                                          (branch "CUT: result_2.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "arrayLengthNotNegative" (formula "40") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "32") (term "1,1,0"))
                                             (rule "cut_direct" (formula "46") (term "0,0"))
                                             (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "36") (inst "t=i_92"))
                                                (rule "replaceKnownSelect_taclet100000022000_25" (formula "36") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                                (rule "andLeft" (formula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "36"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0"))
                                                (rule "add_literals" (formula "36") (term "0"))
                                                (rule "leq_literals" (formula "36"))
                                                (rule "closeFalse" (formula "36"))
                                             )
                                             (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "36") (inst "t=i_92"))
                                                (rule "replaceKnownSelect_taclet100000022000_25" (formula "36") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                                (rule "andLeft" (formula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "36"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0"))
                                                (rule "leq_literals" (formula "36"))
                                                (rule "closeFalse" (formula "36"))
                                             )
                                          )
                                       )
                                       (branch " !(self.msg = result_1 | !self.msg.<created> = TRUE) & self.msg[i_92] = null"
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "orRight" (formula "42"))
                                          (rule "notRight" (formula "43"))
                                          (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "arrayLengthIsAShort" (formula "35") (term "1,1,1,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "commute_or" (formula "35") (term "0,0,0,1,1,1,0"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch "CUT: result_2.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "20") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthNotNegative" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "32") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "cut_direct" (formula "45") (term "0,0"))
                                             (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "14") (inst "t=i_92"))
                                                (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,0,1"))
                                                (rule "leq_literals" (formula "14") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "closeFalse" (formula "14"))
                                             )
                                             (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "14") (inst "t=i_92"))
                                                (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,0,1"))
                                                (rule "leq_literals" (formula "14") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "closeFalse" (formula "14"))
                                             )
                                          )
                                          (branch "CUT: result_2.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,0"))
                                             (rule "arrayLengthIsAShort" (formula "20") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "arrayLengthNotNegative" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "32") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "cut_direct" (formula "45") (term "0,0"))
                                             (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "14") (inst "t=i_92"))
                                                (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "14") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "14"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0"))
                                                (rule "leq_literals" (formula "14"))
                                                (rule "closeFalse" (formula "14"))
                                             )
                                             (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                (rule "allLeft" (formula "14") (inst "t=i_92"))
                                                (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "14") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " !( self.msg.<created> = TRUE | (self.msg@heap).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) & (self.msg@heap)[i_92]@anon_heap<<anonHeapFunction>> = null"
                                       (rule "andLeft" (formula "4"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "orRight" (formula "41"))
                                       (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "56"))
                                       (rule "close" (formula "41") (ifseqformula "6"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "notRight" (formula "52"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_13"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                 (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "41") (ifseqformula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "52"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_13"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                              (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "42") (ifseqformula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "notRight" (formula "52"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_13"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                           (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "43") (ifseqformula "2"))
                        )
                     )
                     (branch "Case 2"
                        (rule "notRight" (formula "52"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                        (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "44") (ifseqformula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "nonNull" (formula "52") (inst "i=i"))
                     (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "44")))
                     (rule "greater_literals" (formula "52") (term "0"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "allRight" (formula "52") (inst "sk=i_91"))
                     (rule "impRight" (formula "52"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "54"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_930"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "38") (ifseqformula "48"))
                     (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "ifEqualsNull" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_931"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "6") (ifseqformula "49"))
                     (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "23") (ifseqformula "49"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_imp2or" (formula "32") (term "0"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "32") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "shift_paren_or" (formula "41"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "15") (term "0"))
                     (rule "commute_or" (formula "36") (term "0,0"))
                     (rule "commute_or" (formula "28") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "commute_or" (formula "32") (term "0,0"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "commute_or_2" (formula "30") (term "0"))
                     (rule "commute_or_2" (formula "31") (term "0"))
                     (rule "commute_or_2" (formula "29") (term "0"))
                     (rule "commute_or" (formula "37") (term "0,0"))
                     (rule "commute_or_2" (formula "34") (term "0,1,1,1,1,0"))
                     (rule "shift_paren_or" (formula "40") (term "0"))
                     (rule "commute_or_2" (formula "34") (term "0,0,1,1,1,0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "commute_or" (formula "15") (term "0,0"))
                     (rule "orLeft" (formula "2"))
                     (branch " ( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | !( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & anon_entr_arr[i_91]@anon_heap<<anonHeapFunction>> = null"
                        (rule "andLeft" (formula "2"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "35") (term "0,0,1,1,1,1,0"))
                        (rule "commute_or" (formula "35") (term "0,0,0,1,1,1,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " result_1 = anon_entr_arr | !anon_entr_arr.<created> = TRUE TRUE"
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "arrayLengthNotNegative" (formula "35") (term "1,1,1,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "20") (term "1,0"))
                           (rule "arrayLengthNotNegative" (formula "28") (term "1,0"))
                           (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "29") (term "1,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "arrayLengthIsAShort" (formula "39") (term "1,1,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "arrayLengthNotNegative" (formula "21") (term "1,1"))
                           (rule "cut_direct" (formula "28") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "cut_direct" (formula "45") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "56") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "1,2,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "37") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "38")))
                                 (rule "wellFormedAnon" (formula "37") (term "0,1,0"))
                                 (rule "wellFormedAnonEQ" (formula "37") (term "1,1,0") (ifseqformula "23"))
                                 (rule "wellFormedAnonEQ" (formula "37") (term "0,0,1,0") (ifseqformula "23"))
                                 (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0,0,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                 (rule "eqSymm" (formula "37") (term "1"))
                                 (rule "replace_known_left" (formula "37") (term "1,0,1,0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,2,2,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,2,2,0,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "nonNull" (formula "37") (term "1,1,1,1,0") (inst "i=i"))
                                 (rule "greater_literals" (formula "37") (term "0,1,1,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                 (rule "sub_literals" (formula "37") (term "2,1,0,1,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,1,1,0"))
                                 (rule "nonNull" (formula "37") (term "0,1,1,1,0") (inst "i=i"))
                                 (rule "sub_literals" (formula "37") (term "2,1,0,1,1,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "50")))
                                 (rule "greater_literals" (formula "37") (term "0,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,1,1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,1,1,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,1,1,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,1,1,1,1,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,1,1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "44") (term "0,0,0"))
                                 (branch "CUT: result_3 = null TRUE"
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,1,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "37") (inst "t=i_91"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_956"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "59")) (ifInst ""  (formula "34")))
                                    (rule "pullOutSelect" (formula "38") (term "2,0,1") (inst "selectSK=arr_957"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "60")) (ifInst ""  (formula "34")))
                                    (rule "allLeft" (formula "19") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "46") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_958"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "63")) (ifInst ""  (formula "35")))
                                    (rule "narrowSelectArrayType" (formula "46") (term "1,0") (ifseqformula "32") (ifseqformula "63"))
                                    (rule "narrowSelectArrayType" (formula "46") (term "2,0") (ifseqformula "13") (ifseqformula "63"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                    (rule "hideAuxiliaryEq" (formula "46"))
                                    (rule "allLeft" (formula "23") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "allLeft" (formula "53") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "notLeft" (formula "53"))
                                    (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_959"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "58") (ifseqformula "10"))
                                 )
                                 (branch "CUT: result_3 = null FALSE"
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,1,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "37") (inst "t=i_91"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_952"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "60")) (ifInst ""  (formula "34")))
                                    (rule "pullOutSelect" (formula "38") (term "1,0,1") (inst "selectSK=arr_953"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")) (ifInst ""  (formula "34")))
                                    (rule "allLeft" (formula "29") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "notLeft" (formula "29"))
                                    (rule "allLeft" (formula "19") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "46") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_954"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "65")) (ifInst ""  (formula "35")))
                                    (rule "narrowSelectArrayType" (formula "46") (term "1,0") (ifseqformula "32") (ifseqformula "65"))
                                    (rule "narrowSelectArrayType" (formula "46") (term "2,0") (ifseqformula "13") (ifseqformula "65"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                    (rule "hideAuxiliaryEq" (formula "46"))
                                    (rule "allLeft" (formula "25") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "53") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "notLeft" (formula "53"))
                                    (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_955"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "58") (ifseqformula "10"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "allLeft" (formula "41") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_951"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "3"))
                              )
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "cut_direct" (formula "45") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "41") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "1,2,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,1") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "39") (term "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,0,1") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "36") (term "1"))
                                 (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "37") (term "0") (inst "i_0=i_0") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "38")))
                                 (rule "wellFormedAnon" (formula "37") (term "0,1,0"))
                                 (rule "wellFormedAnonEQ" (formula "37") (term "1,1,0") (ifseqformula "23"))
                                 (rule "wellFormedAnonEQ" (formula "37") (term "0,0,1,0") (ifseqformula "23"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                 (rule "translateJavaAddInt" (formula "37") (term "0,2,2,0,1,0,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "37") (term "1,1,0,0,0,1,0,0"))
                                 (rule "eqSymm" (formula "37") (term "1"))
                                 (rule "replace_known_left" (formula "37") (term "0,1,1,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "40")) (ifInst ""  (formula "22")))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,2,2,0,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,2,2,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "nonNull" (formula "37") (term "1,1,1,1,0") (inst "i=i"))
                                 (rule "sub_literals" (formula "37") (term "2,1,0,1,1,1,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "50")))
                                 (rule "greater_literals" (formula "37") (term "0,1,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,1,1,0"))
                                 (rule "nonNull" (formula "37") (term "0,1,1,1,0") (inst "i=i"))
                                 (rule "greater_literals" (formula "37") (term "0,1,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "51")))
                                 (rule "sub_literals" (formula "37") (term "2,1,0,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,1,1,1,1,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,1,1,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,1,1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,1,1,1,1,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,1,1,1,0"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                                 (rule "cut_direct" (formula "44") (term "0,0,0"))
                                 (branch "CUT: result_3 = null TRUE"
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,1,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,1,1,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "37") (inst "t=i_91"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_947"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "60")) (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "38") (term "2,0,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_948"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "60")) (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "allLeft" (formula "22") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "allLeft" (formula "25") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "45") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_949"))
                                    (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "63")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                    (rule "hideAuxiliaryEq" (formula "45"))
                                    (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "33") (ifseqformula "62"))
                                    (rule "allLeft" (formula "19") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "32") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "allLeft" (formula "52") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "52") (term "0,0,1"))
                                    (rule "leq_literals" (formula "52") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "notLeft" (formula "52"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_950"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "57") (ifseqformula "10"))
                                 )
                                 (branch "CUT: result_3 = null FALSE"
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "commute_or" (formula "39") (term "0,0,1,1,1,1,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0,1,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "37") (inst "t=i_91"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "2,0,1") (inst "selectSK=arr_943"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "38") (term "2,0,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,1") (inst "selectSK=arr_944"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "38") (term "1,0,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "allLeft" (formula "24") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "allLeft" (formula "19") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "23") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "allLeft" (formula "46") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_945"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "65")) (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                    (rule "hideAuxiliaryEq" (formula "46"))
                                    (rule "narrowSelectArrayType" (formula "46") (term "0,0,0") (ifseqformula "34") (ifseqformula "64"))
                                    (rule "allLeft" (formula "32") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "notLeft" (formula "32"))
                                    (rule "allLeft" (formula "52") (inst "t=i_91"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                    (rule "leq_literals" (formula "52") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "notLeft" (formula "52"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_946"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "57") (ifseqformula "10"))
                                 )
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "allLeft" (formula "41") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_942"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "3"))
                              )
                           )
                        )
                        (branch " result_1 = anon_entr_arr | !anon_entr_arr.<created> = TRUE FALSE"
                           (rule "orRight" (formula "42"))
                           (rule "notRight" (formula "43"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,2,0,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "38") (term "1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "54") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "36") (term "0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,2,0,1,0,0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,1,0,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "35") (term "0,1,0,1,0,1,0,0,1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "2"))
                           (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "36") (term "0") (inst "i_0=i_0") (inst "i=i"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "37")))
                           (rule "wellFormedAnon" (formula "36") (term "0,1,0"))
                           (rule "wellFormedAnonEQ" (formula "36") (term "1,1,0") (ifseqformula "24"))
                           (rule "wellFormedAnonEQ" (formula "36") (term "0,0,1,0") (ifseqformula "24"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,2,2,0,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0,0,1,0,0"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,2,2,0,1,0,0,1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "36") (term "1,1,0,0,0,1,1,0,0"))
                           (rule "eqSymm" (formula "36") (term "1"))
                           (rule "replace_known_left" (formula "36") (term "1,1,1,0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "7")) (ifInst ""  (formula "23")) (ifInst ""  (formula "39")) (ifInst ""  (formula "7")))
                           (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,2,2,0,1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,2,2,0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "nonNull" (formula "36") (term "0,1,1,1,0") (inst "i=i"))
                           (rule "sub_literals" (formula "36") (term "2,1,0,1,1,0,1,1,1,0"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "49")))
                           (rule "greater_literals" (formula "36") (term "0,0,1,1,1,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,1,0"))
                           (rule "nonNull" (formula "36") (term "1,1,1,1,0") (inst "i=i"))
                           (rule "sub_literals" (formula "36") (term "2,1,0,1,1,1,1,1,1,0"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
                           (rule "greater_literals" (formula "36") (term "0,1,1,1,1,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,1,1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0,0,1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0,0,1,1,1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0,1,1,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,1,1,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,1,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,1,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,1,1,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,1,1,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,1,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,1,1,1,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,1,1,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,1,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,1,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "27") (term "1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "arrayLengthNotNegative" (formula "28") (term "1,1,1,0,0"))
                           (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "arrayLengthIsAShort" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "cut_direct" (formula "26") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "arrayLengthNotNegative" (formula "39") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "20") (term "1,0"))
                              (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0,1,1,1,0"))
                              (rule "commute_or_2" (formula "39") (term "0,1,1,1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "commute_or" (formula "41") (term "0,0,0,1,1,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,1,1,1,1,0"))
                              (rule "cut_direct" (formula "45") (term "0,0,0"))
                              (branch "CUT: result_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "allLeft" (formula "12") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "43") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_941"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "4"))
                              )
                              (branch "CUT: result_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "12") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "43") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_940"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "4"))
                              )
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "arrayLengthNotNegative" (formula "39") (term "1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "20") (term "1,0"))
                              (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0,1,1,1,0"))
                              (rule "commute_or_2" (formula "39") (term "0,1,1,1,1,0"))
                              (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "commute_or" (formula "41") (term "0,0,0,1,1,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,1,1,1,1,0"))
                              (rule "cut_direct" (formula "45") (term "0,0,0"))
                              (branch "CUT: result_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "allLeft" (formula "12") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "43") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_939"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "4"))
                              )
                              (branch "CUT: result_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "12") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "43") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_938"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                     (branch " !( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | !( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)) & arr_931<<selectSK>> = null"
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "orRight" (formula "41"))
                        (rule "notRight" (formula "42"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                        (rule "ifEqualsNull" (formula "2"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_and" (formula "2") (term "0"))
                        (rule "orLeft" (formula "2"))
                        (branch " anon_entr_arr[i_91]@anon_heap_sort<<anonHeapFunction>> = null & ( result_1 = anon_entr_arr | !anon_entr_arr.<created> = TRUE)"
                           (rule "andLeft" (formula "2"))
                           (rule "commute_or" (formula "36") (term "0,0,1,1,1,1,0"))
                           (rule "commute_or" (formula "36") (term "0,0,0,1,1,1,0"))
                           (rule "arrayLengthNotNegative" (formula "28") (term "1,1"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "arrayLengthNotNegative" (formula "30") (term "1,0"))
                           (rule "arrayLengthIsAShort" (formula "41") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "arrayLengthIsAShort" (formula "31") (term "1,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "arrayLengthIsAShort" (formula "22") (term "1,1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "cut_direct" (formula "44") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "21") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "1,2,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "21") (term "0,1,1,0") (ifseqformula "2"))
                              (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                              (rule "arrayLengthNotNegative" (formula "38") (term "1,1,1,0,0,0,1,0"))
                              (rule "cut_direct" (formula "27") (term "0"))
                              (branch "CUT: result_2.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "allLeft" (formula "40") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_937"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "46") (ifseqformula "2"))
                              )
                              (branch "CUT: result_2.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "allLeft" (formula "40") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_936"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "46") (ifseqformula "2"))
                              )
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "arrayLengthNotNegative" (formula "21") (term "1,1"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch "CUT: result_2.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "arrayLengthIsAShort" (formula "22") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthNotNegative" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                 (rule "allLeft" (formula "42") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "notLeft" (formula "42"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_935"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "3"))
                              )
                              (branch "CUT: result_2.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "arrayLengthIsAShort" (formula "22") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "arrayLengthNotNegative" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                 (rule "allLeft" (formula "42") (inst "t=i_91"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "notLeft" (formula "42"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_934"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "49")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "47") (ifseqformula "3"))
                              )
                           )
                        )
                        (branch " !( result_1 = anon_entr_arr | !anon_entr_arr.<created> = TRUE) & anon_entr_arr[i_91] = null"
                           (rule "andLeft" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "orRight" (formula "42"))
                           (rule "notRight" (formula "43"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "commute_or" (formula "35") (term "0,0,1,1,1,1,0"))
                           (rule "commute_or" (formula "35") (term "0,0,0,1,1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "33") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "38") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "arrayLengthNotNegative" (formula "36") (term "1,1,1,0,0,0,1,0"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "21") (term "1,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "cut_direct" (formula "29") (term "0"))
                           (branch "CUT: result_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "42") (inst "t=i_91"))
                              (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "42") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                              (rule "add_literals" (formula "42") (term "0,0,1"))
                              (rule "leq_literals" (formula "42") (term "0,1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_933"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "48"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "47") (ifseqformula "3"))
                           )
                           (branch "CUT: result_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "allLeft" (formula "42") (inst "t=i_91"))
                              (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1"))
                              (rule "leq_literals" (formula "42") (term "0,1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "42") (term "0,1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_932"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "2")))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "47") (ifseqformula "3"))
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "wellFormedAnon" (formula "52") (term "0"))
                  (rule "wellFormedAnonEQ" (formula "52") (term "0,0") (ifseqformula "19"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "52") (term "1,0,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "34")))
                  (rule "orRight" (formula "52"))
                  (rule "orRight" (formula "52"))
                  (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                  (rule "closeFalse" (formula "35"))
               )
            )
         )
      )
      (branch "Exceptional Post (sort)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "7"))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "13") (term "0,2,2,0,1,0,0,1,0,1,1"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "11"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "13"))
         (rule "notLeft" (formula "18"))
         (rule "close" (formula "21") (ifseqformula "20"))
      )
      (branch "Pre (sort)"
         (builtin "One Step Simplification" (formula "7"))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "1")))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "14")))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "23")))
         (rule "closeFalse" (formula "12"))
      )
   )
   (branch "Exceptional Post (extractBallots)"
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "9")))
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "close" (formula "17") (ifseqformula "16"))
   )
   (branch "Pre (extractBallots)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "1")))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "10")))
      (rule "closeTrue" (formula "18"))
   )
)
(branch "Exceptional Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "13") (ifseqformula "12"))
)
(branch "Pre (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "1")) (ifInst ""  (formula "10")))
   (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "10")))
   (rule "closeFalse" (formula "4"))
)
)

}
