\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Mar 19 23:34:40 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Mar 19 23:34:40 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "158797")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "data,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "3"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "nonNull" (formula "11") (inst "i=i"))
(rule "greater_literals" (formula "11") (term "0,1"))
(builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "19")))
(rule "sub_literals" (formula "11") (term "2,1,0"))
(builtin "One Step Simplification" (formula "11"))
(rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "nonNull" (formula "10") (inst "i=i"))
(rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "greater_literals" (formula "10") (term "0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_processBallots,savedHeapBefore_processBallots"))
(builtin "One Step Simplification" (formula "22"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "ballotsAsAMessage"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "commute_or" (formula "9") (term "0,0"))
(builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_checkAndGetBallots,result_0,exc_0") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::checkAndGetBallots([B)].JML normal_behavior operation contract.0"))
(branch "Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
   (rule "assignment" (formula "27") (term "1"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationAssign" (formula "27") (term "1"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "entr_arr"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "3"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "16"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "nonNull" (formula "16") (inst "i=i"))
   (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "27")))
   (rule "greater_literals" (formula "16") (term "0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "27"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "15") (inst "i=i"))
   (rule "greater_literals" (formula "15") (term "0,1"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
   (rule "sub_literals" (formula "15") (term "2,1,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "14") (inst "i=i"))
   (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")))
   (rule "greater_literals" (formula "14") (term "0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_imp2or" (formula "15") (term "0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "commute_or_2" (formula "13") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or_2" (formula "15") (term "0"))
   (rule "commute_or_2" (formula "14") (term "0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (rule "commute_or" (formula "15") (term "0,0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_extractBallots,result_1,exc_1") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::extractBallots([B)].JML normal_behavior operation contract.0"))
   (branch "Post (extractBallots)"
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "25")))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "assignment" (formula "32") (term "1"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")))
      (rule "sub_literals" (formula "18") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "3"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "nonNull" (formula "19") (inst "i=i"))
      (rule "greater_literals" (formula "19") (term "0,1"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
      (rule "sub_literals" (formula "19") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "32"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "17") (inst "i=i"))
      (rule "greater_literals" (formula "17") (term "0,1"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")))
      (rule "sub_literals" (formula "17") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "23"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
      (rule "sub_literals" (formula "18") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "24"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "20") (term "0"))
      (rule "commute_or_2" (formula "19") (term "0"))
      (rule "commute_or_2" (formula "17") (term "0"))
      (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
      (rule "commute_or_2" (formula "22") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1") (ifseqformula "1"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "39"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (rule "commute_or" (formula "25") (term "0,0"))
      (rule "commute_or" (formula "24") (term "0,0"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_sort,result_2,exc_2,heapAfter_sort,anon_heap_sort") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::sort([[B)].JML normal_behavior operation contract.0"))
      (branch "Post (sort)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "24") (term "0,2,2,0,1,0,0,1,0,1,1"))
         (rule "andLeft" (formula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "24"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "30"))
         (rule "notLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "0,2,2,0,1,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
         (rule "assignment" (formula "48") (term "1"))
         (builtin "One Step Simplification" (formula "48"))
         (builtin "Block Contract" (formula "48") (newnames "anon_heap,result_3,exc_3,heap_Before_BLOCK,savedHeap_Before_BLOCK,entr_arr_Before_BLOCK,o,f,anon_entr_arr"))
         (branch "Validity"
            (builtin "One Step Simplification" (formula "49"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "24"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "eqSymm" (formula "51") (term "1,0,0,1,0,1"))
            (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")))
            (rule "true_left" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
            (rule "variableDeclarationAssign" (formula "49") (term "1"))
            (rule "variableDeclaration" (formula "49") (term "1"))
            (rule "assignment" (formula "49") (term "1"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "nonNull" (formula "30") (inst "i=i"))
            (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
            (rule "greater_literals" (formula "30") (term "0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "32") (ifseqformula "33"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_2"))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "29") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "35") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "28") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "48") (term "0,0,1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "48") (term "0,1,1,1,1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "48") (term "0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,0,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "33") (ifseqformula "7"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "nonNull" (formula "35") (inst "i=i"))
            (rule "greater_literals" (formula "35") (term "0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "sub_literals" (formula "35") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "narrowSelectArrayType" (formula "35") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "narrowSelectArrayType" (formula "34") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "45") (term "0"))
            (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "44") (term "0"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "43") (term "0"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "42") (term "0"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_10" (formula "36") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "36") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "41") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "35") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_12" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "34") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "40") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "33") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "33") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_14" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_14" (formula "35") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "39") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "34") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or" (formula "32") (term "0,0"))
            (rule "arrayLengthNotNegative" (formula "26") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or" (formula "38") (term "0,0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_retrieveSortedMessages,result_5,exc_5,heapAfter_retrieveSortedMessages,anon_heap_retrieveSortedMessages") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::retrieveSortedMessages()].JML normal_behavior operation contract.0"))
            (branch "Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "43"))
               (builtin "One Step Simplification" (formula "59"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "43") (term "1,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "43") (term "1,1,0,0,1,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0,1,1") (ifseqformula "31"))
               (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "43") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0") (ifseqformula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1,0") (ifseqformula "31"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "47"))
               (rule "andLeft" (formula "48"))
               (rule "andLeft" (formula "48"))
               (rule "andLeft" (formula "50"))
               (rule "notLeft" (formula "49"))
               (rule "notLeft" (formula "48"))
               (rule "orRight" (formula "50"))
               (rule "replace_known_right" (formula "45") (term "1,0,1") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")) (ifInst ""  (formula "50")))
               (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
               (rule "assignment" (formula "68") (term "1"))
               (builtin "One Step Simplification" (formula "68"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "49") (inst "i=i"))
               (rule "sub_literals" (formula "49") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "52")))
               (rule "greater_literals" (formula "49") (term "0"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "48") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_3"))
               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "48") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "48") (term "0"))
               (rule "replaceKnownSelect_taclet00000_16" (formula "49") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "48"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "48") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "48") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "47") (term "0"))
               (rule "nnf_imp2or" (formula "49") (term "0"))
               (rule "nnf_imp2or" (formula "48") (term "0"))
               (rule "nnf_notAnd" (formula "47") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
               (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
               (rule "mul_literals" (formula "47") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "49") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
               (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
               (rule "mul_literals" (formula "49") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "48") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
               (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
               (rule "mul_literals" (formula "48") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
               (rule "arrayLengthIsAShort" (formula "34") (term "1,1,1,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "arrayLengthNotNegative" (formula "34") (term "1,1,1,0,0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "49") (term "0"))
               (rule "commute_or" (formula "50") (term "0,0"))
               (rule "commute_or" (formula "49") (term "0,0"))
               (rule "tryEmpty" (formula "69") (term "1"))
               (rule "blockEmptyLabel" (formula "69") (term "1"))
               (rule "blockEmpty" (formula "69") (term "1"))
               (rule "methodCallEmpty" (formula "69") (term "1"))
               (rule "emptyModality" (formula "69") (term "1"))
               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "53")))
               (rule "andRight" (formula "69") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "69") (userinteraction))
                  (branch "Case 1"
                     (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "69") (term "0") (inst "i_0=i_0") (inst "i=i") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "51") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "51") (userinteraction))
                           (branch "Case 1"
                              (rule "cut" (inst "cutFormula=  array2seq2d(heap, result_1)
= array2seq2d(heapAfter_sort, result_1)") (userinteraction))
                              (branch "CUT: array2seq2d(heap, result_1) = array2seq2d(heapAfter_sort, result_1) TRUE"
                                 (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_retrieveSortedMessages,
              result_2)
= array2seq2d(heapAfter_sort, result_2)") (userinteraction))
                                 (branch "CUT: array2seq2d(heapAfter_retrieveSortedMessages, result_2) = array2seq2d(heapAfter_sort, result_2) TRUE"
                                    (rule "cut" (inst "cutFormula=  array2seq2d(heap,
              byte[][]::select(heap,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))
= array2seq2d(heapAfter_sort,
              byte[][]::select(heap,
                               null,
                               verif.selectvoting.system.core.ConservativeExtension::$messages))") (userinteraction))
                                    (branch "CUT: array2seq2d(heap, verif.selectvoting.system.core.ConservativeExtension.messages) = array2seq2d(heapAfter_sort, verif.selectvoting.system.core.ConservativeExtension.messages) TRUE"
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "1") (userinteraction))
                                       (rule "seqPermSym" (formula "50") (userinteraction))
                                       (rule "seqPermTrans" (formula "21") (ifseqformula "50") (userinteraction))
                                       (rule "seqPermTrans" (formula "31") (ifseqformula "21") (userinteraction))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "3") (userinteraction))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "2") (userinteraction))
                                       (rule "seqPermTrans" (formula "38") (ifseqformula "31") (userinteraction))
                                       (rule "seqPermSym" (formula "57") (userinteraction))
                                       (rule "close" (formula "57") (ifseqformula "38") (userinteraction))
                                    )
                                    (branch "CUT: array2seq2d(heap, verif.selectvoting.system.core.ConservativeExtension.messages) = array2seq2d(heapAfter_sort, verif.selectvoting.system.core.ConservativeExtension.messages) FALSE"
                                       (rule "array2seq2dDef" (formula "53") (term "0") (inst "u=u") (userinteraction))
                                       (rule "array2seq2dDef" (formula "53") (term "1") (inst "u=u") (userinteraction))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "53"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "2"))
                                       (rule "array2seqDef" (formula "53") (term "2,1") (inst "u=u_1"))
                                       (rule "eqSymm" (formula "53"))
                                       (rule "eqSeqDef" (formula "53") (inst "iv=iv"))
                                       (rule "getOfSeqDef" (formula "53") (term "0,1,0,1"))
                                       (rule "castDel" (formula "53") (term "2,0,1,0,1"))
                                       (rule "castDel" (formula "53") (term "1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "53") (term "0,2,1,2,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "53") (term "0,2,0,1,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "53") (term "1,1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "53") (term "1,1,1,0,0,1,0,1"))
                                       (rule "add_zero_right" (formula "53") (term "1,1,0,0,1,0,1"))
                                       (rule "lenOfSeqDef" (formula "53") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "53") (term "1,1,0"))
                                       (rule "mul_literals" (formula "53") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "53") (term "1,1,0"))
                                       (rule "lenOfSeqDef" (formula "53") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "53") (term "1,0,0"))
                                       (rule "times_zero_2" (formula "53") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "53") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "allRight" (formula "53") (inst "sk=iv_4"))
                                       (rule "impRight" (formula "53"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "lenOfSeqDef" (formula "2") (term "1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                       (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1,1"))
                                       (rule "getOfSeqDef" (formula "55") (term "1"))
                                       (rule "castDel" (formula "55") (term "1,1"))
                                       (rule "castDel" (formula "55") (term "2,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,2,1,1,1"))
                                       (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,0,1"))
                                       (rule "times_zero_2" (formula "55") (term "1,1,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "array2seqDef" (formula "55") (term "1,1") (inst "u=u"))
                                       (rule "pullOutSelect" (formula "55") (term "0,1,1,1") (inst "selectSK=arr_654"))
                                       (rule "applyEq" (formula "56") (term "1,2,1,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "22")))
                                       (rule "applyEqReverse" (formula "56") (term "0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,2,1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "55") (term "0"))
                                       (branch " verif.selectvoting.system.core.ConservativeExtension.messages.length >= 1 + iv_4 TRUE"
                                          (rule "replace_known_left" (formula "56") (term "0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "56") (inst "iv=iv"))
                                          (rule "getOfSeqDef" (formula "56") (term "1,1,0,1"))
                                          (rule "castDel" (formula "56") (term "2,1,1,0,1"))
                                          (rule "castDel" (formula "56") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,2,1,1,1,0,1"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1,1,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0,1,1,0,1"))
                                          (rule "lenOfSeqDef" (formula "56") (term "0,0"))
                                          (rule "eqSymm" (formula "56") (term "0"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0"))
                                          (rule "lenOfSeqDef" (formula "56") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,1,0,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,1,0,0,1"))
                                          (rule "getOfSeqDef" (formula "56") (term "0,1,0,1"))
                                          (rule "castDel" (formula "56") (term "2,0,1,0,1"))
                                          (rule "castDel" (formula "56") (term "1,0,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,2,1,0,1,0,1"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0,0,1,0,1"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,1,0,0,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0,0,1,0,1"))
                                          (rule "eqSymm" (formula "56") (term "1,0,1"))
                                          (rule "lenOfSeqDef" (formula "56") (term "0,0"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "allRight" (formula "56") (inst "sk=iv_5"))
                                          (rule "impRight" (formula "56"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "1")))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "pullOutSelect" (formula "58") (term "1,0") (inst "selectSK=arr_655"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch " verif.selectvoting.system.core.ConservativeExtension.messages.length >= 1 TRUE"
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthIsAShort" (formula "55") (term "1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "arrayLengthNotNegative" (formula "57") (term "1,1,0"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "allLeft" (formula "43") (inst "t=iv_4"))
                                             (rule "replaceKnownSelect_taclet1000000000000_18" (formula "43") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000000000000_19" (formula "43") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                             (rule "leq_literals" (formula "43") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "notLeft" (formula "43"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "narrowSelectArrayType" (formula "60") (term "1,0") (ifseqformula "15") (ifseqformula "59"))
                                             (rule "eqSymm" (formula "60"))
                                             (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "37") (ifseqformula "59"))
                                             (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "15") (ifseqformula "59"))
                                             (rule "allLeft" (formula "56") (inst "t=iv_4"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                             (rule "leq_literals" (formula "56") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "notLeft" (formula "56"))
                                             (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_656"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                             (rule "replaceKnownSelect_taclet1000000000000_18" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000000000000_19" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " verif.selectvoting.system.core.ConservativeExtension.messages[iv_4].length >= 1 TRUE"
                                                (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "4")))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages[iv_4].<created> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "closeTrue" (formula "62"))
                                                )
                                                (branch " verif.selectvoting.system.core.ConservativeExtension.messages[iv_4].<created> = TRUE FALSE"
                                                   (rule "referencedObjectIsCreatedRight" (formula "60") (ifseqformula "61"))
                                                   (rule "close" (formula "60") (ifseqformula "16"))
                                                )
                                             )
                                             (branch " verif.selectvoting.system.core.ConservativeExtension.messages[iv_4].length >= 1 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "59"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "times_zero_2" (formula "4") (term "1,0"))
                                                (rule "add_zero_right" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch " verif.selectvoting.system.core.ConservativeExtension.messages.length >= 1 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "59"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "times_zero_2" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch " verif.selectvoting.system.core.ConservativeExtension.messages.length >= 1 + iv_4 FALSE"
                                          (rule "eqSymm" (formula "56"))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")))
                                          (rule "closeTrue" (formula "56"))
                                       )
                                    )
                                 )
                                 (branch "CUT: array2seq2d(heapAfter_retrieveSortedMessages, result_2) = array2seq2d(heapAfter_sort, result_2) FALSE"
                                    (rule "array2seq2dDef" (formula "52") (term "0") (inst "u=u") (userinteraction))
                                    (rule "array2seq2dDef" (formula "52") (term "1") (inst "u=u") (userinteraction))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                    (rule "eqSeqDef" (formula "52") (inst "iv=iv"))
                                    (rule "lenOfSeqDef" (formula "52") (term "0,0"))
                                    (rule "eqSymm" (formula "52") (term "0"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "52") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "52") (term "1,1,0"))
                                    (rule "getOfSeqDef" (formula "52") (term "0,1,0,1"))
                                    (rule "castDel" (formula "52") (term "2,0,1,0,1"))
                                    (rule "castDel" (formula "52") (term "1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "52") (term "0,2,1,1,0,1,0,1"))
                                    (rule "eqSymm" (formula "52") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "52") (term "1,1,1,0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "52") (term "1,1,0,1,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "52") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,1,1,0,0,1"))
                                    (rule "times_zero_2" (formula "52") (term "1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "52") (term "1,1,1,0,0,1"))
                                    (rule "lenOfSeqDef" (formula "52") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,0,0"))
                                    (rule "times_zero_2" (formula "52") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "allRight" (formula "52") (inst "sk=iv_2"))
                                    (rule "impRight" (formula "52"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "getOfSeqDef" (formula "54") (term "0"))
                                    (rule "castDel" (formula "54") (term "1,0"))
                                    (rule "castDel" (formula "54") (term "2,0"))
                                    (rule "add_zero_right" (formula "54") (term "0,2,1,1,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,0,0"))
                                    (rule "times_zero_2" (formula "54") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "54") (term "1,0,0"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "array2seqDef" (formula "54") (term "1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "54") (term "1,1") (inst "u=u"))
                                    (rule "pullOutSelect" (formula "54") (term "1,2,1,0") (inst "selectSK=arr_650"))
                                    (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                    (rule "applyEqReverse" (formula "55") (term "1,2,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "55") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "54") (term "1,2,1,1") (inst "selectSK=arr_651"))
                                    (rule "applyEq" (formula "55") (term "0,1,1,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                    (rule "replaceKnownSelect_taclet100000000000_18" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100000000000_19" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                    (rule "applyEqReverse" (formula "55") (term "0,1,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "55") (term "1,2,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "54") (term "0"))
                                    (branch "result_2.length >= 1 + iv_2 TRUE"
                                       (rule "eqSymm" (formula "55"))
                                       (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "55") (inst "iv=iv"))
                                       (rule "getOfSeqDef" (formula "55") (term "1,1,0,1"))
                                       (rule "castDel" (formula "55") (term "2,1,1,0,1"))
                                       (rule "castDel" (formula "55") (term "1,1,1,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,2,1,1,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,1,0,1"))
                                       (rule "times_zero_2" (formula "55") (term "1,1,1,0,1,1,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0,1,1,0,1"))
                                       (rule "lenOfSeqDef" (formula "55") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                       (rule "lenOfSeqDef" (formula "55") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,0,1"))
                                       (rule "times_zero_2" (formula "55") (term "1,1,1,1,0,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,1,0,0,1"))
                                       (rule "getOfSeqDef" (formula "55") (term "0,1,0,1"))
                                       (rule "castDel" (formula "55") (term "1,0,1,0,1"))
                                       (rule "castDel" (formula "55") (term "2,0,1,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,2,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,1,0,1"))
                                       (rule "times_zero_2" (formula "55") (term "1,1,1,0,0,1,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0,0,1,0,1"))
                                       (rule "lenOfSeqDef" (formula "55") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,0,0"))
                                       (rule "times_zero_2" (formula "55") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "55") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "allRight" (formula "55") (inst "sk=iv_3"))
                                       (rule "impRight" (formula "55"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "57") (term "0,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "pullOutSelect" (formula "57") (term "1,1") (inst "selectSK=arr_652"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                                       (rule "pullOutSelect" (formula "58") (term "1,0") (inst "selectSK=arr_653"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_split" (formula "7") (term "0"))
                                       (branch "result_2.length >= 1 TRUE"
                                          (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "42") (term "0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "arrayLengthNotNegative" (formula "55") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "56") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "allLeft" (formula "47") (inst "t=iv_2"))
                                          (rule "replaceKnownSelect_taclet100000000000_18" (formula "47") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000000000_19" (formula "47") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                          (rule "leq_literals" (formula "47") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "47") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "notLeft" (formula "47"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "ifthenelse_negated" (formula "2") (term "0"))
                                          (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "15") (ifseqformula "59"))
                                          (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "38") (ifseqformula "59"))
                                          (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "50") (ifseqformula "59"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " result_2[iv_2]@anon_heap_sort<<anonHeapFunction>>.length >= 1 TRUE"
                                             (rule "replace_known_left" (formula "61") (term "0,1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "5")))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " (result_2[iv_2]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "closeTrue" (formula "61"))
                                             )
                                             (branch " (result_2[iv_2]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " result_2[iv_2].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "closeTrue" (formula "62"))
                                                )
                                                (branch " result_2[iv_2].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                   (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "61"))
                                                   (rule "close" (formula "59") (ifseqformula "38"))
                                                )
                                             )
                                          )
                                          (branch " result_2[iv_2]@anon_heap_sort<<anonHeapFunction>>.length >= 1 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "59"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "times_zero_2" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                       (branch "result_2.length >= 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                    )
                                    (branch "result_2.length >= 1 + iv_2 FALSE"
                                       (rule "eqSymm" (formula "55"))
                                       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "54")))
                                       (rule "closeTrue" (formula "55"))
                                    )
                                 )
                              )
                              (branch "CUT: array2seq2d(heap, result_1) = array2seq2d(heapAfter_sort, result_1) FALSE"
                                 (rule "array2seq2dDef" (formula "51") (term "0") (inst "u=u") (userinteraction))
                                 (rule "array2seq2dDef" (formula "51") (term "1") (inst "u=u") (userinteraction))
                                 (rule "eqSymm" (formula "51"))
                                 (rule "array2seqDef" (formula "51") (term "2,1") (inst "u=u_1"))
                                 (rule "eqSymm" (formula "51"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "51") (inst "iv=iv"))
                                 (rule "lenOfSeqDef" (formula "51") (term "0,0"))
                                 (rule "eqSymm" (formula "51") (term "0"))
                                 (rule "polySimp_elimSub" (formula "51") (term "1,1,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "51") (term "1,1,0"))
                                 (rule "getOfSeqDef" (formula "51") (term "1,1,0,1"))
                                 (rule "castDel" (formula "51") (term "2,1,1,0,1"))
                                 (rule "castDel" (formula "51") (term "1,1,1,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "0,2,1,1,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "51") (term "1,1,0,1,1,0,1"))
                                 (rule "times_zero_2" (formula "51") (term "1,1,1,0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "1,1,0,1,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "51") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "51") (term "1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "51") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "1,1,1,0,0,1"))
                                 (rule "getOfSeqDef" (formula "51") (term "0,1,0,1"))
                                 (rule "castDel" (formula "51") (term "1,0,1,0,1"))
                                 (rule "castDel" (formula "51") (term "2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "0,2,0,1,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "0,2,1,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "51") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "51") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "51") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "51") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "51") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "51") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "51"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "array2seqDef" (formula "53") (term "1,1") (inst "u=u"))
                                 (rule "pullOutSelect" (formula "53") (term "0,1,1,1") (inst "selectSK=arr_648"))
                                 (rule "applyEq" (formula "54") (term "1,2,1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "29")))
                                 (rule "applyEqReverse" (formula "54") (term "0,1,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "1,2,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "53") (term "0"))
                                 (branch "result_1.length >= 1 + iv_0 TRUE"
                                    (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "eqSeqDef" (formula "54") (inst "iv=iv"))
                                    (rule "getOfSeqDef" (formula "54") (term "0,1,0,1"))
                                    (rule "castDel" (formula "54") (term "1,0,1,0,1"))
                                    (rule "castDel" (formula "54") (term "2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,2,1,0,1,0,1"))
                                    (rule "eqSymm" (formula "54") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "54") (term "1,1,1,0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "1,1,0,1,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "54") (term "0,0"))
                                    (rule "eqSymm" (formula "54") (term "0"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "54") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "54") (term "1,1,0"))
                                    (rule "lenOfSeqDef" (formula "54") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "54") (term "1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "1,1,1,0,0,1"))
                                    (rule "getOfSeqDef" (formula "54") (term "0,1,0,1"))
                                    (rule "castDel" (formula "54") (term "1,0,1,0,1"))
                                    (rule "castDel" (formula "54") (term "2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "0,2,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "54") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "54") (term "1,1,0,0,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "54") (term "0,0"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,0,0"))
                                    (rule "times_zero_2" (formula "54") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "54") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "allRight" (formula "54") (inst "sk=iv_1"))
                                    (rule "impRight" (formula "54"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "56") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "pullOutSelect" (formula "56") (term "1,0") (inst "selectSK=arr_649"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "ifthenelse_split" (formula "6") (term "0"))
                                    (branch "result_1.length >= 1 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "arrayLengthIsAShort" (formula "55") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "true_left" (formula "55"))
                                       (rule "arrayLengthNotNegative" (formula "53") (term "1,1,1,0,0"))
                                       (rule "allLeft" (formula "34") (inst "t=iv_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                       (rule "leq_literals" (formula "34") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "34") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "notLeft" (formula "34"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "narrowSelectArrayType" (formula "58") (term "1,0") (ifseqformula "13") (ifseqformula "57"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "35") (ifseqformula "57"))
                                       (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "13") (ifseqformula "57"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "result_1[iv_0].length >= 1 TRUE"
                                          (rule "replace_known_left" (formula "59") (term "0,1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "4")))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "result_1[iv_0].<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "closeTrue" (formula "60"))
                                          )
                                          (branch "result_1[iv_0].<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "59"))
                                             (rule "close" (formula "58") (ifseqformula "14"))
                                          )
                                       )
                                       (branch "result_1[iv_0].length >= 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "57"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "times_zero_2" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "result_1.length >= 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "57"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "times_zero_2" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                                 (branch "result_1.length >= 1 + iv_0 FALSE"
                                    (rule "eqSymm" (formula "54"))
                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "53")))
                                    (rule "closeTrue" (formula "54"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "51") (userinteraction))
                              (branch "Case 1"
                                 (rule "allRight" (formula "51") (inst "sk=i_0_2") (userinteraction))
                                 (rule "impRight" (formula "51") (userinteraction))
                                 (rule "instAll" (formula "52") (term "0,2,1,0") (ifseqformula "49") (userinteraction))
                                 (rule "orLeft" (formula "1") (userinteraction))
                                 (branch "i_0_2 <= -1 | i_0_2 >= -1 + result_5.length"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "translateJavaAddInt" (formula "53") (term "0,2,2,0"))
                                    (rule "translateJavaSubInt" (formula "2") (term "1,1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "54") (term "0,2,2,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "54"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "leq_literals" (formula "2") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch " verif.selectvoting.system.core.ConservativeExtension.compare(result_5[i_0_2]@heapAfter_retrieveSortedMessages, result_5[ 1 + i_0_2]@heapAfter_retrieveSortedMessages) @heapAfter_retrieveSortedMessages <= 0"
                                    (builtin "Evaluate Query" (formula "1") (term "0") (newnames "a1_2,a2_2,callee,queryResult_4,res_compare_2"))
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "variableDeclaration" (formula "53") (term "1") (newnames "queryResult_4") (userinteraction))
                                    (builtin "Use Operation Contract" (formula "53") (newnames "heapBefore_compare_2,result_11,exc_11") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::compare([B,[B)].JML normal_behavior operation contract.0"))
                                    (branch "Post (compare)"
                                       (rule "assignment" (formula "54") (term "1") (userinteraction))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "methodCallEmpty" (formula "54") (term "1") (userinteraction))
                                       (rule "emptyModality" (formula "54") (term "1") (userinteraction))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "notRight" (formula "54") (userinteraction))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "2") (term "0") (userinteraction))
                                       (rule "applyEq" (formula "54") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
                                       (rule "replace_known_left" (formula "54") (term "1,0,1") (ifseqformula "2") (userinteraction))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "andLeft" (formula "54") (userinteraction))
                                       (rule "andLeft" (formula "55") (userinteraction))
                                       (builtin "Evaluate Query" (formula "55") (term "1,1,0,0,0,1") (newnames "a_1,b_1,callee,queryResult_5,res_min_1"))
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "variableDeclaration" (formula "56") (term "1") (newnames "queryResult_5") (userinteraction))
                                       (builtin "Use Operation Contract" (formula "56") (newnames "heapBefore_min_1,result_12,exc_12") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::min(int,int)].JML normal_behavior operation contract.0"))
                                       (branch "Post (min)"
                                          (rule "assignment" (formula "57") (term "1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "methodCallEmpty" (formula "57") (term "1") (userinteraction))
                                          (rule "emptyModality" (formula "57") (term "1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "notRight" (formula "57") (userinteraction))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "56") (term "1,1,0,0,0,1") (userinteraction))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "56") (term "1,1,0,0,0") (userinteraction))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "andLeft" (formula "57") (userinteraction))
                                          (rule "andLeft" (formula "58") (userinteraction))
                                          (rule "andLeft" (formula "58") (userinteraction))
                                          (builtin "Evaluate Query" (formula "60") (term "0") (newnames "a1_3,a2_3,callee,queryResult_6,res_compare_3"))
                                          (rule "notLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclaration" (formula "60") (term "1") (newnames "queryResult_6") (userinteraction))
                                          (builtin "Use Operation Contract" (formula "60") (newnames "heapBefore_compare_3,result_13,exc_13") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                          (branch "Post (compare)"
                                             (rule "assignment" (formula "61") (term "1") (userinteraction))
                                             (rule "methodCallEmpty" (formula "61") (term "1,1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "emptyModality" (formula "61") (term "1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "notRight" (formula "61") (userinteraction))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#))))))_00101000000000_20" (formula "62") (term "0") (userinteraction))
                                             (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
                                             (rule "replace_known_right" (formula "61") (term "1,0,1") (ifseqformula "62") (userinteraction))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "andLeft" (formula "61") (userinteraction))
                                             (rule "andLeft" (formula "62") (userinteraction))
                                             (rule "notLeft" (formula "62") (userinteraction))
                                             (rule "orRight" (formula "62") (userinteraction))
                                             (builtin "Evaluate Query" (formula "62") (term "1,1,0,0") (newnames "a_2,b_2,callee,queryResult_7,res_min_2"))
                                             (rule "notLeft" (formula "1") (userinteraction))
                                             (rule "variableDeclaration" (formula "62") (term "1") (newnames "queryResult_7") (userinteraction))
                                             (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_min_2,result_14,exc_14") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                             (branch "Post (min)"
                                                (rule "assignment" (formula "63") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "methodCallEmpty" (formula "63") (term "1") (userinteraction))
                                                (rule "emptyModality" (formula "63") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63") (userinteraction))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "64") (term "1,1,0,0") (userinteraction))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "65") (term "1,1,0,0,0") (userinteraction))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "andLeft" (formula "63") (userinteraction))
                                                (rule "andLeft" (formula "64") (userinteraction))
                                                (rule "andLeft" (formula "64") (userinteraction))
                                                (rule "orLeft" (formula "58") (userinteraction))
                                                (branch "exists int i; ( 0 <= i & i < res_min_1 & ( result_5[i_0_2][i]@heapAfter_retrieveSortedMessages < result_5[1 + i_0_2][i]@heapAfter_retrieveSortedMessages & forall int j; ( 0 <= j & j < i -> result_5[i_0_2][j]@heapAfter_retrieveSortedMessages = result_5[1 + i_0_2][j]@heapAfter_retrieveSortedMessages)))"
                                                   (rule "exLeft" (formula "58") (inst "sk=i_54") (userinteraction))
                                                   (rule "instEx" (formula "58") (term "0,1,0") (ifseqformula "66") (userinteraction))
                                                   (rule "andRight" (formula "66") (userinteraction))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,1,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,1,0,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "64") (term "0,2,0,1,0"))
                                                      (rule "translateJavaSubInt" (formula "6") (term "1,1"))
                                                      (rule "andLeft" (formula "58"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "59"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "eqSymm" (formula "65") (term "0,1"))
                                                      (rule "eqSymm" (formula "68") (term "1"))
                                                      (rule "eqSymm" (formula "65") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "64") (term "1"))
                                                      (rule "eqSymm" (formula "72") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "71") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "69") (term "0,1"))
                                                      (rule "eqSymm" (formula "69") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "62") (term "1,0"))
                                                      (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "70"))
                                                      (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,2,1,1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "72") (term "0,2,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "68") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "72") (term "0,2,1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,2,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "66") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "61"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "62"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "71"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "66") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "8"))
                                                      (rule "inEqSimp_commuteLeq" (formula "61"))
                                                      (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "73") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "70") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "1,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "71") (term "1,0,1") (ifseqformula "3"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "pullOutSelect" (formula "67") (term "0,0,0,1") (inst "selectSK=arr_828"))
                                                      (rule "applyEq" (formula "72") (term "0,0,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "73") (term "1,0,1,0,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "71") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "72") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "64") (term "1,0,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "74") (term "1,0,1,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "73") (term "1,0,0,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "74") (term "0,0,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "72") (term "0,0,0,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "77")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "40"))
                                                      (rule "eqSymm" (formula "72") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "73") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "64") (term "1,0"))
                                                      (rule "eqSymm" (formula "74") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "68") (term "0,1,1"))
                                                      (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "76"))
                                                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "75")))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "72") (term "0,1,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,1,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "72") (term "0,0,0,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,1,1,0,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "74") (term "0,0,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "74") (term "1,1,1,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "inEqSimp_commuteGeq" (formula "70") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "66") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                                      (rule "mul_literals" (formula "63") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "70") (term "0,0,1") (inst "selectSK=arr_829"))
                                                      (rule "applyEq" (formula "73") (term "1,0,0,1,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "74") (term "0,0,1") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "66") (term "0,0,1") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "67") (term "0,0,0,1,1") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "64") (term "1,0,1,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "73") (term "1,0,1,0,1,1,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "72") (term "0,0,0,1,1") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "72") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEq" (formula "74") (term "1,0,1,0,0") (ifseqformula "70"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "77")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0") (ifseqformula "40"))
                                                      (rule "eqSymm" (formula "67") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "64") (term "1,0"))
                                                      (rule "eqSymm" (formula "73") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "72") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "74") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "70") (term "1,0,0,0") (ifseqformula "76"))
                                                      (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "75")))
                                                      (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,1") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,1") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "74") (term "0,0,1") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "67") (term "0,1,0,1,1") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "72") (term "0,1,0,1,1") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "74") (term "1,1,1,0,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,1,1,0,1,1,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,1,1,0") (ifseqformula "70"))
                                                      (rule "hideAuxiliaryEq" (formula "70"))
                                                      (rule "inEqSimp_commuteLeq" (formula "73") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "66") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "70") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "67") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "63"))
                                                      (rule "polySimp_addComm1" (formula "63") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                                                      (rule "mul_literals" (formula "63") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,0,1,0"))
                                                      (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_830"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,1,0,0") (ifseqformula "40"))
                                                      (rule "inEqSimp_homoInEq1" (formula "64"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "64"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                                                      (rule "mul_literals" (formula "64") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "63") (term "2,0") (inst "selectSK=arr_831"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=arr_832"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,1,0,0") (ifseqformula "40"))
                                                      (rule "pullOutSelect" (formula "65") (term "2,0") (inst "selectSK=arr_833"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "nnf_ex2all" (formula "76"))
                                                      (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "96") (term "0") (inst "i=i") (inst "i_0=i_0"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "97")))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "55"))
                                                      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "42"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "77") (term "1,0,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "17")) (ifInst ""  (formula "53")))
                                                      (rule "polySimp_elimSub" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "77") (term "0,2,2,0,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "77") (term "0,2,2,0,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "nonNull" (formula "77") (term "1,1,1,1") (inst "i=i"))
                                                      (rule "greater_literals" (formula "77") (term "0,1,1,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "82")))
                                                      (rule "sub_literals" (formula "77") (term "2,1,0,1,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "77"))
                                                      (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,1,1,1,1"))
                                                      (rule "nonNull" (formula "77") (term "0,1,1,1") (inst "i=i"))
                                                      (rule "sub_literals" (formula "77") (term "2,1,0,1,1,0,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "81")))
                                                      (rule "greater_literals" (formula "77") (term "0,0,1,1,1"))
                                                      (builtin "One Step Simplification" (formula "77"))
                                                      (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,1,1"))
                                                      (rule "nnf_imp2or" (formula "69") (term "0"))
                                                      (rule "nnf_imp2or" (formula "78") (term "0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_imp2or" (formula "77") (term "0,0,1"))
                                                      (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "69") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "69") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "77") (term "0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "78") (term "0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "78") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "78") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "78") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "78") (term "0,0,0,0"))
                                                      (rule "times_zero_1" (formula "78") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "78") (term "1,0,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "77") (term "0,1,1,1,1"))
                                                      (rule "nnf_notAnd" (formula "77") (term "0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,0,1"))
                                                      (rule "nnf_imp2or" (formula "77") (term "0,0,1,1,1"))
                                                      (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                      (rule "nnf_notAnd" (formula "77") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0,1,1"))
                                                      (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,0,1,1"))
                                                      (rule "nnf_notAnd" (formula "77") (term "0,0,1,1,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,1,1,1,1"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,1,1,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,1,1,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,1,1,1,1"))
                                                      (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,1,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,1,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,1,1,1,1"))
                                                      (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "77") (term "0,0,0,1,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0,1,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0,1,1,1"))
                                                      (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0,1,1,1"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0,1,1,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,1,1,1"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,0,1,1,1"))
                                                      (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthNotNegative" (formula "46") (term "1,1,0"))
                                                      (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                      (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "49") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "true_left" (formula "49"))
                                                      (rule "arrayLengthIsAShort" (formula "50") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "arrayLengthNotNegative" (formula "39") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "48") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "arrayLengthNotNegative" (formula "49") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "39") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                                                      (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "arrayLengthNotNegative" (formula "58") (term "1,1,1,0,0"))
                                                      (rule "arrayLengthIsAShort" (formula "61") (term "1,1,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "arrayLengthNotNegative" (formula "77") (term "0,0,1"))
                                                      (rule "arrayLengthIsAShort" (formula "78") (term "0,0,1"))
                                                      (builtin "One Step Simplification" (formula "78"))
                                                      (rule "true_left" (formula "78"))
                                                      (rule "equiv_left" (formula "72"))
                                                      (branch "Case 1"
                                                         (rule "replace_known_left" (formula "81") (term "1") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "81"))
                                                         (rule "allRight" (formula "81") (inst "sk=j_9"))
                                                         (rule "orRight" (formula "81"))
                                                         (rule "orRight" (formula "81"))
                                                         (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "77"))
                                                         (rule "inEqSimp_leqRight" (formula "81"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "82"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "79") (term "0") (ifseqformula "75"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "74") (term "1") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "79"))
                                                         (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "79"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "79"))
                                                         (rule "applyEq" (formula "76") (term "1,0,1,1") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notLeft" (formula "76"))
                                                         (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "81"))
                                                         (builtin "One Step Simplification" (formula "80"))
                                                         (rule "notLeft" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "81"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "applyEq" (formula "7") (term "1") (ifseqformula "79"))
                                                         (rule "applyEq" (formula "81") (term "1,0,1") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "81") (term "1,0") (ifseqformula "79"))
                                                         (builtin "One Step Simplification" (formula "81"))
                                                         (rule "false_right" (formula "81"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "66"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_literals" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "replace_known_right" (formula "81") (term "1") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "81"))
                                                         (rule "false_right" (formula "81"))
                                                         (rule "replace_known_right" (formula "75") (term "0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "notLeft" (formula "75"))
                                                         (rule "inEqSimp_geqRight" (formula "78"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "73"))
                                                         (rule "andLeft" (formula "73"))
                                                         (rule "notLeft" (formula "74"))
                                                         (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "78")))
                                                         (rule "applyEq" (formula "73") (term "0") (ifseqformula "77"))
                                                         (rule "applyEq" (formula "76") (term "0") (ifseqformula "77"))
                                                         (rule "applyEq" (formula "78") (term "0") (ifseqformula "77"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "77"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "73"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,1,0,0") (ifseqformula "73"))
                                                         (rule "applyEq" (formula "76") (term "0") (ifseqformula "73"))
                                                         (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "73"))
                                                         (rule "applyEq" (formula "78") (term "1") (ifseqformula "73"))
                                                         (rule "applyEqRigid" (formula "77") (term "1") (ifseqformula "73"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "73"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "78") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0"))
                                                         (rule "add_literals" (formula "78") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "78") (term "1,0,0"))
                                                         (rule "add_literals" (formula "78") (term "0,0"))
                                                         (rule "leq_literals" (formula "78") (term "0"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "false_right" (formula "78"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "65"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "andLeft" (formula "58") (userinteraction))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,0") (userinteraction))
                                                      (rule "polySimp_addComm0" (formula "59") (term "0,2,1,1,0") (userinteraction))
                                                      (rule "andLeft" (formula "58") (userinteraction))
                                                      (rule "andRight" (formula "68") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "andLeft" (formula "60") (userinteraction))
                                                         (rule "close" (formula "69") (ifseqformula "60"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "68") (inst "sk=j_23") (userinteraction))
                                                         (rule "impRight" (formula "68") (userinteraction))
                                                         (rule "andLeft" (formula "61") (userinteraction))
                                                         (rule "allLeft" (formula "62") (inst "t=j_23") (userinteraction))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "translateJavaAddInt" (formula "71") (term "0,2,1,1"))
                                                         (rule "translateJavaAddInt" (formula "73") (term "0,2,1,1,1,0,0"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "0,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "0,2,0,1,0,1"))
                                                         (rule "translateJavaAddInt" (formula "70") (term "0,2,0,1,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "69") (term "0,2,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "73") (term "0,2,0,1,1"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "0,2,1,1,0,1,0"))
                                                         (rule "translateJavaAddInt" (formula "72") (term "0,2,1,1,1,0,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "7") (term "1,1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "eqSymm" (formula "64") (term "1"))
                                                         (rule "eqSymm" (formula "68") (term "0,1"))
                                                         (rule "eqSymm" (formula "67") (term "1"))
                                                         (rule "eqSymm" (formula "71") (term "1"))
                                                         (rule "eqSymm" (formula "68") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "65") (term "1,0"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "eqSymm" (formula "75") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "72") (term "0,1"))
                                                         (rule "eqSymm" (formula "72") (term "0,1,1"))
                                                         (rule "eqSymm" (formula "74") (term "1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "2")))
                                                         (rule "polySimp_elimSub" (formula "9") (term "1"))
                                                         (rule "mul_literals" (formula "9") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "0,2,1,1"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "71") (term "0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "75") (term "0,2,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "74") (term "0,2,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "73") (term "0,2,1,0"))
                                                         (rule "close" (formula "73") (ifseqformula "64"))
                                                      )
                                                   )
                                                )
                                                (branch " forall int j; ( 0 <= j & j < res_min_1 -> result_5[i_0_2][j]@heapAfter_retrieveSortedMessages = result_5[1 + i_0_2][j]@heapAfter_retrieveSortedMessages) & result_5[i_0_2]@heapAfter_retrieveSortedMessages.length <= result_5[1 + i_0_2]@heapAfter_retrieveSortedMessages.length"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0,1"))
                                                   (rule "translateJavaAddInt" (formula "66") (term "0,2,1,1,0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0,1,1"))
                                                   (rule "translateJavaAddInt" (formula "64") (term "0,2,0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "67") (term "0,2,0,1,1"))
                                                   (rule "translateJavaAddInt" (formula "66") (term "0,2,1,1,1,0,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "6") (term "1,1"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "eqSymm" (formula "62") (term "1"))
                                                   (rule "eqSymm" (formula "66") (term "1"))
                                                   (rule "eqSymm" (formula "63") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "63") (term "0,1"))
                                                   (rule "eqSymm" (formula "67") (term "0,1"))
                                                   (rule "eqSymm" (formula "67") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "69") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "68") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "59") (term "1,0"))
                                                   (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "67") (term "0,2,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "68") (term "0,2,1,1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "66") (term "0,2,0,1,0"))
                                                   (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,2,0,1,1"))
                                                   (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "allRight" (formula "69") (inst "sk=j_12"))
                                                   (rule "impRight" (formula "69"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "70") (term "0,2,1,0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "71") (term "0,2,1,0"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "66") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "70") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "71") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "63"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "applyEq" (formula "70") (term "1,0,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "69") (term "1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "65") (term "1") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "66") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "70") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "70") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "71") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "71") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "63"))
                                                   (rule "inEqSimp_homoInEq1" (formula "66") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "66") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,0"))
                                                   (rule "add_literals" (formula "66") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "66") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "66") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "66") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "notLeft" (formula "66"))
                                                   (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "63"))
                                                   (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "69") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "69") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "notLeft" (formula "69"))
                                                   (rule "pullOutSelect" (formula "71") (term "1,1,1,0,1,1,0") (inst "selectSK=arr_907"))
                                                   (rule "applyEq" (formula "72") (term "1,1,1,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "70") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "71") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "63") (term "1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "75"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                   (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "72") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "64") (term "0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "69") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "71") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "70") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "72") (term "1,1,1,0,1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "68") (term "0") (ifseqformula "65"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "applyEq" (formula "63") (term "1") (ifseqformula "65"))
                                                   (rule "applyEqRigid" (formula "71") (term "1,1,1,0,0") (ifseqformula "68"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "68"))
                                                   (rule "applyEq" (formula "70") (term "1,0,1") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "false_right" (formula "70"))
                                                   (rule "applyEq" (formula "69") (term "1,0,1") (ifseqformula "65"))
                                                   (rule "applyEqRigid" (formula "69") (term "1,0") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "false_right" (formula "69"))
                                                   (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "68"))
                                                   (rule "pullOutSelect" (formula "62") (term "1,0,1,0") (inst "selectSK=arr_908"))
                                                   (rule "applyEq" (formula "70") (term "1,0,1,0,1,1,0") (ifseqformula "62"))
                                                   (rule "applyEq" (formula "70") (term "1,0,0,1,0") (ifseqformula "62"))
                                                   (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "62"))
                                                   (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "62"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "74")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0") (ifseqformula "41"))
                                                   (rule "eqSymm" (formula "63") (term "1,0"))
                                                   (rule "eqSymm" (formula "70") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "72")))
                                                   (rule "applyEqReverse" (formula "71") (term "1,1") (ifseqformula "62"))
                                                   (rule "applyEqReverse" (formula "64") (term "0,0") (ifseqformula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,1,1,0") (ifseqformula "62"))
                                                   (rule "applyEqReverse" (formula "70") (term "1,0,0,1,0") (ifseqformula "62"))
                                                   (rule "applyEqReverse" (formula "70") (term "1,1,1,0,1,1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "eqSymm" (formula "62") (term "1,0"))
                                                   (rule "eqSymm" (formula "69") (term "1,0,1,1,0"))
                                                   (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=arr_909"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_910"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=arr_911"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_912"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_ex2all" (formula "73"))
                                                   (rule "nnf_imp2or" (formula "67") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "67") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "67") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "67") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                   (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "93") (term "0") (inst "i=i") (inst "i_0=i_0"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "94")))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "60"))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "47"))
                                                   (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "replace_known_left" (formula "74") (term "1,1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "22")) (ifInst ""  (formula "45")))
                                                   (rule "polySimp_elimSub" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,1,1,0,0,0,1,1"))
                                                   (rule "polySimp_elimSub" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "74") (term "0,2,2,0,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "74") (term "0,2,2,0,1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1"))
                                                   (rule "nonNull" (formula "74") (term "1,1,1,1") (inst "i=i"))
                                                   (rule "greater_literals" (formula "74") (term "0,1,1,1,1,1"))
                                                   (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "79")))
                                                   (rule "sub_literals" (formula "74") (term "2,1,0,1,1,1,1"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,1,1,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,1,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,1,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,1,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,1,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,1,1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,1,1,1,1"))
                                                   (rule "nonNull" (formula "74") (term "0,1,1,1") (inst "i=i"))
                                                   (rule "greater_literals" (formula "74") (term "0,1,0,1,1,1"))
                                                   (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "78")))
                                                   (rule "sub_literals" (formula "74") (term "2,1,0,0,1,1,1"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,1,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,1,1"))
                                                   (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                   (rule "nnf_imp2or" (formula "74") (term "0,0,1"))
                                                   (rule "nnf_imp2or" (formula "74") (term "0,0,1,1"))
                                                   (rule "nnf_imp2or" (formula "74") (term "0,1,1,1,1"))
                                                   (rule "nnf_notAnd" (formula "74") (term "0,0,0,1"))
                                                   (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,0,0,0,1"))
                                                   (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1"))
                                                   (rule "nnf_imp2or" (formula "74") (term "0,0,1,1,1"))
                                                   (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "74") (term "0,0,0,1,1"))
                                                   (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,1"))
                                                   (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0,0,1,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,0,0,0,0,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,0,0,0,1,1"))
                                                   (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "nnf_notAnd" (formula "74") (term "0,0,1,1,1,1"))
                                                   (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0,1,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,1,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,1,1,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,1,1,1,1"))
                                                   (rule "add_zero_left" (formula "74") (term "0,0,1,0,0,1,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0,1,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,1,1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,1,1,1,1"))
                                                   (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0,1,1,1,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,0,0,0,1,1,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,0,1,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,0,0,1,1,1,1"))
                                                   (rule "nnf_notAnd" (formula "74") (term "0,0,0,1,1,1"))
                                                   (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0,0,1,1,1"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,0,0,0,0,1,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "1,0,0,0,0,1,1,1"))
                                                   (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0,0,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,1,1,1"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,1,1,1"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0,1,1,1"))
                                                   (rule "add_zero_left" (formula "74") (term "0,0,1,0,0,0,1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0,0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,1,1"))
                                                   (rule "arrayLengthNotNegative" (formula "64") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "64") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "arrayLengthIsAShort" (formula "44") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "true_left" (formula "44"))
                                                   (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "arrayLengthIsAShort" (formula "49") (term "0"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "54") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "44") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "65") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "63") (term "1,1,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAShort" (formula "53") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "arrayLengthNotNegative" (formula "53") (term "1,1,0"))
                                                   (rule "arrayLengthNotNegative" (formula "55") (term "1,1,0"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " ! result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "notLeft" (formula "5"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "74"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "75")))
                                                      (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch " ! result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "74"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "73")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "arrayLengthNotNegative" (formula "69") (term "0"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "70"))
                                                         (rule "arrayLengthIsAShort" (formula "70") (term "0"))
                                                         (builtin "One Step Simplification" (formula "70"))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "64") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_937"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "83"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "84"))
                                                         (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_938"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "83"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "84"))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "61") (term "0,1"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "cut_direct" (formula "79") (term "0"))
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                            (builtin "One Step Simplification" (formula "80"))
                                                            (rule "andRight" (formula "80"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "80") (inst "sk=i_0_92"))
                                                               (rule "orRight" (formula "80"))
                                                               (rule "orRight" (formula "80"))
                                                               (rule "inEqSimp_leqRight" (formula "82"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "82"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "82"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_943"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "85"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_944"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "85"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "ex_pull_out3" (formula "5") (term "0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                               (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                               (rule "eqSymm" (formula "70") (term "1"))
                                                               (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "70") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "70"))
                                                               (rule "andLeft" (formula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0"))
                                                               (rule "add_literals" (formula "10") (term "0"))
                                                               (rule "leq_literals" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "80"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "80") (inst "sk=i_91"))
                                                                  (rule "orRight" (formula "80"))
                                                                  (rule "orRight" (formula "80"))
                                                                  (rule "inEqSimp_leqRight" (formula "82"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "82"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "82"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_941"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_942"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "ex_pull_out3" (formula "5") (term "0"))
                                                                  (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                                  (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                                  (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                                  (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                                  (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                                  (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                                  (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                  (rule "eqSymm" (formula "70") (term "1"))
                                                                  (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "84"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                                  (rule "andLeft" (formula "70"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "70"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                                  (rule "add_literals" (formula "70") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "70") (term "1,0"))
                                                                  (rule "add_literals" (formula "70") (term "0"))
                                                                  (rule "leq_literals" (formula "70"))
                                                                  (rule "closeFalse" (formula "70"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "80"))
                                                                  (branch "Case 1"
                                                                     (rule "allRight" (formula "80") (inst "sk=i_90"))
                                                                     (rule "orRight" (formula "80"))
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "orRight" (formula "81"))
                                                                     (rule "inEqSimp_geqRight" (formula "82"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "82"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_940"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "85"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "60") (ifseqformula "86"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "eqSymm" (formula "70") (term "1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "84"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                                     (rule "andLeft" (formula "70"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0"))
                                                                     (rule "add_literals" (formula "70") (term "0"))
                                                                     (rule "leq_literals" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "80") (inst "sk=i_75"))
                                                                     (rule "orRight" (formula "80"))
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "orRight" (formula "81"))
                                                                     (rule "inEqSimp_geqRight" (formula "82"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "82"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_939"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "47") (ifseqformula "87"))
                                                                     (rule "ex_pull_out3" (formula "5") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                                     (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "eqSymm" (formula "70") (term "1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "84"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                                     (rule "andLeft" (formula "70"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0"))
                                                                     (rule "add_literals" (formula "70") (term "0"))
                                                                     (rule "leq_literals" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                            (builtin "One Step Simplification" (formula "80"))
                                                            (rule "false_right" (formula "80"))
                                                            (rule "ex_pull_out3" (formula "1") (term "0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                                            (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                                            (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_12"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "66") (term "1,1"))
                                                            (rule "eqSymm" (formula "66") (term "1"))
                                                            (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "66") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "66") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "66") (term "0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "closeFalse" (formula "66"))
                                                         )
                                                      )
                                                      (branch " ! result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "arrayLengthIsAShort" (formula "69") (term "0"))
                                                         (builtin "One Step Simplification" (formula "69"))
                                                         (rule "true_left" (formula "69"))
                                                         (rule "arrayLengthNotNegative" (formula "69") (term "0"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "70"))
                                                         (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "64") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_929"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "82"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "83"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notRight" (formula "76"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_930"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "82"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "83"))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "61") (term "0,1"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "ex_pull_out3" (formula "2") (term "0"))
                                                         (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                         (rule "commute_or" (formula "2") (term "0,1,0,0"))
                                                         (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                         (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                                                         (rule "cut_direct" (formula "78") (term "0"))
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "andRight" (formula "79"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "79") (inst "sk=i_0_89"))
                                                               (rule "orRight" (formula "79"))
                                                               (rule "orRight" (formula "79"))
                                                               (rule "inEqSimp_leqRight" (formula "81"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "81"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_935"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_936"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet1010000101000000000_34" (formula "70") (term "1,1"))
                                                               (rule "eqSymm" (formula "70") (term "1"))
                                                               (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "70") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                               (rule "andLeft" (formula "70"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0"))
                                                               (rule "add_literals" (formula "70") (term "0"))
                                                               (rule "leq_literals" (formula "70"))
                                                               (rule "closeFalse" (formula "70"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "79"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "79") (inst "sk=i_88"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "inEqSimp_leqRight" (formula "81"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "81"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "81"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_933"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_934"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "88"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1010000101000000000_34" (formula "70") (term "1,1"))
                                                                  (rule "eqSymm" (formula "70") (term "1"))
                                                                  (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                                  (rule "andLeft" (formula "70"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "70"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                                  (rule "add_literals" (formula "70") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "70") (term "1,0"))
                                                                  (rule "add_literals" (formula "70") (term "0"))
                                                                  (rule "leq_literals" (formula "70"))
                                                                  (rule "closeFalse" (formula "70"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "79"))
                                                                  (branch "Case 1"
                                                                     (rule "allRight" (formula "79") (inst "sk=i_87"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "inEqSimp_leqRight" (formula "80"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "81"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_932"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "85"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "84")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "60") (ifseqformula "85"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1010000101000000000_34" (formula "70") (term "1,1"))
                                                                     (rule "eqSymm" (formula "70") (term "1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "79") (inst "sk=i_86"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "notRight" (formula "81"))
                                                                     (rule "inEqSimp_leqRight" (formula "80"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "81"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_931"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "47") (ifseqformula "86"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1010000101000000000_34" (formula "70") (term "1,1"))
                                                                     (rule "eqSymm" (formula "70") (term "1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                                     (rule "andLeft" (formula "70"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0"))
                                                                     (rule "add_literals" (formula "70") (term "0"))
                                                                     (rule "leq_literals" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "false_right" (formula "79"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_12"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1010000101000000000_34" (formula "66") (term "1,1"))
                                                            (rule "eqSymm" (formula "66") (term "1"))
                                                            (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "80"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "6"))
                                                            (rule "andLeft" (formula "66"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0"))
                                                            (rule "add_zero_right" (formula "66") (term "0"))
                                                            (rule "leq_literals" (formula "66"))
                                                            (rule "closeFalse" (formula "66"))
                                                         )
                                                      )
                                                   )
                                                   (branch " ! result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch " ! result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "74"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "73")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "arrayLengthNotNegative" (formula "69") (term "0"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "70"))
                                                         (rule "arrayLengthIsAShort" (formula "70") (term "0"))
                                                         (builtin "One Step Simplification" (formula "70"))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "allLeft" (formula "64") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_921"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "82"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "83"))
                                                         (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_922"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "83"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "83"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "replace_known_right" (formula "78") (term "0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "notRight" (formula "78"))
                                                         (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "79"))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "61") (term "0,1"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "ex_pull_out3" (formula "2") (term "0"))
                                                         (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                         (rule "commute_or" (formula "2") (term "0,1,0,0"))
                                                         (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                         (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                                                         (rule "cut_direct" (formula "78") (term "0"))
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "andRight" (formula "79"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "79") (inst "sk=i_0_85"))
                                                               (rule "orRight" (formula "79"))
                                                               (rule "orRight" (formula "79"))
                                                               (rule "inEqSimp_leqRight" (formula "81"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "81"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "81"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_927"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_928"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "85"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "84")))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0110000101000000000_36" (formula "70") (term "0,1"))
                                                               (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "70") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "70"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "closeFalse" (formula "9"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "79"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "79") (inst "sk=i_84"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "inEqSimp_leqRight" (formula "81"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "81"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "81"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_925"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "88"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_926"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0110000101000000000_36" (formula "70") (term "0,1"))
                                                                  (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "70") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                  (rule "qeq_literals" (formula "70") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "closeFalse" (formula "70"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "79"))
                                                                  (branch "Case 1"
                                                                     (rule "allRight" (formula "79") (inst "sk=i_71"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "notRight" (formula "80"))
                                                                     (rule "orRight" (formula "80"))
                                                                     (rule "inEqSimp_geqRight" (formula "81"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "81"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_924"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "84"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "60") (ifseqformula "85"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0110000101000000000_36" (formula "70") (term "0,1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "79") (inst "sk=i_83"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "notRight" (formula "80"))
                                                                     (rule "orRight" (formula "80"))
                                                                     (rule "inEqSimp_geqRight" (formula "81"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "81"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_923"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "88"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "47") (ifseqformula "86"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0110000101000000000_36" (formula "70") (term "0,1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "false_right" (formula "79"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_12"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0110000101000000000_36" (formula "66") (term "0,1"))
                                                            (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "80"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "66"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                      (branch " ! result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>> = null & ! (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "arrayLengthNotNegative" (formula "69") (term "0"))
                                                         (rule "applyEq" (formula "69") (term "0") (ifseqformula "70"))
                                                         (rule "arrayLengthIsAShort" (formula "70") (term "0"))
                                                         (builtin "One Step Simplification" (formula "70"))
                                                         (rule "true_left" (formula "70"))
                                                         (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "true_left" (formula "67"))
                                                         (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                         (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "ex_pull_out3" (formula "1") (term "0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                                         (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                         (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                                         (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                                         (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "allLeft" (formula "64") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_913"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "82"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "82"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notRight" (formula "76"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "61") (term "0,1"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                         (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "13"))
                                                         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                         (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "64") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "notLeft" (formula "64"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_914"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "81"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "56") (ifseqformula "82"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "replace_known_right" (formula "77") (term "0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "77"))
                                                         (rule "notRight" (formula "77"))
                                                         (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "78"))
                                                         (rule "cut_direct" (formula "77") (term "0"))
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                            (builtin "One Step Simplification" (formula "78"))
                                                            (rule "andRight" (formula "78"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "78") (inst "sk=i_0_82"))
                                                               (rule "orRight" (formula "78"))
                                                               (rule "orRight" (formula "78"))
                                                               (rule "inEqSimp_leqRight" (formula "80"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "80"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_919"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "83")))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_920"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "83"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "84")))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_34" (formula "70") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_37" (formula "70") (term "0,1"))
                                                               (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "82"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "70") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "70") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "70") (term "0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "closeFalse" (formula "70"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "78"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "78") (inst "sk=i_81"))
                                                                  (rule "orRight" (formula "78"))
                                                                  (rule "orRight" (formula "78"))
                                                                  (rule "inEqSimp_leqRight" (formula "80"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "79"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_geqRight" (formula "80"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_917"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_918"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_34" (formula "70") (term "1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_37" (formula "70") (term "0,1"))
                                                                  (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "82"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "70") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "70") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                  (rule "qeq_literals" (formula "70") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "closeFalse" (formula "70"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "78"))
                                                                  (branch "Case 1"
                                                                     (rule "allRight" (formula "78") (inst "sk=i_80"))
                                                                     (rule "orRight" (formula "78"))
                                                                     (rule "notRight" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "inEqSimp_leqRight" (formula "79"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "80"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_916"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "84")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "60") (ifseqformula "84"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_37" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_34" (formula "70") (term "1,1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "78") (inst "sk=i_68"))
                                                                     (rule "orRight" (formula "78"))
                                                                     (rule "notRight" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "inEqSimp_leqRight" (formula "79"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "80"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_915"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "62"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "87"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "49"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "47") (ifseqformula "85"))
                                                                     (rule "allLeft" (formula "70") (inst "t=j_12"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "70") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_37" (formula "70") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_34" (formula "70") (term "1,1"))
                                                                     (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "70") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "70") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "70") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "closeFalse" (formula "70"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                            (builtin "One Step Simplification" (formula "78"))
                                                            (rule "false_right" (formula "78"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_12"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_28" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet10000101000000000_26" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_34" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1110000101000000000_37" (formula "66") (term "0,1"))
                                                            (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "6"))
                                                            (rule "andLeft" (formula "66"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0"))
                                                            (rule "add_literals" (formula "66") (term "0"))
                                                            (rule "leq_literals" (formula "66"))
                                                            (rule "closeFalse" (formula "66"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Exceptional Post (min)"
                                                (builtin "One Step Simplification" (formula "62"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "1,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1,0") (ifseqformula "36"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "64") (term "1,1,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "65") (term "1,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,1,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "65") (term "0,2,1,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,1,1,1,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,1,0,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,1,0,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,1,0,1,1,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,1,0,1,0,1"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,1"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "64"))
                                                (rule "andLeft" (formula "63"))
                                                (rule "andLeft" (formula "65"))
                                                (rule "notLeft" (formula "63"))
                                                (rule "close" (formula "67") (ifseqformula "66"))
                                             )
                                             (branch "Pre (min)"
                                                (builtin "One Step Simplification" (formula "5"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "wellFormedAnonEQ" (formula "62") (ifseqformula "49"))
                                                (rule "wellFormedAnonEQ" (formula "62") (term "0") (ifseqformula "36"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "63") (term "1,1,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#)))))))_000101000000000_21" (formula "64") (term "1,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,1,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "64") (term "0,2,0,1,1"))
                                                (rule "translateJavaAddInt" (formula "63") (term "0,2,1,1,1,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "63") (term "0,2,1,1,0,1,0"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,1"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "eqSymm" (formula "58") (term "1,0,1,1,0,0"))
                                                (rule "eqSymm" (formula "61") (term "0,1"))
                                                (rule "eqSymm" (formula "58") (term "1,0,0,1"))
                                                (rule "eqSymm" (formula "60") (term "1"))
                                                (rule "eqSymm" (formula "61") (term "0,1,1"))
                                                (rule "eqSymm" (formula "65") (term "1,0,0"))
                                                (rule "eqSymm" (formula "64") (term "1,0,1,1,0"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "13")) (ifInst ""  (formula "36")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                          )
                                          (branch "Exceptional Post (compare)"
                                             (builtin "One Step Simplification" (formula "60"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#))))))_00101000000000_20" (formula "62") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "1,0") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,1,0") (ifseqformula "35"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,1,1,0,1,1,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,0,2,1,1,0,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,1,0,1,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,0,1,1,1,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,0,2,1,1,0,0,0,1,0,0,1"))
                                             (rule "translateJavaSubInt" (formula "4") (term "1,1"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "62"))
                                             (rule "andLeft" (formula "61"))
                                             (rule "notLeft" (formula "61"))
                                             (rule "close" (formula "64") (ifseqformula "63"))
                                          )
                                          (branch
                                             (builtin "One Step Simplification" (formula "60"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(javaAddInt(i_0_2,Z(1(#))))))_00101000000000_20" (formula "61") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "1,1,1") (ifseqformula "48"))
                                             (rule "wellFormedAnonEQ" (formula "60") (term "0,0,1") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "1,1,0,1") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,1,1,1") (ifseqformula "35"))
                                             (rule "wellFormedAnonEQ" (formula "60") (term "0,0,0,1") (ifseqformula "35"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,1,1,0,1") (ifseqformula "35"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,0,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,0,0,1,1"))
                                             (rule "translateJavaSubInt" (formula "4") (term "1,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,0,1,1,1,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,0,0,0,1,1,1"))
                                             (rule "translateJavaAddInt" (formula "60") (term "0,2,1,0,1,0,1,1,1"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "eqSymm" (formula "60") (term "0,1"))
                                             (rule "eqSymm" (formula "57") (term "1,0,0,1"))
                                             (rule "eqSymm" (formula "59") (term "1"))
                                             (rule "eqSymm" (formula "60") (term "0,1,1"))
                                             (rule "eqSymm" (formula "57") (term "1,0,1,1,0,0"))
                                             (rule "replace_known_left" (formula "61") (term "1,0,0,1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "12")) (ifInst ""  (formula "35")))
                                             (rule "polySimp_elimSub" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "61") (term "0,2,1,0,0,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "61") (term "0,2,1,0,1,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "61") (term "0,2,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "61") (term "0,2,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "61") (term "0,2,1,0,1,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "5") (term "1"))
                                             (rule "inEqSimp_leqRight" (formula "62"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "61") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "5"))
                                             (rule "applyEq" (formula "61") (term "1,0,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "2"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "pullOutSelect" (formula "61") (term "0,0,0,1") (inst "selectSK=arr_287"))
                                             (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "58") (term "1,0,1,0,0,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "63") (term "1,0,0,0,1,1,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "63") (term "0,0,1,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "58") (term "1,0,1,0,1,1,0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "58") (term "0,0,1,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "63") (term "0,0,1,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "62") (term "0,0,0,1,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "63") (term "1,0,1,0,1,1,1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "63") (term "1,0,1,1,1,1") (ifseqformula "61"))
                                             (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1"))
                                             (rule "eqSymm" (formula "58") (term "1,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "62") (term "0,1,1"))
                                             (rule "replace_known_right" (formula "61") (term "1,0,0,0") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,1,1,1,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "62") (term "0,0,0,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,1,1,0,0") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,1,0") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "62") (term "0,1,0,1,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,0,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,1,0,1,1,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,1,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,0,0,1,1,1") (ifseqformula "61"))
                                             (rule "applyEqReverse" (formula "58") (term "0,0,1,1") (ifseqformula "61"))
                                             (rule "hideAuxiliaryEq" (formula "61"))
                                             (rule "inEqSimp_commuteGeq" (formula "60") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "58") (term "1,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "61") (term "0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1,0,0"))
                                             (rule "pullOutSelect" (formula "60") (term "0,0,1") (inst "selectSK=arr_288"))
                                             (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "60"))
                                             (rule "applyEq" (formula "58") (term "1,0,1,0,0,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "63") (term "1,0,1,0,1,0,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "63") (term "1,0,1,1,0,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "58") (term "0,0,1,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "58") (term "1,0,1,0,1,1,0,0") (ifseqformula "60"))
                                             (rule "applyEq" (formula "63") (term "1,0,0,0,1,0,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "60"))
                                             (rule "applyEq" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                             (rule "applyEq" (formula "62") (term "0,0,0,1,1") (ifseqformula "60"))
                                             (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "60"))
                                             (rule "applyEq" (formula "63") (term "0,0,0,1") (ifseqformula "60"))
                                             (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1"))
                                             (rule "eqSymm" (formula "58") (term "1,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "62") (term "0,1,1"))
                                             (rule "replace_known_right" (formula "60") (term "1,0,0,0") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,0,0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,0,0,1,0,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,1,1,0,0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,0,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "58") (term "0,0,1,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "62") (term "0,1,0,1,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,1,0,1,0,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "61") (term "0,0,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,0,1") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0,1,1,0,1") (ifseqformula "60"))
                                             (rule "hideAuxiliaryEq" (formula "60"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "61") (term "0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "58") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "58") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,0,0,1"))
                                             (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "81") (term "0") (inst "i=i") (inst "i_0=i_0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "82")))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "51"))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "38"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "62") (term "1,0,1") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "13")) (ifInst ""  (formula "49")))
                                             (rule "polySimp_elimSub" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "1,1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "62") (term "0,2,2,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "62") (term "0,2,2,0,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1"))
                                             (rule "nonNull" (formula "62") (term "0,1,1,1") (inst "i=i"))
                                             (rule "greater_literals" (formula "62") (term "0,1,0,1,1,1"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "66")))
                                             (rule "sub_literals" (formula "62") (term "2,1,0,0,1,1,1"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,1,1"))
                                             (rule "nonNull" (formula "62") (term "1,1,1,1") (inst "i=i"))
                                             (rule "sub_literals" (formula "62") (term "2,1,0,1,1,1,1,1,1"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "67")))
                                             (rule "greater_literals" (formula "62") (term "0,1,1,1,1"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,1,1,1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,1,1"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,0,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "62") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "62") (term "0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "62") (term "0,0,1,1,1"))
                                             (rule "nnf_imp2or" (formula "62") (term "0,1,1,1,1"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0,0,1,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,0,1,1,1"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,0,1,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,1,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,0,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,0,1,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,1,1"))
                                             (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,1,1,1"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0,1,1,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0,1,1,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,1,1,1"))
                                             (rule "add_zero_left" (formula "62") (term "0,0,1,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0,1,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,1,1,1,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,1,1,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0,1,1,1,1"))
                                             (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0,1,1,1,1"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,1,1,1,1"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,1,1"))
                                             (rule "commute_or_2" (formula "63") (term "1,1,1"))
                                             (rule "commute_or_2" (formula "63") (term "1,0,1"))
                                             (rule "arrayLengthIsAShort" (formula "56") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "arrayLengthNotNegative" (formula "42") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "35") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "arrayLengthIsAShort" (formula "55") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "arrayLengthNotNegative" (formula "45") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "26") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "35") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "56") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "arrayLengthIsAShort" (formula "41") (term "1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "arrayLengthNotNegative" (formula "41") (term "1,1,1,0,0"))
                                             (rule "orLeft" (formula "59"))
                                             (branch "exists int i; ( i >= 0 & i <= -1 + res_min_1 & ( (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[i]@heapAfter_retrieveSortedMessages >= 1 + (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[i]@heapAfter_retrieveSortedMessages & forall int j; ( j <= -1 | j >= i | (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[j]@heapAfter_retrieveSortedMessages = (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[j]@heapAfter_retrieveSortedMessages)))"
                                                (rule "exLeft" (formula "59") (inst "sk=i_46"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "inEqSimp_homoInEq0" (formula "60"))
                                                (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                                (rule "polySimp_rightDist" (formula "60") (term "1"))
                                                (rule "mul_literals" (formula "60") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                                (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_308"))
                                                (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "62"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "62"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                                (rule "polySimp_rightDist" (formula "62") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                                (rule "mul_literals" (formula "62") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "62") (term "1,1"))
                                                (rule "pullOutSelect" (formula "61") (term "2,0") (inst "selectSK=arr_309"))
                                                (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_310"))
                                                (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,1,0,0") (ifseqformula "37"))
                                                (rule "pullOutSelect" (formula "63") (term "2,0") (inst "selectSK=arr_311"))
                                                (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "shift_paren_or" (formula "71") (term "1,1"))
                                                (rule "shift_paren_or" (formula "71") (term "0,1"))
                                                (rule "arrayLengthIsAShort" (formula "69") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "69"))
                                                (rule "true_left" (formula "69"))
                                                (rule "arrayLengthNotNegative" (formula "69") (term "0,0,1"))
                                                (rule "equiv_left" (formula "68"))
                                                (branch "Case 1"
                                                   (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "69"))
                                                   (rule "applyEq" (formula "68") (term "1") (ifseqformula "69"))
                                                   (rule "applyEq" (formula "71") (term "1,0,1,1") (ifseqformula "69"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "notLeft" (formula "71"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "shift_paren_or" (formula "72") (term "0,1,1"))
                                                   (rule "shift_paren_or" (formula "72") (term "0,0,1"))
                                                   (rule "shift_paren_and" (formula "72"))
                                                   (rule "cut_direct" (formula "71") (term "0"))
                                                   (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "andRight" (formula "72"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "72") (inst "sk=i_0_53"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "inEqSimp_leqRight" (formula "74"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "74"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "74"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_691"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_692"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                         (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "true_left" (formula "58"))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "61") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_693"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "79"))
                                                         (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "76") (term "0,0,0,1,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                         (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                         (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                         (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                         (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "61") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "61") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_694"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "80"))
                                                         (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "replace_known_right" (formula "77") (term "0,0,0,1") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                         (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                         (rule "ifthenelse_negated" (formula "65") (term "0"))
                                                         (rule "ifthenelse_split" (formula "67") (term "0"))
                                                         (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                            (rule "hideAuxiliaryEq" (formula "68"))
                                                            (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "68"))
                                                            (rule "hideAuxiliaryEq" (formula "68"))
                                                            (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "orRight" (formula "76"))
                                                            (rule "orRight" (formula "76"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                            (rule "close" (formula "77") (ifseqformula "53"))
                                                         )
                                                         (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "arrayLengthNotNegative" (formula "72") (term "0"))
                                                            (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                                                            (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "true_left" (formula "73"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_695"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "98")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "hideAuxiliaryEq" (formula "46"))
                                                            (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                            (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_696"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "99")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,0") (ifseqformula "41"))
                                                            (rule "replace_known_left" (formula "60") (term "0,0,0,0") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "99")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                            (rule "hideAuxiliaryEq" (formula "60"))
                                                            (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10000200101000000000_41" (formula "47") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000200101000000000_42" (formula "47") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                                            (rule "true_left" (formula "47"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "pullOutSelect" (formula "45") (term "1,0,1") (inst "selectSK=arr_697"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                            (rule "applyEqReverse" (formula "46") (term "1,0,1") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "pullOutSelect" (formula "45") (term "2,0,1") (inst "selectSK=arr_698"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                            (rule "applyEqReverse" (formula "46") (term "2,0,1") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "allLeft" (formula "32") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "51") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_699"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "93")) (ifInst ""  (formula "12")))
                                                            (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                            (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "66")))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_700"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "95")) (ifInst ""  (formula "12")))
                                                            (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "allLeft" (formula "57") (inst "t=i_0_2"))
                                                            (rule "replaceKnownSelect_taclet10000200101000000000_43" (formula "57") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000200101000000000_44" (formula "57") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "54")))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10000200101000000000_45" (formula "50") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000200101000000000_46" (formula "50") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "50") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "2,0,1") (inst "selectSK=arr_701"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "94")) (ifInst ""  (formula "95")))
                                                            (rule "applyEqReverse" (formula "51") (term "2,0,1") (ifseqformula "50"))
                                                            (rule "hideAuxiliaryEq" (formula "50"))
                                                            (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_702"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                            (rule "hideAuxiliaryEq" (formula "58"))
                                                            (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                            (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_703"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "101")) (ifInst ""  (formula "11")))
                                                            (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                            (rule "hideAuxiliaryEq" (formula "57"))
                                                            (rule "allLeft" (formula "69") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet200101000000000_21" (formula "69") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "69") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "69") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "69") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "69") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                            (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "69") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "69") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "69") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "69") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "69") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "69") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "69") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "69") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "69") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "69") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "pullOutSelect" (formula "69") (term "2,0,1") (inst "selectSK=arr_704"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "65"))
                                                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "95")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0") (ifseqformula "45"))
                                                            (rule "replace_known_right" (formula "69") (term "1,0,0,0") (ifseqformula "94"))
                                                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "93")))
                                                            (rule "applyEqReverse" (formula "70") (term "2,0,1") (ifseqformula "69"))
                                                            (rule "hideAuxiliaryEq" (formula "69"))
                                                            (rule "allLeft" (formula "57") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_705"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "102")) (ifInst ""  (formula "11")))
                                                            (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                            (rule "hideAuxiliaryEq" (formula "57"))
                                                            (rule "allLeft" (formula "23") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "53")))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                            (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_706"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "110")) (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                            (rule "hideAuxiliaryEq" (formula "59"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "59")))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "43") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "allLeft" (formula "73") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "pullOutSelect" (formula "73") (term "0,0,0") (inst "selectSK=arr_707"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "66"))
                                                            (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "112")))
                                                            (rule "replaceKnownSelect_taclet10000200101000000000_38" (formula "73") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000200101000000000_39" (formula "73") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "73"))
                                                            (rule "hideAuxiliaryEq" (formula "73"))
                                                            (rule "allLeft" (formula "31") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "56")))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10000200101000000000_45" (formula "62") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10000200101000000000_46" (formula "62") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                            (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "ifthenelse_split" (formula "80") (term "0"))
                                                            (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "82") (term "1,0") (ifseqformula "81"))
                                                               (rule "hideAuxiliaryEq" (formula "81"))
                                                               (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "applyEqReverse" (formula "83") (term "1,1") (ifseqformula "81"))
                                                               (rule "hideAuxiliaryEq" (formula "81"))
                                                               (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "92"))
                                                               (rule "orRight" (formula "92"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                               (rule "close" (formula "92") (ifseqformula "66"))
                                                            )
                                                            (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "81") (term "1,0") (ifseqformula "80"))
                                                               (rule "hideAuxiliaryEq" (formula "80"))
                                                               (rule "replace_known_right" (formula "80") (term "0,0,0") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "80"))
                                                               (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "93"))
                                                               (rule "allLeft" (formula "72") (inst "t=i_0_53"))
                                                               (rule "replaceKnownSelect_taclet0000200101000000000_31" (formula "72") (term "2,0,1"))
                                                               (rule "replaceKnownSelect_taclet0000200101000000000_29" (formula "72") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000200101000000000_32" (formula "72") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000200101000000000_30" (formula "72") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "72") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "72") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "72") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "72") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "72") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "inEqSimp_contradInEq1" (formula "72") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "72") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "allLeft" (formula "77") (inst "t=add(Z(1(#)), i_0_53)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "77") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "77") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "77") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "77") (term "0,1,0"))
                                                               (rule "add_literals" (formula "77") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "77") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "77") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "77") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "77") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "77") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "77") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                                                               (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "77") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "77") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "77") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "notLeft" (formula "77"))
                                                               (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=arr_708"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "98"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
                                                               (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "90") (term "0") (ifseqformula "66") (ifseqformula "98"))
                                                               (rule "allLeft" (formula "77") (inst "t=i_0_53"))
                                                               (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "77") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1"))
                                                               (rule "add_literals" (formula "77") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "77") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "77") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "77") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "notLeft" (formula "77"))
                                                               (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=arr_709"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "99"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")))
                                                               (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "90") (term "0") (ifseqformula "66") (ifseqformula "99"))
                                                               (rule "ifthenelse_split" (formula "82") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "replace_known_left" (formula "96") (term "1,0") (ifseqformula "82"))
                                                                  (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "orRight" (formula "96"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "94"))
                                                                  (rule "close" (formula "96") (ifseqformula "66"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "82"))
                                                                  (rule "hideAuxiliaryEq" (formula "82"))
                                                                  (rule "replace_known_right" (formula "96") (term "1,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "allLeft" (formula "77") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "80"))
                                                                  (rule "qeq_literals" (formula "77") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "pullOutSelect" (formula "77") (term "0,0,0") (inst "selectSK=arr_710"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "101")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0,0") (ifseqformula "99"))
                                                                  (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "100")))
                                                                  (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "77"))
                                                                  (rule "hideAuxiliaryEq" (formula "77"))
                                                                  (rule "narrowSelectArrayType" (formula "77") (term "0,0,0") (ifseqformula "66") (ifseqformula "100"))
                                                                  (rule "allLeft" (formula "75") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "81"))
                                                                  (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_711"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "117")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "117")) (ifInst ""  (formula "28")))
                                                                  (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                                  (rule "hideAuxiliaryEq" (formula "75"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "82"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "83"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_712"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "110")) (ifInst ""  (formula "11")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "45") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "83"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "84"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "allLeft" (formula "76") (inst "t=i_46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "76") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "76") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "76") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "76") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "76") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0") (ifseqformula "85"))
                                                                  (rule "qeq_literals" (formula "76") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "pullOutSelect" (formula "76") (term "1,0,1") (inst "selectSK=arr_713"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "70"))
                                                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "106")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "76") (term "1,0,0,0") (ifseqformula "105"))
                                                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "104")))
                                                                  (rule "applyEqReverse" (formula "77") (term "1,0,1") (ifseqformula "76"))
                                                                  (rule "hideAuxiliaryEq" (formula "76"))
                                                                  (rule "pullOutSelect" (formula "76") (term "2,0,1") (inst "selectSK=arr_714"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "70"))
                                                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "106")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "76") (term "1,0,0,0") (ifseqformula "105"))
                                                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "104")))
                                                                  (rule "applyEqReverse" (formula "77") (term "2,0,1") (ifseqformula "76"))
                                                                  (rule "hideAuxiliaryEq" (formula "76"))
                                                                  (rule "allLeft" (formula "63") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "86"))
                                                                  (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_715"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "121")) (ifInst ""  (formula "27")))
                                                                  (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                                  (rule "hideAuxiliaryEq" (formula "63"))
                                                                  (rule "allLeft" (formula "55") (inst "t=i_46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "87"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "1,0,1") (inst "selectSK=arr_716"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "109")) (ifInst ""  (formula "110")))
                                                                  (rule "applyEqReverse" (formula "56") (term "1,0,1") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "2,0,1") (inst "selectSK=arr_717"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "109")) (ifInst ""  (formula "110")))
                                                                  (rule "applyEqReverse" (formula "56") (term "2,0,1") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "88"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_718"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "114")) (ifInst ""  (formula "12")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "88"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "65")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "68") (inst "t=i_46"))
                                                                  (rule "replaceKnownSelect_taclet1110000200101000000000_84" (formula "68") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110000200101000000000_85" (formula "68") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "88"))
                                                                  (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_46"))
                                                                  (rule "replaceKnownSelect_taclet1110000200101000000000_74" (formula "58") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110000200101000000000_75" (formula "58") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "89"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "83")))
                                                                  (rule "true_left" (formula "58"))
                                                                  (rule "allLeft" (formula "23") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "89"))
                                                                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "83")))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "1,0,1,0") (ifseqformula "72"))
                                                                  (rule "replace_known_right" (formula "92") (term "0") (ifseqformula "104"))
                                                                  (builtin "One Step Simplification" (formula "92"))
                                                                  (rule "replace_known_left" (formula "106") (term "0,1") (ifseqformula "92"))
                                                                  (builtin "One Step Simplification" (formula "106"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "106") (ifseqformula "105"))
                                                                  (rule "close" (formula "106") (ifseqformula "72"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "72"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "72") (inst "sk=i_52"))
                                                            (rule "orRight" (formula "72"))
                                                            (rule "orRight" (formula "72"))
                                                            (rule "inEqSimp_leqRight" (formula "74"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "73"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "74"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_664"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_665"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_666"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                            (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "79"))
                                                            (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "replace_known_right" (formula "76") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                            (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                            (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_667"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                            (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "80"))
                                                            (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "65") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                            (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "ifthenelse_split" (formula "67") (term "0"))
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                               (rule "hideAuxiliaryEq" (formula "68"))
                                                               (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "68"))
                                                               (rule "hideAuxiliaryEq" (formula "68"))
                                                               (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                               (rule "close" (formula "77") (ifseqformula "53"))
                                                            )
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "arrayLengthNotNegative" (formula "72") (term "0"))
                                                               (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                                                               (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "true_left" (formula "73"))
                                                               (rule "allLeft" (formula "46") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_668"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "98")) (ifInst ""  (formula "27")))
                                                               (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "allLeft" (formula "45") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "pullOutSelect" (formula "45") (term "2,0,1") (inst "selectSK=arr_669"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "85")) (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "46") (term "2,0,1") (ifseqformula "45"))
                                                               (rule "hideAuxiliaryEq" (formula "45"))
                                                               (rule "pullOutSelect" (formula "45") (term "1,0,1") (inst "selectSK=arr_670"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "85")) (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "46") (term "1,0,1") (ifseqformula "45"))
                                                               (rule "hideAuxiliaryEq" (formula "45"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_671"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "99")) (ifInst ""  (formula "26")))
                                                               (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                               (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_672"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "57"))
                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "101")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,0,0") (ifseqformula "41"))
                                                               (rule "replace_known_left" (formula "62") (term "0,0,0,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "101")) (ifInst ""  (formula "27")))
                                                               (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                               (rule "hideAuxiliaryEq" (formula "62"))
                                                               (rule "allLeft" (formula "32") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_673"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "93")) (ifInst ""  (formula "12")))
                                                               (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                               (rule "hideAuxiliaryEq" (formula "50"))
                                                               (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet101000200101000000000_42" (formula "48") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101000200101000000000_43" (formula "48") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "48") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "2,0,1") (inst "selectSK=arr_674"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")))
                                                               (rule "applyEqReverse" (formula "49") (term "2,0,1") (ifseqformula "48"))
                                                               (rule "hideAuxiliaryEq" (formula "48"))
                                                               (rule "allLeft" (formula "56") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_675"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")) (ifInst ""  (formula "26")))
                                                               (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                               (rule "hideAuxiliaryEq" (formula "56"))
                                                               (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet200101000000000_21" (formula "66") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "66") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "66") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "66") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "66") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                                                               (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "pullOutSelect" (formula "66") (term "2,0,1") (inst "selectSK=arr_676"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "92")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "66") (term "1,0,0,0") (ifseqformula "91"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "90")))
                                                               (rule "applyEqReverse" (formula "67") (term "2,0,1") (ifseqformula "66"))
                                                               (rule "hideAuxiliaryEq" (formula "66"))
                                                               (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_677"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "99")) (ifInst ""  (formula "11")))
                                                               (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                               (rule "hideAuxiliaryEq" (formula "54"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet101000200101000000000_49" (formula "51") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101000200101000000000_50" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "69")))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "allLeft" (formula "23") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "57")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "41") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "allLeft" (formula "70") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_678"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "109")))
                                                               (rule "replaceKnownSelect_taclet101000200101000000000_40" (formula "70") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101000200101000000000_41" (formula "70") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0") (ifseqformula "44"))
                                                               (rule "replace_known_left" (formula "70") (term "0,0,0,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                               (rule "hideAuxiliaryEq" (formula "70"))
                                                               (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "57")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_679"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "100")) (ifInst ""  (formula "11")))
                                                               (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                               (rule "hideAuxiliaryEq" (formula "55"))
                                                               (rule "allLeft" (formula "30") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "54")))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet101000200101000000000_42" (formula "60") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101000200101000000000_43" (formula "60") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_680"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "101")) (ifInst ""  (formula "12")))
                                                               (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                               (rule "hideAuxiliaryEq" (formula "54"))
                                                               (rule "allLeft" (formula "62") (inst "t=i_0_2"))
                                                               (rule "replaceKnownSelect_taclet101000200101000000000_44" (formula "62") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101000200101000000000_45" (formula "62") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "55")))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "74")))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "ifthenelse_split" (formula "80") (term "0"))
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "82") (term "1,0") (ifseqformula "81"))
                                                                  (rule "hideAuxiliaryEq" (formula "81"))
                                                                  (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "80"))
                                                                  (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "applyEqReverse" (formula "83") (term "1,1") (ifseqformula "81"))
                                                                  (rule "hideAuxiliaryEq" (formula "81"))
                                                                  (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "80"))
                                                                  (builtin "One Step Simplification" (formula "92"))
                                                                  (rule "orRight" (formula "92"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                                  (rule "close" (formula "92") (ifseqformula "66"))
                                                               )
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "81") (term "1,0") (ifseqformula "80"))
                                                                  (rule "hideAuxiliaryEq" (formula "80"))
                                                                  (rule "replace_known_right" (formula "80") (term "0,0,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "93"))
                                                                  (rule "allLeft" (formula "50") (inst "t=i_52"))
                                                                  (rule "replaceKnownSelect_taclet01000200101000000000_33" (formula "50") (term "1,0,1"))
                                                                  (rule "replaceKnownSelect_taclet01000200101000000000_30" (formula "50") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01000200101000000000_34" (formula "50") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01000200101000000000_31" (formula "50") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "50") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "50") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "50") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "50") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_52)"))
                                                                  (rule "replaceKnownSelect_taclet01000200101000000000_30" (formula "64") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01000200101000000000_31" (formula "64") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "64") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "allLeft" (formula "64") (inst "t=i_52"))
                                                                  (rule "replaceKnownSelect_taclet01000200101000000000_33" (formula "64") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01000200101000000000_34" (formula "64") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "64") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "notLeft" (formula "64"))
                                                                  (rule "ifthenelse_split" (formula "82") (term "0"))
                                                                  (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "replace_known_left" (formula "96") (term "1,0") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                     (rule "orRight" (formula "96"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "94"))
                                                                     (rule "close" (formula "96") (ifseqformula "67"))
                                                                  )
                                                                  (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "82"))
                                                                     (rule "hideAuxiliaryEq" (formula "82"))
                                                                     (rule "replace_known_right" (formula "96") (term "1,0") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                     (rule "allLeft" (formula "77") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "80"))
                                                                     (rule "qeq_literals" (formula "77") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "77"))
                                                                     (rule "pullOutSelect" (formula "77") (term "0,0,0") (inst "selectSK=arr_681"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "68"))
                                                                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "101")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "44"))
                                                                     (rule "replace_known_right" (formula "77") (term "0,0,0,0") (ifseqformula "99"))
                                                                     (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "100")))
                                                                     (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "77"))
                                                                     (rule "hideAuxiliaryEq" (formula "77"))
                                                                     (rule "narrowSelectArrayType" (formula "77") (term "0,0,0") (ifseqformula "67") (ifseqformula "100"))
                                                                     (rule "allLeft" (formula "64") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "81"))
                                                                     (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_682"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "103")) (ifInst ""  (formula "104")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                                     (rule "hideAuxiliaryEq" (formula "64"))
                                                                     (rule "allLeft" (formula "33") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "82"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "allLeft" (formula "23") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "83"))
                                                                     (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "allLeft" (formula "60") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "84"))
                                                                     (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_683"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "111")) (ifInst ""  (formula "11")))
                                                                     (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                                     (rule "hideAuxiliaryEq" (formula "60"))
                                                                     (rule "allLeft" (formula "76") (inst "t=i_46"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "76") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "76") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "76") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "76") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "76") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0") (ifseqformula "84"))
                                                                     (rule "qeq_literals" (formula "76") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "76"))
                                                                     (rule "pullOutSelect" (formula "76") (term "1,0,1") (inst "selectSK=arr_684"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "71"))
                                                                     (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "105")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "46"))
                                                                     (rule "replace_known_right" (formula "76") (term "1,0,0,0") (ifseqformula "104"))
                                                                     (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "103")))
                                                                     (rule "applyEqReverse" (formula "77") (term "1,0,1") (ifseqformula "76"))
                                                                     (rule "hideAuxiliaryEq" (formula "76"))
                                                                     (rule "pullOutSelect" (formula "76") (term "2,0,1") (inst "selectSK=arr_685"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "71"))
                                                                     (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "105")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "46"))
                                                                     (rule "replace_known_right" (formula "76") (term "1,0,0,0") (ifseqformula "104"))
                                                                     (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "103")))
                                                                     (rule "applyEqReverse" (formula "77") (term "2,0,1") (ifseqformula "76"))
                                                                     (rule "hideAuxiliaryEq" (formula "76"))
                                                                     (rule "allLeft" (formula "63") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "85"))
                                                                     (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_686"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "120")) (ifInst ""  (formula "27")))
                                                                     (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                                     (rule "hideAuxiliaryEq" (formula "63"))
                                                                     (rule "allLeft" (formula "53") (inst "t=i_46"))
                                                                     (rule "replaceKnownSelect_taclet11101000200101000000000_71" (formula "53") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet11101000200101000000000_72" (formula "53") (term "1,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "86"))
                                                                     (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "pullOutSelect" (formula "53") (term "2,0,1") (inst "selectSK=arr_687"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "54") (term "2,0,1") (ifseqformula "53"))
                                                                     (rule "hideAuxiliaryEq" (formula "53"))
                                                                     (rule "allLeft" (formula "59") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "87"))
                                                                     (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_688"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "113")) (ifInst ""  (formula "12")))
                                                                     (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "hideAuxiliaryEq" (formula "59"))
                                                                     (rule "allLeft" (formula "26") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "88"))
                                                                     (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "66")))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "allLeft" (formula "31") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "88"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "60")))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "allLeft" (formula "56") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "88"))
                                                                     (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_689"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "124")) (ifInst ""  (formula "28")))
                                                                     (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                     (rule "hideAuxiliaryEq" (formula "56"))
                                                                     (rule "allLeft" (formula "44") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "88"))
                                                                     (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "allLeft" (formula "83") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1,0") (ifseqformula "89"))
                                                                     (rule "qeq_literals" (formula "83") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "pullOutSelect" (formula "83") (term "0,0,0") (inst "selectSK=arr_690"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "75"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "125")))
                                                                     (rule "replaceKnownSelect_taclet11101000200101000000000_85" (formula "83") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet11101000200101000000000_86" (formula "83") (term "2,0"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "47"))
                                                                     (rule "replace_known_left" (formula "83") (term "0,0,0,0") (ifseqformula "28"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "applyEqReverse" (formula "84") (term "0,0,0") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0,0") (ifseqformula "74"))
                                                                     (rule "replace_known_right" (formula "97") (term "0") (ifseqformula "104"))
                                                                     (builtin "One Step Simplification" (formula "97"))
                                                                     (rule "replace_known_left" (formula "106") (term "0,1") (ifseqformula "97"))
                                                                     (builtin "One Step Simplification" (formula "106"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "106") (ifseqformula "105"))
                                                                     (rule "close" (formula "106") (ifseqformula "74"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "72"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "72") (inst "sk=i_51"))
                                                               (rule "orRight" (formula "72"))
                                                               (rule "notRight" (formula "73"))
                                                               (rule "orRight" (formula "73"))
                                                               (rule "inEqSimp_leqRight" (formula "73"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_661"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "53") (ifseqformula "78"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "61") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_662"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "79"))
                                                               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "76") (term "0,0,0,1,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                               (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "61") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_663"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "80"))
                                                               (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "65") (term "0"))
                                                               (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                               (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "true_left" (formula "58"))
                                                               (rule "ifthenelse_split" (formula "67") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                                  (rule "close" (formula "77") (ifseqformula "53"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "arrayLengthNotNegative" (formula "72") (term "0"))
                                                                  (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                                                                  (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "true_left" (formula "73"))
                                                                  (rule "ifthenelse_split" (formula "65") (term "0"))
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "66"))
                                                                     (rule "hideAuxiliaryEq" (formula "66"))
                                                                     (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "66"))
                                                                     (rule "hideAuxiliaryEq" (formula "66"))
                                                                     (rule "replace_known_left" (formula "77") (term "0,0,1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "77"))
                                                                     (rule "orRight" (formula "77"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "76"))
                                                                     (rule "close" (formula "77") (ifseqformula "53"))
                                                                  )
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                                                     (rule "hideAuxiliaryEq" (formula "65"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "74"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "replace_known_right" (formula "78") (term "0,0,1") (ifseqformula "74"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "allLeft" (formula "61") (inst "t=i_51"))
                                                                     (rule "replaceKnownSelect_taclet011000200101000000000_29" (formula "61") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet011000200101000000000_30" (formula "61") (term "0,0,0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "61") (term "0,0,0,0") (ifseqformula "53") (ifseqformula "82"))
                                                                     (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "61") (term "0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "61") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "61"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "allRight" (formula "72") (inst "sk=i_50"))
                                                               (rule "orRight" (formula "72"))
                                                               (rule "notRight" (formula "73"))
                                                               (rule "orRight" (formula "73"))
                                                               (rule "inEqSimp_leqRight" (formula "73"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_657"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "81"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "40") (ifseqformula "79"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "61") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_658"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "79"))
                                                               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "76") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                               (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                               (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "61") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_659"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "53") (ifseqformula "80"))
                                                               (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "65") (term "0"))
                                                               (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                               (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "true_left" (formula "58"))
                                                               (rule "ifthenelse_split" (formula "67") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_left" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                                  (rule "close" (formula "77") (ifseqformula "53"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "replace_known_right" (formula "67") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "arrayLengthIsAShort" (formula "72") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "true_left" (formula "72"))
                                                                  (rule "arrayLengthNotNegative" (formula "72") (term "0"))
                                                                  (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                                                                  (rule "ifthenelse_split" (formula "65") (term "0"))
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "66"))
                                                                     (rule "hideAuxiliaryEq" (formula "66"))
                                                                     (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "66"))
                                                                     (rule "hideAuxiliaryEq" (formula "66"))
                                                                     (rule "replace_known_left" (formula "77") (term "0,0,1") (ifseqformula "65"))
                                                                     (builtin "One Step Simplification" (formula "77"))
                                                                     (rule "orRight" (formula "77"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "76"))
                                                                     (rule "close" (formula "77") (ifseqformula "53"))
                                                                  )
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                                                     (rule "hideAuxiliaryEq" (formula "65"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "74"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "replace_known_right" (formula "78") (term "0,0,1") (ifseqformula "74"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "allLeft" (formula "50") (inst "t=i_50"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "50") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "50") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                     (rule "notLeft" (formula "50"))
                                                                     (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=arr_660"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")) (ifInst ""  (formula "85")))
                                                                     (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "75") (ifseqformula "4"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "false_right" (formula "72"))
                                                      (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                      (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "54") (term "0,1"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "allLeft" (formula "57") (inst "t=i_0_2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "57") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notLeft" (formula "57"))
                                                      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_424"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "76"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                                      (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "49") (ifseqformula "76"))
                                                      (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "64") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "73") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                                                      (rule "ifthenelse_negated" (formula "63") (term "0"))
                                                      (rule "ifthenelse_negated" (formula "64") (term "0"))
                                                      (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_2)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "57") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "57") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notLeft" (formula "57"))
                                                      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_425"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "76"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                      (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "49") (ifseqformula "77"))
                                                      (rule "replace_known_right" (formula "61") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "74") (term "0,0,0,1") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "71")))
                                                      (rule "ifthenelse_negated" (formula "61") (term "0"))
                                                      (rule "ifthenelse_negated" (formula "62") (term "0"))
                                                      (rule "ifthenelse_split" (formula "63") (term "0"))
                                                      (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                         (rule "hideAuxiliaryEq" (formula "64"))
                                                         (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "64"))
                                                         (rule "hideAuxiliaryEq" (formula "64"))
                                                         (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "73"))
                                                         (rule "orRight" (formula "73"))
                                                         (rule "orRight" (formula "73"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "70"))
                                                         (rule "close" (formula "74") (ifseqformula "49"))
                                                      )
                                                      (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "70"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "70"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "arrayLengthNotNegative" (formula "68") (term "0"))
                                                         (rule "applyEq" (formula "68") (term "0") (ifseqformula "69"))
                                                         (rule "ifthenelse_split" (formula "61") (term "0"))
                                                         (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                            (rule "hideAuxiliaryEq" (formula "62"))
                                                            (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "applyEqReverse" (formula "64") (term "1,1") (ifseqformula "62"))
                                                            (rule "hideAuxiliaryEq" (formula "62"))
                                                            (rule "replace_known_left" (formula "74") (term "0,0,1") (ifseqformula "61"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "orRight" (formula "74"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "72"))
                                                            (rule "close" (formula "74") (ifseqformula "49"))
                                                         )
                                                         (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                            (rule "hideAuxiliaryEq" (formula "61"))
                                                            (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "75") (term "0,0,1") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "ifthenelse_split" (formula "62") (term "0"))
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                                               (rule "hideAuxiliaryEq" (formula "63"))
                                                               (rule "replace_known_left" (formula "75") (term "1,0") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "orRight" (formula "75"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "72"))
                                                               (rule "close" (formula "75") (ifseqformula "49"))
                                                            )
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                               (rule "hideAuxiliaryEq" (formula "62"))
                                                               (rule "replace_known_right" (formula "75") (term "1,0") (ifseqformula "69"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "ifthenelse_split" (formula "61") (term "0"))
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "62"))
                                                                  (rule "hideAuxiliaryEq" (formula "62"))
                                                                  (rule "replace_known_left" (formula "75") (term "1,1") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "73"))
                                                                  (rule "close" (formula "75") (ifseqformula "49"))
                                                               )
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "replace_known_right" (formula "75") (term "1,1") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "61"))
                                                                  (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                                  (rule "allLeft" (formula "28") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_426"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "96")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0") (ifseqformula "38"))
                                                                  (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "96")) (ifInst ""  (formula "23")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_427"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "96")) (ifInst ""  (formula "22")))
                                                                  (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "hideAuxiliaryEq" (formula "46"))
                                                                  (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "47")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "58")))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "pullOutSelect" (formula "45") (term "0,0,0") (inst "selectSK=arr_428"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "89")) (ifInst ""  (formula "8")))
                                                                  (rule "applyEqReverse" (formula "46") (term "0,0,0") (ifseqformula "45"))
                                                                  (rule "hideAuxiliaryEq" (formula "45"))
                                                                  (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111100200101000000000_38" (formula "44") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111100200101000000000_39" (formula "44") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "60")))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "pullOutSelect" (formula "44") (term "1,0,1") (inst "selectSK=arr_429"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "45") (term "1,0,1") (ifseqformula "44"))
                                                                  (rule "hideAuxiliaryEq" (formula "44"))
                                                                  (rule "pullOutSelect" (formula "44") (term "2,0,1") (inst "selectSK=arr_430"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                                                                  (rule "applyEqReverse" (formula "45") (term "2,0,1") (ifseqformula "44"))
                                                                  (rule "hideAuxiliaryEq" (formula "44"))
                                                                  (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                                                  (rule "replaceKnownSelect_taclet1111100200101000000000_44" (formula "52") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111100200101000000000_45" (formula "52") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "allLeft" (formula "46") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_431"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "103")) (ifInst ""  (formula "23")))
                                                                  (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "hideAuxiliaryEq" (formula "46"))
                                                                  (rule "allLeft" (formula "49") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_432"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "94")) (ifInst ""  (formula "8")))
                                                                  (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "hideAuxiliaryEq" (formula "49"))
                                                                  (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111100200101000000000_46" (formula "45") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111100200101000000000_47" (formula "45") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "pullOutSelect" (formula "45") (term "2,0,1") (inst "selectSK=arr_433"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")))
                                                                  (rule "applyEqReverse" (formula "46") (term "2,0,1") (ifseqformula "45"))
                                                                  (rule "hideAuxiliaryEq" (formula "45"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_434"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "105")) (ifInst ""  (formula "22")))
                                                                  (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet200101000000000_21" (formula "65") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "65") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "65") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "2,0,1") (inst "selectSK=arr_435"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "92")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "40"))
                                                                  (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "91"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "90")))
                                                                  (rule "applyEqReverse" (formula "66") (term "2,0,1") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_436"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "99")) (ifInst ""  (formula "7")))
                                                                  (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_437"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "99")) (ifInst ""  (formula "7")))
                                                                  (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "19") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "48")))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "allLeft" (formula "21") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "55")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "allLeft" (formula "69") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_438"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "109")))
                                                                  (rule "replaceKnownSelect_taclet1111100200101000000000_48" (formula "69") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111100200101000000000_49" (formula "69") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0") (ifseqformula "41"))
                                                                  (rule "replace_known_left" (formula "69") (term "0,0,0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "52")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111100200101000000000_46" (formula "58") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111100200101000000000_47" (formula "58") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0,0") (ifseqformula "62"))
                                                                  (rule "replace_known_right" (formula "81") (term "0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "replace_known_left" (formula "91") (term "0") (ifseqformula "81"))
                                                                  (builtin "One Step Simplification" (formula "91"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "91") (ifseqformula "88"))
                                                                  (rule "close" (formula "91") (ifseqformula "62"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "inEqSimp_geqRight" (formula "70"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "andLeft" (formula "70"))
                                                   (rule "notLeft" (formula "71"))
                                                   (rule "applyEq" (formula "69") (term "0") (ifseqformula "70"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "70"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "71") (term "0") (ifseqformula "70"))
                                                   (rule "eqSymm" (formula "71"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "71") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "71") (term "0,0"))
                                                   (rule "leq_literals" (formula "71") (term "0"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "false_right" (formula "71"))
                                                   (rule "shift_paren_or" (formula "72") (term "0,1,1"))
                                                   (rule "shift_paren_or" (formula "72") (term "0,0,1"))
                                                   (rule "shift_paren_and" (formula "72"))
                                                   (rule "cut_direct" (formula "71") (term "0"))
                                                   (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "andRight" (formula "72"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "72") (inst "sk=i_0_49"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "inEqSimp_leqRight" (formula "74"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "74"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "74"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_391"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "77"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_392"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "allLeft" (formula "62") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                         (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "62") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "notLeft" (formula "62"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_393"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "79"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "79"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "76") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                         (rule "ifthenelse_negated" (formula "69") (term "0"))
                                                         (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                         (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "59") (term "0,1"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "true_left" (formula "59"))
                                                         (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                         (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                         (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "62") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "62") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "notLeft" (formula "62"))
                                                         (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_394"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "80"))
                                                         (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                         (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                         (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                         (rule "ifthenelse_split" (formula "68") (term "0"))
                                                         (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                                                            (rule "hideAuxiliaryEq" (formula "69"))
                                                            (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                                                            (rule "hideAuxiliaryEq" (formula "69"))
                                                            (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "68"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "orRight" (formula "76"))
                                                            (rule "orRight" (formula "76"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                            (rule "close" (formula "77") (ifseqformula "54"))
                                                         )
                                                         (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                            (rule "hideAuxiliaryEq" (formula "68"))
                                                            (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_395"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "97")) (ifInst ""  (formula "28")))
                                                            (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_396"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                            (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_397"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "92")) (ifInst ""  (formula "13")))
                                                            (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                            (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_398"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "60"))
                                                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "102")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "44"))
                                                            (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "102")) (ifInst ""  (formula "30")))
                                                            (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                            (rule "hideAuxiliaryEq" (formula "65"))
                                                            (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "allLeft" (formula "35") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "56")))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                            (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_399"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "94")) (ifInst ""  (formula "14")))
                                                            (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "allLeft" (formula "50") (inst "t=i_0_2"))
                                                            (rule "replaceKnownSelect_taclet10010200101000000000_40" (formula "50") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010200101000000000_41" (formula "50") (term "1,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "pullOutSelect" (formula "50") (term "2,0,1") (inst "selectSK=arr_400"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")))
                                                            (rule "applyEqReverse" (formula "51") (term "2,0,1") (ifseqformula "50"))
                                                            (rule "hideAuxiliaryEq" (formula "50"))
                                                            (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "56")))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_401"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "106")) (ifInst ""  (formula "30")))
                                                            (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_402"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "97")) (ifInst ""  (formula "14")))
                                                            (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10010200101000000000_49" (formula "51") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010200101000000000_50" (formula "51") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                            (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_403"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "94")) (ifInst ""  (formula "95")))
                                                            (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                            (rule "hideAuxiliaryEq" (formula "51"))
                                                            (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_404"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "108")) (ifInst ""  (formula "29")))
                                                            (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                            (rule "hideAuxiliaryEq" (formula "61"))
                                                            (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet200101000000000_21" (formula "72") (term "1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "72") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,2,2,0,1"))
                                                            (rule "add_literals" (formula "72") (term "0,0,2,2,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                            (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "72") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "72"))
                                                            (rule "pullOutSelect" (formula "72") (term "2,0,1") (inst "selectSK=arr_405"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "68"))
                                                            (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "95")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0") (ifseqformula "46"))
                                                            (rule "replace_known_right" (formula "72") (term "1,0,0,0") (ifseqformula "94"))
                                                            (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "93")))
                                                            (rule "applyEqReverse" (formula "73") (term "2,0,1") (ifseqformula "72"))
                                                            (rule "hideAuxiliaryEq" (formula "72"))
                                                            (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_406"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")) (ifInst ""  (formula "13")))
                                                            (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                            (rule "hideAuxiliaryEq" (formula "59"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "54")))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10010200101000000000_45" (formula "54") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010200101000000000_46" (formula "54") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                            (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "25")))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "allLeft" (formula "28") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "62")))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "allLeft" (formula "75") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_407"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "112")))
                                                            (rule "replaceKnownSelect_taclet10010200101000000000_51" (formula "75") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010200101000000000_52" (formula "75") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                            (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                            (rule "hideAuxiliaryEq" (formula "75"))
                                                            (rule "allLeft" (formula "33") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "replaceKnownSelect_taclet10010200101000000000_49" (formula "65") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10010200101000000000_50" (formula "65") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                            (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "ifthenelse_split" (formula "82") (term "0"))
                                                            (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "84") (term "1,0") (ifseqformula "83"))
                                                               (rule "hideAuxiliaryEq" (formula "83"))
                                                               (rule "replace_known_left" (formula "83") (term "0,0,0") (ifseqformula "82"))
                                                               (builtin "One Step Simplification" (formula "83"))
                                                               (rule "applyEqReverse" (formula "85") (term "1,1") (ifseqformula "83"))
                                                               (rule "hideAuxiliaryEq" (formula "83"))
                                                               (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "82"))
                                                               (builtin "One Step Simplification" (formula "92"))
                                                               (rule "orRight" (formula "92"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                               (rule "close" (formula "92") (ifseqformula "69"))
                                                            )
                                                            (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                               (rule "hideAuxiliaryEq" (formula "82"))
                                                               (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "82"))
                                                               (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "93"))
                                                               (rule "allLeft" (formula "75") (inst "t=i_0_49"))
                                                               (rule "replaceKnownSelect_taclet0010200101000000000_29" (formula "75") (term "2,0,1"))
                                                               (rule "replaceKnownSelect_taclet0010200101000000000_31" (formula "75") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0010200101000000000_30" (formula "75") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0010200101000000000_32" (formula "75") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "75") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "75") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "75") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "75") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "75") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "75") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "75") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "75") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "75") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "75") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "75") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "75") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "75") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "inEqSimp_contradInEq1" (formula "75") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "75") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "allLeft" (formula "79") (inst "t=add(Z(1(#)), i_0_49)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "79") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "79") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "79") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "79") (term "0,1,0"))
                                                               (rule "add_literals" (formula "79") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "79") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "79") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "79") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "79") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "79") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "79") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "79") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                                                               (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "79") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "79") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "notLeft" (formula "79"))
                                                               (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=arr_408"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "98"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
                                                               (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "90") (term "0") (ifseqformula "69") (ifseqformula "98"))
                                                               (rule "allLeft" (formula "79") (inst "t=i_0_49"))
                                                               (rule "inEqSimp_commuteGeq" (formula "79") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "79") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "79") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "inEqSimp_contradInEq1" (formula "79") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1"))
                                                               (rule "add_literals" (formula "79") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "79") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "79") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "79") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "notLeft" (formula "79"))
                                                               (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=arr_409"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "99"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")))
                                                               (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "90") (term "0") (ifseqformula "69") (ifseqformula "99"))
                                                               (rule "ifthenelse_split" (formula "84") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "replace_known_left" (formula "96") (term "1,0") (ifseqformula "84"))
                                                                  (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "orRight" (formula "96"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "94"))
                                                                  (rule "close" (formula "96") (ifseqformula "69"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "replace_known_right" (formula "96") (term "1,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "82"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_410"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "107")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                                  (rule "hideAuxiliaryEq" (formula "60"))
                                                                  (rule "allLeft" (formula "28") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "83"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "84"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "allLeft" (formula "55") (inst "t=i_46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "85"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "2,0,1") (inst "selectSK=arr_411"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")))
                                                                  (rule "applyEqReverse" (formula "56") (term "2,0,1") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "1,0,1") (inst "selectSK=arr_412"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")))
                                                                  (rule "applyEqReverse" (formula "56") (term "1,0,1") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "86"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "64")))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "86"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_413"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "120")) (ifInst ""  (formula "31")))
                                                                  (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                                  (rule "hideAuxiliaryEq" (formula "58"))
                                                                  (rule "allLeft" (formula "56") (inst "t=res_min_1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "93"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "2,0,1") (inst "selectSK=arr_414"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "57") (term "2,0,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "1,0,1") (inst "selectSK=arr_415"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "57") (term "1,0,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "63") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "88"))
                                                                  (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_416"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "112")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                                  (rule "hideAuxiliaryEq" (formula "63"))
                                                                  (rule "allLeft" (formula "72") (inst "t=i_46"))
                                                                  (rule "replaceKnownSelect_taclet1110010200101000000000_75" (formula "72") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110010200101000000000_76" (formula "72") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "88"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "allLeft" (formula "83") (inst "t=i_46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "83") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "83") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "83") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "83") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "83") (term "0,0") (ifseqformula "89"))
                                                                  (rule "qeq_literals" (formula "83") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "pullOutSelect" (formula "83") (term "2,0,1") (inst "selectSK=arr_417"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "77"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "108")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "83") (term "0,0,0,0") (ifseqformula "106"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "107")))
                                                                  (rule "applyEqReverse" (formula "84") (term "2,0,1") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "pullOutSelect" (formula "83") (term "1,0,1") (inst "selectSK=arr_418"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "77"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "108")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "83") (term "1,0,0,0") (ifseqformula "107"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "106")))
                                                                  (rule "applyEqReverse" (formula "84") (term "1,0,1") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "allLeft" (formula "84") (inst "t=res_min_1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "84") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "84") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "96"))
                                                                  (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "2,0,1") (inst "selectSK=arr_419"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "77"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "109")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "107"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "85") (term "2,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "1,0,1") (inst "selectSK=arr_420"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "77"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "109")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "107"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "85") (term "1,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "91"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "60")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "88") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "88") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "88") (term "1,0") (ifseqformula "91"))
                                                                  (rule "qeq_literals" (formula "88") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "pullOutSelect" (formula "88") (term "0,0,0") (inst "selectSK=arr_421"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "77"))
                                                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "110")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "88") (term "0,0,0,0") (ifseqformula "108"))
                                                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "109")))
                                                                  (rule "applyEqReverse" (formula "89") (term "0,0,0") (ifseqformula "88"))
                                                                  (rule "hideAuxiliaryEq" (formula "88"))
                                                                  (rule "narrowSelectArrayType" (formula "88") (term "0,0,0") (ifseqformula "76") (ifseqformula "109"))
                                                                  (rule "allLeft" (formula "47") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "92"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "93"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_422"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "126")) (ifInst ""  (formula "30")))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "87") (inst "t=i_46"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "87") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "87") (term "1,0") (ifseqformula "93"))
                                                                  (rule "qeq_literals" (formula "87") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "pullOutSelect" (formula "87") (term "0,0,0") (inst "selectSK=arr_423"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "127")))
                                                                  (rule "replaceKnownSelect_taclet1110010200101000000000_77" (formula "87") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1110010200101000000000_78" (formula "87") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,0") (ifseqformula "50"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,0,0,0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEqReverse" (formula "88") (term "0,0,0") (ifseqformula "87"))
                                                                  (rule "hideAuxiliaryEq" (formula "87"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "1,0,1,0") (ifseqformula "77"))
                                                                  (rule "replace_known_right" (formula "96") (term "0") (ifseqformula "106"))
                                                                  (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "replace_known_left" (formula "108") (term "0,1") (ifseqformula "96"))
                                                                  (builtin "One Step Simplification" (formula "108"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "108") (ifseqformula "107"))
                                                                  (rule "close" (formula "108") (ifseqformula "77"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "72"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "72") (inst "sk=i_48"))
                                                            (rule "orRight" (formula "72"))
                                                            (rule "orRight" (formula "72"))
                                                            (rule "inEqSimp_leqRight" (formula "74"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "73"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "74"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_360"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_361"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "62") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "62") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_362"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                            (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "79"))
                                                            (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "replace_known_right" (formula "76") (term "0,0,0,1,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "69") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                            (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "59") (term "0,1"))
                                                            (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "59"))
                                                            (rule "true_left" (formula "59"))
                                                            (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                            (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "62") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                            (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "62") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "62") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "notLeft" (formula "62"))
                                                            (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_363"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                            (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "80"))
                                                            (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0,0,1") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                            (rule "ifthenelse_split" (formula "68") (term "0"))
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                               (rule "close" (formula "77") (ifseqformula "54"))
                                                            )
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                               (rule "hideAuxiliaryEq" (formula "68"))
                                                               (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_364"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "97")) (ifInst ""  (formula "28")))
                                                               (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_365"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "101")) (ifInst ""  (formula "29")))
                                                               (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                               (rule "hideAuxiliaryEq" (formula "50"))
                                                               (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_366"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "92")) (ifInst ""  (formula "14")))
                                                               (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                               (rule "hideAuxiliaryEq" (formula "52"))
                                                               (rule "allLeft" (formula "36") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "56")))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "allLeft" (formula "57") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_367"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "89")) (ifInst ""  (formula "90")))
                                                               (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                               (rule "hideAuxiliaryEq" (formula "57"))
                                                               (rule "allLeft" (formula "54") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,1,0"))
                                                               (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_368"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "95")) (ifInst ""  (formula "13")))
                                                               (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                               (rule "hideAuxiliaryEq" (formula "54"))
                                                               (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                               (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_369"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "104")))
                                                               (rule "replaceKnownSelect_taclet101010200101000000000_42" (formula "67") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101010200101000000000_43" (formula "67") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "allLeft" (formula "53") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_370"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "105")) (ifInst ""  (formula "29")))
                                                               (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                               (rule "hideAuxiliaryEq" (formula "53"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_371"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "96")) (ifInst ""  (formula "14")))
                                                               (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                               (rule "hideAuxiliaryEq" (formula "55"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "51") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "1,0,1") (inst "selectSK=arr_372"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "93")) (ifInst ""  (formula "94")))
                                                               (rule "applyEqReverse" (formula "52") (term "1,0,1") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_373"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "93")) (ifInst ""  (formula "94")))
                                                               (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                                               (rule "replaceKnownSelect_taclet101010200101000000000_46" (formula "52") (term "1,0,1"))
                                                               (rule "replaceKnownSelect_taclet101010200101000000000_56" (formula "52") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101010200101000000000_47" (formula "52") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101010200101000000000_57" (formula "52") (term "2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_374"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "108")) (ifInst ""  (formula "28")))
                                                               (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                               (rule "hideAuxiliaryEq" (formula "61"))
                                                               (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet200101000000000_21" (formula "72") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "72") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "72") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "72") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                               (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "72") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "pullOutSelect" (formula "72") (term "2,0,1") (inst "selectSK=arr_375"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "95")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "72") (term "1,0,0,0") (ifseqformula "94"))
                                                               (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "93")))
                                                               (rule "applyEqReverse" (formula "73") (term "2,0,1") (ifseqformula "72"))
                                                               (rule "hideAuxiliaryEq" (formula "72"))
                                                               (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "59"))
                                                               (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_376"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")) (ifInst ""  (formula "13")))
                                                               (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                               (rule "hideAuxiliaryEq" (formula "59"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "56")))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "27") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "62")))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "allLeft" (formula "45") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "allLeft" (formula "75") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_377"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "69"))
                                                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "112")))
                                                               (rule "replaceKnownSelect_taclet101010200101000000000_52" (formula "75") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101010200101000000000_53" (formula "75") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                               (rule "hideAuxiliaryEq" (formula "75"))
                                                               (rule "allLeft" (formula "33") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet101010200101000000000_56" (formula "65") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101010200101000000000_57" (formula "65") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                               (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "ifthenelse_split" (formula "82") (term "0"))
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "84") (term "1,0") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "replace_known_left" (formula "83") (term "0,0,0") (ifseqformula "82"))
                                                                  (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "applyEqReverse" (formula "85") (term "1,1") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "82"))
                                                                  (builtin "One Step Simplification" (formula "92"))
                                                                  (rule "orRight" (formula "92"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                                  (rule "close" (formula "92") (ifseqformula "69"))
                                                               )
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                                  (rule "hideAuxiliaryEq" (formula "82"))
                                                                  (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "93"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_48"))
                                                                  (rule "replaceKnownSelect_taclet01010200101000000000_33" (formula "54") (term "1,0,1"))
                                                                  (rule "replaceKnownSelect_taclet01010200101000000000_30" (formula "54") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01010200101000000000_34" (formula "54") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01010200101000000000_31" (formula "54") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "54") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_48)"))
                                                                  (rule "replaceKnownSelect_taclet01010200101000000000_30" (formula "67") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01010200101000000000_31" (formula "67") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "67") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "67") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "67") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "allLeft" (formula "67") (inst "t=i_48"))
                                                                  (rule "replaceKnownSelect_taclet01010200101000000000_33" (formula "67") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet01010200101000000000_34" (formula "67") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "67") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "67") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "ifthenelse_split" (formula "84") (term "0"))
                                                                  (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "85"))
                                                                     (rule "hideAuxiliaryEq" (formula "85"))
                                                                     (rule "replace_known_left" (formula "96") (term "1,0") (ifseqformula "84"))
                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                     (rule "orRight" (formula "96"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "94"))
                                                                     (rule "close" (formula "96") (ifseqformula "70"))
                                                                  )
                                                                  (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "84"))
                                                                     (rule "hideAuxiliaryEq" (formula "84"))
                                                                     (rule "replace_known_right" (formula "96") (term "1,0") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                     (rule "allLeft" (formula "25") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "82"))
                                                                     (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "allLeft" (formula "34") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "83"))
                                                                     (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "allLeft" (formula "28") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "84"))
                                                                     (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "allLeft" (formula "64") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "85"))
                                                                     (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_378"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "110")) (ifInst ""  (formula "13")))
                                                                     (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                                     (rule "hideAuxiliaryEq" (formula "64"))
                                                                     (rule "allLeft" (formula "80") (inst "t=i_46"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "80") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "80") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "80") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "80") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "80") (term "0,0") (ifseqformula "86"))
                                                                     (rule "qeq_literals" (formula "80") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                     (rule "pullOutSelect" (formula "80") (term "1,0,1") (inst "selectSK=arr_379"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "75"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "105")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,0,0") (ifseqformula "51"))
                                                                     (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "103"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "104")))
                                                                     (rule "applyEqReverse" (formula "81") (term "1,0,1") (ifseqformula "80"))
                                                                     (rule "hideAuxiliaryEq" (formula "80"))
                                                                     (rule "pullOutSelect" (formula "80") (term "2,0,1") (inst "selectSK=arr_380"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "75"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "105")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,0,0") (ifseqformula "51"))
                                                                     (rule "replace_known_right" (formula "80") (term "1,0,0,0") (ifseqformula "104"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "103")))
                                                                     (rule "applyEqReverse" (formula "81") (term "2,0,1") (ifseqformula "80"))
                                                                     (rule "hideAuxiliaryEq" (formula "80"))
                                                                     (rule "allLeft" (formula "84") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "87"))
                                                                     (rule "qeq_literals" (formula "84") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "84"))
                                                                     (rule "pullOutSelect" (formula "84") (term "0,0,0") (inst "selectSK=arr_381"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "75"))
                                                                     (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "106")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "51"))
                                                                     (rule "replace_known_right" (formula "84") (term "1,0,0,0") (ifseqformula "105"))
                                                                     (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "104")))
                                                                     (rule "applyEqReverse" (formula "85") (term "0,0,0") (ifseqformula "84"))
                                                                     (rule "hideAuxiliaryEq" (formula "84"))
                                                                     (rule "narrowSelectArrayType" (formula "84") (term "0,0,0") (ifseqformula "74") (ifseqformula "105"))
                                                                     (rule "allLeft" (formula "58") (inst "t=i_46"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "58") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "58") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "58") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0") (ifseqformula "88"))
                                                                     (rule "qeq_literals" (formula "58") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "pullOutSelect" (formula "58") (term "2,0,1") (inst "selectSK=arr_382"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "59") (term "2,0,1") (ifseqformula "58"))
                                                                     (rule "hideAuxiliaryEq" (formula "58"))
                                                                     (rule "pullOutSelect" (formula "58") (term "1,0,1") (inst "selectSK=arr_383"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "59") (term "1,0,1") (ifseqformula "58"))
                                                                     (rule "hideAuxiliaryEq" (formula "58"))
                                                                     (rule "allLeft" (formula "59") (inst "t=res_min_1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "59") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "59") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0") (ifseqformula "95"))
                                                                     (rule "qeq_literals" (formula "59") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                     (rule "pullOutSelect" (formula "59") (term "1,0,1") (inst "selectSK=arr_384"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "109")) (ifInst ""  (formula "110")))
                                                                     (rule "applyEqReverse" (formula "60") (term "1,0,1") (ifseqformula "59"))
                                                                     (rule "hideAuxiliaryEq" (formula "59"))
                                                                     (rule "pullOutSelect" (formula "59") (term "2,0,1") (inst "selectSK=arr_385"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "109")) (ifInst ""  (formula "110")))
                                                                     (rule "applyEqReverse" (formula "60") (term "2,0,1") (ifseqformula "59"))
                                                                     (rule "hideAuxiliaryEq" (formula "59"))
                                                                     (rule "allLeft" (formula "40") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "90"))
                                                                     (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "67")))
                                                                     (rule "true_left" (formula "40"))
                                                                     (rule "allLeft" (formula "84") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "90"))
                                                                     (rule "qeq_literals" (formula "84") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "84"))
                                                                     (rule "pullOutSelect" (formula "84") (term "0,0,0") (inst "selectSK=arr_386"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "124")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "51"))
                                                                     (rule "replace_known_left" (formula "84") (term "0,0,0,0") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "84"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "124")) (ifInst ""  (formula "31")))
                                                                     (rule "applyEqReverse" (formula "85") (term "0,0,0") (ifseqformula "84"))
                                                                     (rule "hideAuxiliaryEq" (formula "84"))
                                                                     (rule "allLeft" (formula "65") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "90"))
                                                                     (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_387"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "51"))
                                                                     (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "114")) (ifInst ""  (formula "14")))
                                                                     (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                     (rule "hideAuxiliaryEq" (formula "65"))
                                                                     (rule "allLeft" (formula "73") (inst "t=i_46"))
                                                                     (rule "replaceKnownSelect_taclet11101010200101000000000_80" (formula "73") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet11101010200101000000000_81" (formula "73") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "90"))
                                                                     (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                     (rule "allLeft" (formula "63") (inst "t=i_46"))
                                                                     (rule "replaceKnownSelect_taclet11101010200101000000000_87" (formula "63") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet11101010200101000000000_88" (formula "63") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "91"))
                                                                     (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "25")))
                                                                     (rule "true_left" (formula "63"))
                                                                     (rule "allLeft" (formula "49") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "91"))
                                                                     (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "allLeft" (formula "85") (inst "t=res_min_1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "85") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "85") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "85") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "85") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "85") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "85") (term "0,0") (ifseqformula "98"))
                                                                     (rule "qeq_literals" (formula "85") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                     (rule "pullOutSelect" (formula "85") (term "1,0,1") (inst "selectSK=arr_388"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "79"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "111")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "52"))
                                                                     (rule "replace_known_right" (formula "85") (term "0,0,0,0") (ifseqformula "109"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "110")))
                                                                     (rule "applyEqReverse" (formula "86") (term "1,0,1") (ifseqformula "85"))
                                                                     (rule "hideAuxiliaryEq" (formula "85"))
                                                                     (rule "pullOutSelect" (formula "85") (term "2,0,1") (inst "selectSK=arr_389"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "79"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "111")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "52"))
                                                                     (rule "replace_known_right" (formula "85") (term "1,0,0,0") (ifseqformula "110"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "86") (term "2,0,1") (ifseqformula "85"))
                                                                     (rule "hideAuxiliaryEq" (formula "85"))
                                                                     (rule "allLeft" (formula "71") (inst "t=i_46"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "93"))
                                                                     (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_390"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "52"))
                                                                     (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "126")) (ifInst ""  (formula "30")))
                                                                     (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                                     (rule "hideAuxiliaryEq" (formula "71"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0,0") (ifseqformula "78"))
                                                                     (rule "replace_known_right" (formula "99") (term "0") (ifseqformula "106"))
                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                     (rule "replace_known_left" (formula "108") (term "0,1") (ifseqformula "99"))
                                                                     (builtin "One Step Simplification" (formula "108"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "108") (ifseqformula "107"))
                                                                     (rule "close" (formula "108") (ifseqformula "78"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "72"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "72") (inst "sk=i_45"))
                                                               (rule "orRight" (formula "72"))
                                                               (rule "notRight" (formula "73"))
                                                               (rule "orRight" (formula "73"))
                                                               (rule "inEqSimp_leqRight" (formula "73"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_344"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "54") (ifseqformula "78"))
                                                               (rule "allLeft" (formula "62") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_345"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "79"))
                                                               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "replace_known_right" (formula "76") (term "0,0,0,1,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "69") (term "0"))
                                                               (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "59") (term "0,1"))
                                                               (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "59"))
                                                               (rule "true_left" (formula "59"))
                                                               (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                               (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_346"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "80"))
                                                               (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                               (rule "ifthenelse_split" (formula "68") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                                  (rule "close" (formula "77") (ifseqformula "54"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_347"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "89")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                                  (rule "hideAuxiliaryEq" (formula "50"))
                                                                  (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_348"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "98")) (ifInst ""  (formula "28")))
                                                                  (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "allLeft" (formula "51") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_349"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "102")) (ifInst ""  (formula "30")))
                                                                  (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "hideAuxiliaryEq" (formula "51"))
                                                                  (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_350"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "104")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "104")) (ifInst ""  (formula "30")))
                                                                  (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_351"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")))
                                                                  (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                                  (rule "hideAuxiliaryEq" (formula "58"))
                                                                  (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_352"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "96")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "allLeft" (formula "51") (inst "t=i_0_2"))
                                                                  (rule "replaceKnownSelect_taclet1011010200101000000000_45" (formula "51") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1011010200101000000000_46" (formula "51") (term "1,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_353"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")))
                                                                  (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                  (rule "hideAuxiliaryEq" (formula "51"))
                                                                  (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "58")))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "allLeft" (formula "37") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1011010200101000000000_43" (formula "55") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1011010200101000000000_44" (formula "55") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "25")))
                                                                  (rule "true_left" (formula "55"))
                                                                  (rule "allLeft" (formula "56") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_354"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "97")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1011010200101000000000_49" (formula "53") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1011010200101000000000_50" (formula "53") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "2,0,1") (inst "selectSK=arr_355"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "94")) (ifInst ""  (formula "95")))
                                                                  (rule "applyEqReverse" (formula "54") (term "2,0,1") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_356"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "108")) (ifInst ""  (formula "29")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet200101000000000_21" (formula "72") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "72") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "72") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "72") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "pullOutSelect" (formula "72") (term "2,0,1") (inst "selectSK=arr_357"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "95")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0") (ifseqformula "48"))
                                                                  (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "93"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "94")))
                                                                  (rule "applyEqReverse" (formula "73") (term "2,0,1") (ifseqformula "72"))
                                                                  (rule "hideAuxiliaryEq" (formula "72"))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_358"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "56")))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "28") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "62")))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "allLeft" (formula "46") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "allLeft" (formula "75") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_359"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "69"))
                                                                  (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "112")))
                                                                  (rule "replaceKnownSelect_taclet1011010200101000000000_40" (formula "75") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1011010200101000000000_41" (formula "75") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                                  (rule "hideAuxiliaryEq" (formula "75"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")))
                                                                  (rule "true_left" (formula "34"))
                                                                  (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1011010200101000000000_49" (formula "65") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1011010200101000000000_50" (formula "65") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "ifthenelse_split" (formula "82") (term "0"))
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "84") (term "1,0") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "replace_known_left" (formula "83") (term "0,0,0") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "applyEqReverse" (formula "85") (term "1,1") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "92"))
                                                                     (rule "orRight" (formula "92"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                                     (rule "close" (formula "92") (ifseqformula "69"))
                                                                  )
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                                     (rule "hideAuxiliaryEq" (formula "82"))
                                                                     (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "82"))
                                                                     (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "93"))
                                                                     (rule "allLeft" (formula "78") (inst "t=i_45"))
                                                                     (rule "replaceKnownSelect_taclet011010200101000000000_29" (formula "78") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet011010200101000000000_30" (formula "78") (term "0,0,0,0"))
                                                                     (rule "narrowSelectArrayType" (formula "78") (term "0,0,0,0") (ifseqformula "69") (ifseqformula "97"))
                                                                     (rule "replace_known_left" (formula "78") (term "0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "78") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "78") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "78"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_literals" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "allRight" (formula "72") (inst "sk=i_47"))
                                                               (rule "orRight" (formula "72"))
                                                               (rule "notRight" (formula "73"))
                                                               (rule "orRight" (formula "73"))
                                                               (rule "inEqSimp_leqRight" (formula "73"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_327"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                                                               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "41") (ifseqformula "79"))
                                                               (rule "allLeft" (formula "62") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_328"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "79"))
                                                               (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "replace_known_right" (formula "76") (term "0,0,0,1,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "69") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                               (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "59") (term "0,1"))
                                                               (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "59"))
                                                               (rule "true_left" (formula "59"))
                                                               (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                               (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "62") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_329"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0") (ifseqformula "54") (ifseqformula "80"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "66") (term "0"))
                                                               (rule "ifthenelse_split" (formula "68") (term "0"))
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "orRight" (formula "76"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "74"))
                                                                  (rule "close" (formula "77") (ifseqformula "54"))
                                                               )
                                                               (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_330"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "56"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "98")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0") (ifseqformula "43"))
                                                                  (rule "replace_known_left" (formula "61") (term "0,0,0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "98")) (ifInst ""  (formula "29")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111010200101000000000_38" (formula "49") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111010200101000000000_39" (formula "49") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "63")))
                                                                  (rule "true_left" (formula "49"))
                                                                  (rule "allLeft" (formula "49") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_331"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "100")) (ifInst ""  (formula "30")))
                                                                  (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "hideAuxiliaryEq" (formula "49"))
                                                                  (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_332"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "100")) (ifInst ""  (formula "29")))
                                                                  (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "64")))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "allLeft" (formula "49") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "pullOutSelect" (formula "49") (term "2,0,1") (inst "selectSK=arr_333"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "50") (term "2,0,1") (ifseqformula "49"))
                                                                  (rule "hideAuxiliaryEq" (formula "49"))
                                                                  (rule "pullOutSelect" (formula "49") (term "1,0,1") (inst "selectSK=arr_334"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "50") (term "1,0,1") (ifseqformula "49"))
                                                                  (rule "hideAuxiliaryEq" (formula "49"))
                                                                  (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_335"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "93")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_336"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "94")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111010200101000000000_44" (formula "50") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111010200101000000000_45" (formula "50") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "50") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "pullOutSelect" (formula "50") (term "2,0,1") (inst "selectSK=arr_337"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "91")) (ifInst ""  (formula "92")))
                                                                  (rule "applyEqReverse" (formula "51") (term "2,0,1") (ifseqformula "50"))
                                                                  (rule "hideAuxiliaryEq" (formula "50"))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                                  (rule "replaceKnownSelect_taclet1111010200101000000000_46" (formula "59") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111010200101000000000_47" (formula "59") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_338"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "98")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_339"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "108")) (ifInst ""  (formula "29")))
                                                                  (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                                  (rule "hideAuxiliaryEq" (formula "60"))
                                                                  (rule "allLeft" (formula "71") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet200101000000000_21" (formula "71") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "71") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "71") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "71") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "71") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "71") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "71") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "71") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "71") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "71") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "71") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "71") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "71") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "71") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "71") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "pullOutSelect" (formula "71") (term "2,0,1") (inst "selectSK=arr_340"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "95")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "93"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "94")))
                                                                  (rule "applyEqReverse" (formula "72") (term "2,0,1") (ifseqformula "71"))
                                                                  (rule "hideAuxiliaryEq" (formula "71"))
                                                                  (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "59")))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_341"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "102")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "54")))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "allLeft" (formula "28") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "61")))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "allLeft" (formula "75") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_342"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "112")))
                                                                  (rule "replaceKnownSelect_taclet1111010200101000000000_40" (formula "75") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111010200101000000000_41" (formula "75") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                                  (rule "hideAuxiliaryEq" (formula "75"))
                                                                  (rule "allLeft" (formula "33") (inst "t=i_0_2"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_0_2)"))
                                                                  (rule "replaceKnownSelect_taclet1111010200101000000000_44" (formula "64") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1111010200101000000000_45" (formula "64") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "ifthenelse_split" (formula "82") (term "0"))
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "84") (term "1,0") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "replace_known_left" (formula "83") (term "0,0,0") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "applyEqReverse" (formula "85") (term "1,1") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "replace_known_left" (formula "92") (term "0,0,1") (ifseqformula "82"))
                                                                     (builtin "One Step Simplification" (formula "92"))
                                                                     (rule "orRight" (formula "92"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "92") (ifseqformula "91"))
                                                                     (rule "close" (formula "92") (ifseqformula "68"))
                                                                  )
                                                                  (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                                     (rule "hideAuxiliaryEq" (formula "82"))
                                                                     (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "82"))
                                                                     (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "89"))
                                                                     (builtin "One Step Simplification" (formula "93"))
                                                                     (rule "allLeft" (formula "65") (inst "t=i_47"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "65") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "65") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "65") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "notLeft" (formula "65"))
                                                                     (rule "pullOutSelect" (formula "89") (term "0") (inst "selectSK=arr_343"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")) (ifInst ""  (formula "100")))
                                                                     (rule "applyEqReverse" (formula "90") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "90") (ifseqformula "4"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "false_right" (formula "72"))
                                                      (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                                      (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "55") (term "0,1"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "true_left" (formula "55"))
                                                      (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "58") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "58") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "notLeft" (formula "58"))
                                                      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_312"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "76"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                                      (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                                      (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "replace_known_right" (formula "64") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "73") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                                                      (rule "ifthenelse_negated" (formula "65") (term "0"))
                                                      (rule "ifthenelse_negated" (formula "64") (term "0"))
                                                      (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_0_2)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "58") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "58") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "notLeft" (formula "58"))
                                                      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_313"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "77"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                      (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "71") (term "0") (ifseqformula "50") (ifseqformula "77"))
                                                      (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "71")))
                                                      (rule "ifthenelse_negated" (formula "63") (term "0"))
                                                      (rule "ifthenelse_negated" (formula "62") (term "0"))
                                                      (rule "ifthenelse_split" (formula "64") (term "0"))
                                                      (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                                         (rule "hideAuxiliaryEq" (formula "65"))
                                                         (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "65"))
                                                         (rule "hideAuxiliaryEq" (formula "65"))
                                                         (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "64"))
                                                         (builtin "One Step Simplification" (formula "73"))
                                                         (rule "orRight" (formula "73"))
                                                         (rule "orRight" (formula "73"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "70"))
                                                         (rule "close" (formula "74") (ifseqformula "50"))
                                                      )
                                                      (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                         (rule "hideAuxiliaryEq" (formula "64"))
                                                         (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "70"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "74") (term "0,0,0") (ifseqformula "70"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                         (rule "ifthenelse_split" (formula "63") (term "0"))
                                                         (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                            (rule "hideAuxiliaryEq" (formula "64"))
                                                            (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "applyEqReverse" (formula "66") (term "1,1") (ifseqformula "64"))
                                                            (rule "hideAuxiliaryEq" (formula "64"))
                                                            (rule "replace_known_left" (formula "74") (term "0,0,1") (ifseqformula "63"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "orRight" (formula "74"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "72"))
                                                            (rule "close" (formula "74") (ifseqformula "51"))
                                                         )
                                                         (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                            (rule "hideAuxiliaryEq" (formula "63"))
                                                            (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "75") (term "0,0,1") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                            (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_314"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "95")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "39"))
                                                            (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "25"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "95")) (ifInst ""  (formula "25")))
                                                            (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                            (rule "hideAuxiliaryEq" (formula "57"))
                                                            (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "ifthenelse_split" (formula "67") (term "0"))
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "68"))
                                                               (rule "hideAuxiliaryEq" (formula "68"))
                                                               (rule "replace_known_left" (formula "78") (term "1,0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "orRight" (formula "78"))
                                                               (rule "referencedObjectIsCreatedRight" (formula "78") (ifseqformula "75"))
                                                               (rule "close" (formula "78") (ifseqformula "53"))
                                                            )
                                                            (branch " (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "replace_known_right" (formula "78") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_315"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "99")) (ifInst ""  (formula "25")))
                                                               (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_316"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                               (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                               (rule "hideAuxiliaryEq" (formula "52"))
                                                               (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=arr_317"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "92")) (ifInst ""  (formula "9")))
                                                               (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                                               (rule "hideAuxiliaryEq" (formula "50"))
                                                               (rule "allLeft" (formula "33") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allLeft" (formula "49") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=arr_318"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "102")) (ifInst ""  (formula "26")))
                                                               (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "hideAuxiliaryEq" (formula "49"))
                                                               (rule "allLeft" (formula "51") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "0,0,0") (inst "selectSK=arr_319"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "93")) (ifInst ""  (formula "10")))
                                                               (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "48") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "2,0,1") (inst "selectSK=arr_320"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")))
                                                               (rule "applyEqReverse" (formula "49") (term "2,0,1") (ifseqformula "48"))
                                                               (rule "hideAuxiliaryEq" (formula "48"))
                                                               (rule "pullOutSelect" (formula "48") (term "1,0,1") (inst "selectSK=arr_321"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "90")) (ifInst ""  (formula "91")))
                                                               (rule "applyEqReverse" (formula "49") (term "1,0,1") (ifseqformula "48"))
                                                               (rule "hideAuxiliaryEq" (formula "48"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_322"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "104")) (ifInst ""  (formula "25")))
                                                               (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                               (rule "hideAuxiliaryEq" (formula "55"))
                                                               (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet11110200101000000000_36" (formula "51") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet11110200101000000000_37" (formula "51") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "68")))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_323"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "96")) (ifInst ""  (formula "10")))
                                                               (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                               (rule "hideAuxiliaryEq" (formula "53"))
                                                               (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet200101000000000_21" (formula "66") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet200101000000000_22" (formula "66") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "66") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "66") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "66") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                                                               (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "pullOutSelect" (formula "66") (term "2,0,1") (inst "selectSK=arr_324"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "91")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "44"))
                                                               (rule "replace_known_right" (formula "66") (term "1,0,0,0") (ifseqformula "90"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "89")))
                                                               (rule "applyEqReverse" (formula "67") (term "2,0,1") (ifseqformula "66"))
                                                               (rule "hideAuxiliaryEq" (formula "66"))
                                                               (rule "allLeft" (formula "49") (inst "t=i_0_2"))
                                                               (rule "replaceKnownSelect_taclet111110200101000000000_51" (formula "49") (term "2,0,1"))
                                                               (rule "replaceKnownSelect_taclet111110200101000000000_41" (formula "49") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110200101000000000_52" (formula "49") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110200101000000000_42" (formula "49") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_325"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "99")) (ifInst ""  (formula "9")))
                                                               (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                               (rule "hideAuxiliaryEq" (formula "55"))
                                                               (rule "allLeft" (formula "21") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "52")))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "70")))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "allLeft" (formula "24") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "57")))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "allLeft" (formula "42") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "allLeft" (formula "71") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_326"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "64"))
                                                               (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "109")))
                                                               (rule "replaceKnownSelect_taclet111110200101000000000_45" (formula "71") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110200101000000000_46" (formula "71") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "45"))
                                                               (rule "replace_known_left" (formula "71") (term "0,0,0,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "allLeft" (formula "30") (inst "t=i_0_2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "55")))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_0_2)"))
                                                               (rule "replaceKnownSelect_taclet111110200101000000000_51" (formula "60") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111110200101000000000_52" (formula "60") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "ifthenelse_split" (formula "78") (term "0"))
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "80") (term "1,1") (ifseqformula "79"))
                                                                  (rule "hideAuxiliaryEq" (formula "79"))
                                                                  (rule "replace_known_left" (formula "90") (term "1,1") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "90") (ifseqformula "88"))
                                                                  (rule "close" (formula "90") (ifseqformula "64"))
                                                               )
                                                               (branch " (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>).<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "79") (term "1,1") (ifseqformula "78"))
                                                                  (rule "hideAuxiliaryEq" (formula "78"))
                                                                  (rule "replace_known_right" (formula "90") (term "1,1") (ifseqformula "83"))
                                                                  (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "78"))
                                                                  (rule "polySimp_addComm1" (formula "78") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                                                  (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "78") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                                                  (rule "mul_literals" (formula "78") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "78") (term "1,1"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0,1,0") (ifseqformula "64"))
                                                                  (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "88"))
                                                                  (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "91"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "91") (ifseqformula "89"))
                                                                  (rule "close" (formula "91") (ifseqformula "64"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " forall int j; ( j <= -1 | j >= res_min_1 | (result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[j]@heapAfter_retrieveSortedMessages = (result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>)[j]@heapAfter_retrieveSortedMessages) & result_5[1 + i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>.length >= result_5[i_0_2]@anon_heap_retrieveSortedMessages<<anonHeapFunction>>.length"
                                                (rule "andLeft" (formula "59"))
                                                (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "62"))
                                                (rule "applyEq" (formula "60") (term "1") (ifseqformula "62"))
                                                (rule "applyEq" (formula "63") (term "1,0,1,1") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "notLeft" (formula "63"))
                                                (rule "inEqSimp_leqRight" (formula "63"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "shift_paren_or" (formula "64") (term "1,1"))
                                                (rule "shift_paren_or" (formula "64") (term "0,1"))
                                                (rule "shift_paren_or" (formula "64") (term "0,1,1"))
                                                (rule "shift_paren_or" (formula "64") (term "0,0,1"))
                                                (rule "shift_paren_and" (formula "64"))
                                                (rule "cut_direct" (formula "63") (term "0"))
                                                (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "andRight" (formula "64"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "64") (inst "sk=i_0_45"))
                                                      (rule "orRight" (formula "64"))
                                                      (rule "orRight" (formula "64"))
                                                      (rule "inEqSimp_leqRight" (formula "66"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "66"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "66"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_302"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_303"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_304"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                                      (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "71"))
                                                      (rule "replace_known_right" (formula "68") (term "0,0,0,1,0") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                                                      (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                      (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                      (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "true_left" (formula "58"))
                                                      (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_305"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                      (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "72"))
                                                      (rule "replace_known_right" (formula "69") (term "0,0,0,1") (ifseqformula "67"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")))
                                                      (rule "arrayLengthIsAShort" (formula "64") (term "0"))
                                                      (builtin "One Step Simplification" (formula "64"))
                                                      (rule "true_left" (formula "64"))
                                                      (rule "arrayLengthNotNegative" (formula "64") (term "0"))
                                                      (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "68"))
                                                      (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "true_left" (formula "68"))
                                                      (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_45)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=arr_306"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "75"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                      (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "69") (term "0") (ifseqformula "53") (ifseqformula "75"))
                                                      (rule "allLeft" (formula "61") (inst "t=i_0_45"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "61") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "61") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "notLeft" (formula "61"))
                                                      (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=arr_307"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "75"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                      (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "69") (term "0") (ifseqformula "53") (ifseqformula "76"))
                                                      (rule "allLeft" (formula "58") (inst "t=i_0_45"))
                                                      (rule "replaceKnownSelect_taclet001200101000000000_27" (formula "58") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet001200101000000000_25" (formula "58") (term "2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001200101000000000_28" (formula "58") (term "1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001200101000000000_26" (formula "58") (term "2,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "58") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "58") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "andRight" (formula "74"))
                                                      (branch "Case 1"
                                                         (rule "orRight" (formula "74"))
                                                         (rule "orRight" (formula "74"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "73"))
                                                         (rule "close" (formula "75") (ifseqformula "53"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "orRight" (formula "74"))
                                                         (rule "orRight" (formula "74"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "72"))
                                                         (rule "close" (formula "75") (ifseqformula "53"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "64"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "64") (inst "sk=i_44"))
                                                         (rule "orRight" (formula "64"))
                                                         (rule "orRight" (formula "64"))
                                                         (rule "inEqSimp_leqRight" (formula "66"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "66"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "66"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_298"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                         (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_299"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                         (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                         (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "true_left" (formula "58"))
                                                         (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                         (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "61") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_300"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "71"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                         (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "71"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,1") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                                                         (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "61") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "61") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "notLeft" (formula "61"))
                                                         (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_301"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                         (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "72"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,0,1,0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")))
                                                         (rule "arrayLengthNotNegative" (formula "64") (term "0"))
                                                         (rule "arrayLengthIsAShort" (formula "65") (term "0"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "true_left" (formula "65"))
                                                         (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "68"))
                                                         (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "true_left" (formula "68"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_44"))
                                                         (rule "replaceKnownSelect_taclet0101200101000000000_29" (formula "45") (term "2,0,1"))
                                                         (rule "replaceKnownSelect_taclet0101200101000000000_26" (formula "45") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101200101000000000_30" (formula "45") (term "2,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101200101000000000_27" (formula "45") (term "1,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "allLeft" (formula "51") (inst "t=add(Z(1(#)), i_44)"))
                                                         (rule "replaceKnownSelect_taclet0101200101000000000_29" (formula "51") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101200101000000000_30" (formula "51") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,1,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "51") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "51") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "notLeft" (formula "51"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_44"))
                                                         (rule "replaceKnownSelect_taclet0101200101000000000_26" (formula "51") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101200101000000000_27" (formula "51") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "notLeft" (formula "51"))
                                                         (rule "andRight" (formula "74"))
                                                         (branch "Case 1"
                                                            (rule "orRight" (formula "74"))
                                                            (rule "orRight" (formula "74"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "72"))
                                                            (rule "close" (formula "75") (ifseqformula "54"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "orRight" (formula "74"))
                                                            (rule "orRight" (formula "74"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "75") (ifseqformula "73"))
                                                            (rule "close" (formula "75") (ifseqformula "54"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "64"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "64") (inst "sk=i_43"))
                                                            (rule "orRight" (formula "64"))
                                                            (rule "notRight" (formula "65"))
                                                            (rule "orRight" (formula "65"))
                                                            (rule "inEqSimp_leqRight" (formula "65"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "66"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_295"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "53") (ifseqformula "70"))
                                                            (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                            (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_296"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "71"))
                                                            (rule "replace_known_right" (formula "68") (term "0,1,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                                                            (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_297"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "72"))
                                                            (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")))
                                                            (rule "arrayLengthNotNegative" (formula "64") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "65") (term "0"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "true_left" (formula "67"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "applyEq" (formula "67") (term "0") (ifseqformula "68"))
                                                            (rule "allLeft" (formula "61") (inst "t=i_43"))
                                                            (rule "replaceKnownSelect_taclet01101200101000000000_25" (formula "61") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01101200101000000000_26" (formula "61") (term "0,0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "61") (term "0,0,0,0") (ifseqformula "53") (ifseqformula "75"))
                                                            (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "61") (term "0"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "closeFalse" (formula "61"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "64") (inst "sk=i_42"))
                                                            (rule "orRight" (formula "64"))
                                                            (rule "notRight" (formula "65"))
                                                            (rule "orRight" (formula "65"))
                                                            (rule "inEqSimp_leqRight" (formula "65"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "66"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_291"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "73"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "40") (ifseqformula "71"))
                                                            (rule "allLeft" (formula "58") (inst "t=i_0_2"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "58") (term "0,1"))
                                                            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "allLeft" (formula "61") (inst "t=i_0_2"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_292"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "71"))
                                                            (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                                                            (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_0_2)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                            (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1") (ifseqformula "10"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "61") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "61") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "61"))
                                                            (rule "notLeft" (formula "61"))
                                                            (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_293"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "72"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                                            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "narrowSelectArrayType" (formula "67") (term "0") (ifseqformula "53") (ifseqformula "72"))
                                                            (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "67"))
                                                            (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")))
                                                            (rule "arrayLengthNotNegative" (formula "64") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "65") (term "0"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "true_left" (formula "67"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "applyEq" (formula "67") (term "0") (ifseqformula "68"))
                                                            (rule "allLeft" (formula "50") (inst "t=i_42"))
                                                            (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "50") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "50") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "notLeft" (formula "50"))
                                                            (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=arr_294"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                                                            (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "70") (ifseqformula "4"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "false_right" (formula "64"))
                                                   (rule "allLeft" (formula "54") (inst "t=i_0_2"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "54") (term "0,1"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "allLeft" (formula "57") (inst "t=i_0_2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "57") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "57") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "57") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_289"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "67"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                                   (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "49") (ifseqformula "68"))
                                                   (rule "replace_known_right" (formula "65") (term "0,0,0,1,0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "63")))
                                                   (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_0_2)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                   (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "57") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "57") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "57") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_290"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                                   (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "49") (ifseqformula "69"))
                                                   (rule "replace_known_right" (formula "66") (term "0,0,0,1") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "63")))
                                                   (rule "arrayLengthIsAShort" (formula "60") (term "0"))
                                                   (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "arrayLengthNotNegative" (formula "60") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "63") (term "0"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "64"))
                                                   (rule "arrayLengthIsAShort" (formula "64") (term "0"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "andRight" (formula "68"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "68"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "69") (ifseqformula "66"))
                                                      (rule "close" (formula "69") (ifseqformula "49"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "orRight" (formula "68"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "69") (ifseqformula "65"))
                                                      (rule "close" (formula "69") (ifseqformula "49"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Exceptional Post (min)"
                                          (builtin "One Step Simplification" (formula "56"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0") (ifseqformula "34"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "55") (term "1,1,0,0,0"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "55") (term "1,1,0,0,0,1"))
                                          (rule "translateJavaAddInt" (formula "58") (term "0,2,2,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "1,1"))
                                          (rule "andLeft" (formula "56"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "58"))
                                          (rule "andLeft" (formula "57"))
                                          (rule "andLeft" (formula "59"))
                                          (rule "notLeft" (formula "57"))
                                          (rule "close" (formula "61") (ifseqformula "60"))
                                       )
                                       (branch "Pre (min)"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "wellFormedAnonEQ" (formula "56") (ifseqformula "47"))
                                          (rule "wellFormedAnonEQ" (formula "56") (term "0") (ifseqformula "34"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "55") (term "1,1,0,0,0"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2)))))_0101000000000_19" (formula "55") (term "1,1,0,0,0,1"))
                                          (rule "translateJavaAddInt" (formula "57") (term "0,2,2,0"))
                                          (rule "translateJavaSubInt" (formula "3") (term "1,1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "eqSymm" (formula "56") (term "1,0,1,1,0,0"))
                                          (rule "eqSymm" (formula "56") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "11")) (ifInst ""  (formula "34")))
                                          (rule "closeTrue" (formula "57"))
                                       )
                                    )
                                    (branch "Exceptional Post (compare)"
                                       (builtin "One Step Simplification" (formula "2"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "1") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,0") (ifseqformula "46"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,0") (ifseqformula "33"))
                                       (rule "translateJavaAddInt" (formula "55") (term "0,2,2,0"))
                                       (rule "translateJavaSubInt" (formula "2") (term "1,1"))
                                       (rule "andLeft" (formula "53"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "notLeft" (formula "54"))
                                       (rule "close" (formula "57") (ifseqformula "56"))
                                    )
                                    (branch "Pre (compare)"
                                       (builtin "One Step Simplification" (formula "53"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "1") (term "0"))
                                       (rule "wellFormedAnonEQ" (formula "53") (term "0,0,1") (ifseqformula "46"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,1") (ifseqformula "46"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,1") (ifseqformula "46"))
                                       (rule "wellFormedAnonEQ" (formula "53") (term "0,0,0,1") (ifseqformula "33"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,1") (ifseqformula "33"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,1") (ifseqformula "33"))
                                       (rule "translateJavaAddInt" (formula "54") (term "0,2,2,0"))
                                       (rule "translateJavaSubInt" (formula "2") (term "1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "replace_known_left" (formula "54") (term "0,0,0,0,1") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "33")) (ifInst ""  (formula "46")))
                                       (rule "polySimp_elimSub" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "55") (term "0,2,2,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1"))
                                       (rule "inEqSimp_leqRight" (formula "55"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "pullOutSelect" (formula "55") (term "1,0,1,1,0,1") (inst "selectSK=arr_121"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "0,0,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "55") (term "0,0,1,0") (inst "selectSK=arr_122"))
                                       (rule "applyEq" (formula "56") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "0,0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "56") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "0,0,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "74") (term "0") (inst "i=i") (inst "i_0=i_0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "75")))
                                       (rule "wellFormedAnonEQ" (formula "1") (term "1,0") (ifseqformula "49"))
                                       (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "36"))
                                       (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0"))
                                       (rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,1,0,0"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "55") (term "1,1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "11")) (ifInst ""  (formula "34")))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "55") (term "0,2,2,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "55") (term "0,2,2,0,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1"))
                                       (rule "nonNull" (formula "55") (term "1,1,1,1") (inst "i=i"))
                                       (rule "greater_literals" (formula "55") (term "0,1,1,1,1,1"))
                                       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "60")))
                                       (rule "sub_literals" (formula "55") (term "2,1,0,1,1,1,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,1,1,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,1,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,1,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,1,1,1,1"))
                                       (rule "nonNull" (formula "55") (term "0,1,1,1") (inst "i=i"))
                                       (rule "greater_literals" (formula "55") (term "0,1,0,1,1,1"))
                                       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "59")))
                                       (rule "sub_literals" (formula "55") (term "2,1,0,0,1,1,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,1,1"))
                                       (rule "nnf_imp2or" (formula "55") (term "0,0,1"))
                                       (rule "nnf_imp2or" (formula "55") (term "0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "55") (term "0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "1,0,0,0,0,1"))
                                       (rule "nnf_imp2or" (formula "55") (term "0,1,1,1,1"))
                                       (rule "nnf_imp2or" (formula "55") (term "0,0,1,1,1"))
                                       (rule "nnf_notAnd" (formula "55") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "55") (term "1,0,0,0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "55") (term "0,0,1,1,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,1,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,1,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,1,1,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,1,1,1,1"))
                                       (rule "add_zero_left" (formula "55") (term "0,0,1,0,0,1,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,1,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1,1,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0,1,1,1,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,1,1,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,0,1,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "1,0,0,0,1,1,1,1"))
                                       (rule "nnf_notAnd" (formula "55") (term "0,0,0,1,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "55") (term "0,0,0,0,1,1,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,0,1,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "1,0,0,0,0,1,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,1,1,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,1,1,1"))
                                       (rule "add_zero_left" (formula "55") (term "0,0,1,0,0,0,1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,1,1"))
                                       (rule "commute_or_2" (formula "56") (term "1,0,1"))
                                       (rule "commute_or_2" (formula "56") (term "1,1,1"))
                                       (rule "shift_paren_or" (formula "56") (term "0,1"))
                                       (rule "shift_paren_or" (formula "56") (term "1,1"))
                                       (rule "shift_paren_or" (formula "56") (term "0,0,1"))
                                       (rule "shift_paren_or" (formula "56") (term "0,1,1"))
                                       (rule "shift_paren_and" (formula "56"))
                                       (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "arrayLengthIsAShort" (formula "33") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "54") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "true_left" (formula "54"))
                                       (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "41") (term "1,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "arrayLengthNotNegative" (formula "33") (term "1,1,0"))
                                       (rule "arrayLengthNotNegative" (formula "54") (term "1,1,0"))
                                       (rule "allLeft" (formula "52") (inst "t=i_0_2"))
                                       (rule "replaceKnownQuery_verif_selectvoting_system_core_ConservativeExtension_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(i_0_2)),byte[]_select(heapAfter_retrieveSortedMessages,result_5,arr(add(Z(1(#)),i_0_2))))_101000000000_18" (formula "52") (term "0,1"))
                                       (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "allLeft" (formula "55") (inst "t=i_0_2"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,1"))
                                       (rule "leq_literals" (formula "55") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "55") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "notLeft" (formula "55"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_123"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "61"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                       (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "47") (ifseqformula "61"))
                                       (rule "replace_known_right" (formula "58") (term "0,0,0,1,0") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "56")))
                                       (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_0_2)"))
                                       (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                       (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                       (rule "leq_literals" (formula "55") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "notLeft" (formula "55"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_124"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "62"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                       (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "56") (term "0") (ifseqformula "47") (ifseqformula "62"))
                                       (rule "replace_known_right" (formula "59") (term "0,0,0,1") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                       (rule "cut_direct" (formula "58") (term "0"))
                                       (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) TRUE"
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "andRight" (formula "59"))
                                          (branch "Case 1"
                                             (rule "allRight" (formula "59") (inst "sk=i_0_0"))
                                             (rule "orRight" (formula "59"))
                                             (rule "orRight" (formula "59"))
                                             (rule "inEqSimp_leqRight" (formula "61"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "60"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "61"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_129"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_130"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "51"))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "orRight" (formula "63"))
                                             (rule "orRight" (formula "63"))
                                             (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "61"))
                                             (rule "close" (formula "64") (ifseqformula "52"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "59"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "59") (inst "sk=i_2"))
                                                (rule "orRight" (formula "59"))
                                                (rule "orRight" (formula "59"))
                                                (rule "inEqSimp_leqRight" (formula "61"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "60"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "61"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_127"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_128"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "2,0") (ifseqformula "51"))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "63") (term "1,0,1") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "orRight" (formula "63"))
                                                (rule "orRight" (formula "63"))
                                                (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "62"))
                                                (rule "close" (formula "64") (ifseqformula "52"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "59"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "59") (inst "sk=i_1"))
                                                   (rule "orRight" (formula "59"))
                                                   (rule "notRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "inEqSimp_leqRight" (formula "60"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "61"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_126"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "51") (ifseqformula "65"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "2,0") (ifseqformula "51"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "62"))
                                                   (rule "close" (formula "64") (ifseqformula "52"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "59") (inst "sk=i_0"))
                                                   (rule "orRight" (formula "59"))
                                                   (rule "notRight" (formula "60"))
                                                   (rule "orRight" (formula "60"))
                                                   (rule "inEqSimp_leqRight" (formula "60"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "61"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_125"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "41"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "38") (ifseqformula "66"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "2,0") (ifseqformula "51"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "64") (ifseqformula "62"))
                                                   (rule "close" (formula "64") (ifseqformula "52"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: seqPerm(array2seq2d(heapAfter_retrieveSortedMessages, result_5), array2seq2d(heapAfter_retrieveSortedMessages, result_2)) FALSE"
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "1,0") (ifseqformula "47"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "referencedObjectIsCreatedRight" (formula "61") (ifseqformula "57"))
                                          (rule "close" (formula "61") (ifseqformula "48"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "51") (userinteraction))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "51") (inst "sk=i_38") (userinteraction))
                                    (rule "impRight" (formula "51") (userinteraction))
                                    (rule "andLeft" (formula "1") (userinteraction))
                                    (rule "andLeft" (formula "1") (userinteraction))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3") (userinteraction))
                                    (rule "translateJavaSubInt" (formula "2") (term "1") (userinteraction))
                                    (rule "instAll" (formula "2") (term "0") (ifseqformula "37") (userinteraction))
                                    (rule "orLeft" (formula "2") (userinteraction))
                                    (branch "i_38 <= -1 | i_38 >= -1 + result_2.length"
                                       (rule "translateJavaAddInt" (formula "54") (term "0,2,2,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "54") (term "0,2,2,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1"))
                                       (rule "inEqSimp_leqRight" (formula "54"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                       (rule "leq_literals" (formula "3") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " verif.selectvoting.system.core.Utils.compare(result_2[i_38]@heapAfter_sort, result_2[ 1 + i_38]@heapAfter_sort) @heapAfter_sort <= 0"
                                       (builtin "Evaluate Query" (formula "2") (term "0") (newnames "a1,a2,callee,queryResult,res_compare"))
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "variableDeclaration" (formula "54") (term "1") (newnames "queryResult") (userinteraction))
                                       (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_compare,result_6,exc_6") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                       (branch "Post (compare)"
                                          (rule "assignment" (formula "55") (term "1") (userinteraction))
                                          (rule "methodCallEmpty" (formula "55") (term "1,1") (userinteraction))
                                          (rule "emptyModality" (formula "55") (term "1,1") (userinteraction))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "notRight" (formula "55") (userinteraction))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "3") (term "0") (userinteraction))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "andLeft" (formula "55") (userinteraction))
                                          (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "1") (userinteraction))
                                          (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "3") (userinteraction))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")))
                                          (builtin "Evaluate Query" (formula "57") (term "0") (newnames "a1_0,a2_0,callee,queryResult_0,res_compare_0"))
                                          (rule "notLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "queryResult_0") (userinteraction))
                                          (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_compare_0,result_7,exc_7") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::compare([B,[B)].JML normal_behavior operation contract.0"))
                                          (branch "Post (compare)"
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "assignment" (formula "58") (term "1") (userinteraction))
                                             (rule "methodCallEmpty" (formula "58") (term "1,1") (userinteraction))
                                             (rule "emptyModality" (formula "58") (term "1,1") (userinteraction))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "notRight" (formula "58") (userinteraction))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "1") (userinteraction))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#))))))_01011000000000_19" (formula "59") (term "0") (userinteraction))
                                             (rule "replace_known_right" (formula "58") (term "1,0,1") (ifseqformula "59") (userinteraction))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "andLeft" (formula "58"))
                                             (rule "andLeft" (formula "59"))
                                             (rule "notLeft" (formula "59"))
                                             (rule "orRight" (formula "59"))
                                             (builtin "Evaluate Query" (formula "57") (term "1,1,0,0,0") (newnames "a,b,callee,queryResult_1,res_min"))
                                             (rule "notLeft" (formula "1") (userinteraction))
                                             (rule "variableDeclaration" (formula "59") (term "1") (newnames "queryResult_1") (userinteraction))
                                             (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_min,result_8,exc_8") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                             (branch "Post (min)"
                                                (rule "assignment" (formula "60") (term "1") (userinteraction))
                                                (rule "methodCallEmpty" (formula "60") (term "1,1") (userinteraction))
                                                (rule "emptyModality" (formula "60") (term "1,1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "notRight" (formula "60") (userinteraction))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_38))),length(byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38)))))_001011000000000_20" (formula "58") (term "1,1,0,0,0") (userinteraction))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_38))),length(byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38)))))_001011000000000_20" (formula "58") (term "1,1,0,0,0,1") (userinteraction))
                                                (rule "andLeft" (formula "60"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "andLeft" (formula "61"))
                                                (builtin "Evaluate Query" (formula "63") (term "1,1,0,0") (newnames "a_0,b_0,callee,queryResult_2,res_min_0"))
                                                (rule "notLeft" (formula "1") (userinteraction))
                                                (rule "variableDeclaration" (formula "63") (term "1") (newnames "queryResult_2") (userinteraction))
                                                (builtin "Use Operation Contract" (formula "63") (newnames "heapBefore_min_0,result_9,exc_9") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::min(int,int)].JML normal_behavior operation contract.0"))
                                                (branch "Post (min)"
                                                   (rule "assignment" (formula "64") (term "1") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "methodCallEmpty" (formula "64") (term "1") (userinteraction))
                                                   (rule "emptyModality" (formula "64") (term "1") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "notRight" (formula "64") (userinteraction))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "65") (term "1,1,0,0") (userinteraction))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "66") (term "1,1,0,0,0") (userinteraction))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "andLeft" (formula "64"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "orLeft" (formula "59") (userinteraction))
                                                   (branch "exists int i; ( 0 <= i & i < res_min & ( result_2[i_38][i]@heapAfter_sort < result_2[1 + i_38][i]@heapAfter_sort & forall int j; ( 0 <= j & j < i -> result_2[i_38][j]@heapAfter_sort = result_2[1 + i_38][j]@heapAfter_sort)))"
                                                      (rule "exLeft" (formula "59") (inst "sk=i_41") (userinteraction))
                                                      (rule "instEx" (formula "59") (term "1,0,0") (ifseqformula "67") (userinteraction))
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,1,1,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,1,1,1,0,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "69") (term "0,2,1,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "69") (term "0,2,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,1,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0"))
                                                      (rule "andLeft" (formula "59"))
                                                      (rule "andLeft" (formula "59"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "eqSymm" (formula "66") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "68") (term "1"))
                                                      (rule "eqSymm" (formula "66") (term "0,1"))
                                                      (rule "eqSymm" (formula "65") (term "1"))
                                                      (rule "eqSymm" (formula "71") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "72") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "70") (term "1,0,1,1"))
                                                      (rule "eqSymm" (formula "69") (term "0,1"))
                                                      (rule "eqSymm" (formula "69") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "62") (term "1,0"))
                                                      (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "70"))
                                                      (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,2,1,1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "72") (term "0,2,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "68") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,2,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "72") (term "0,2,1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0,2,1,0,1,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0,2,1,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "61"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "62"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "71") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "70") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "70") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "71") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6"))
                                                      (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "66") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "60"))
                                                      (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "73") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "69") (term "0"))
                                                      (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "67") (term "1,0,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "70") (term "1,0,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "62") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "70") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "70") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "71") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "pullOutSelect" (formula "67") (term "0,1,0,1,1") (inst "selectSK=arr_439"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "63") (term "1,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "62") (term "1,1,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "66") (term "0,0,1") (ifseqformula "67"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                                      (rule "applyEqReverse" (formula "68") (term "0,1,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,1,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "62") (term "1,1,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,1") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "pullOutSelect" (formula "67") (term "0,0,0,1,1") (inst "selectSK=arr_440"))
                                                      (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0,1") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "63") (term "1,0,1,0") (ifseqformula "67"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0,1,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0,1") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0,1,0") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "pullOutSelect" (formula "69") (term "0,0,1") (inst "selectSK=arr_441"))
                                                      (rule "applyEq" (formula "71") (term "0,1,0,1,1") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "74") (term "0,1,1") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "74") (term "1,1,1,0,0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "73") (term "1,1,1,0,1,0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "72") (term "1,1,1,0,1,1") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "70") (term "0,1,0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "73") (term "1,1,1,0,1,1,0") (ifseqformula "69"))
                                                      (rule "applyEq" (formula "72") (term "1,1,1,0,1") (ifseqformula "69"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "78")))
                                                      (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "69") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "69") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "79"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "40")))
                                                      (rule "applyEqReverse" (formula "73") (term "1,1,1,0,1,0") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "74") (term "1,1,1,0,0") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,1,0,1,1") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "70") (term "0,0,1") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,1,1,0") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "74") (term "0,1,1") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "72") (term "1,1,1,0,1") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "70") (term "0,1,0") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "72") (term "1,1,1,0,1,1") (ifseqformula "69"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,1,1,0,1,1,0") (ifseqformula "69"))
                                                      (rule "hideAuxiliaryEq" (formula "69"))
                                                      (rule "pullOutSelect" (formula "72") (term "1,0,1,0,1,1,0") (inst "selectSK=arr_442"))
                                                      (rule "applyEq" (formula "70") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "71") (term "0,0,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "73") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "71") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "72") (term "1,0,1,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "71") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "74") (term "0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "74") (term "1,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "72") (term "1,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                      (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "1") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                      (rule "eqSymm" (formula "73") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "71") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "72") (term "1,0,1,1"))
                                                      (rule "eqSymm" (formula "74") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                      (rule "applyEqReverse" (formula "74") (term "1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,1,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "72") (term "1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "74") (term "0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "72") (term "1,1,1,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "73") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "73") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "70") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "71") (term "1,0,1,1"))
                                                      (rule "eqSymm" (formula "72") (term "1,0,1,1,0"))
                                                      (rule "pullOutSelect" (formula "62") (term "1,1") (inst "selectSK=arr_443"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "62"))
                                                      (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=arr_444"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "pullOutSelect" (formula "73") (term "1,1,0,1") (inst "selectSK=arr_445"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet000001011000000000_30" (formula "1") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
                                                      (rule "pullOutSelect" (formula "74") (term "0,0,1") (inst "selectSK=arr_446"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet000001011000000000_31" (formula "1") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
                                                      (rule "nnf_imp2or" (formula "67") (term "0"))
                                                      (rule "nnf_ex2all" (formula "76"))
                                                      (rule "nnf_imp2or" (formula "77") (term "0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_imp2or" (formula "76") (term "0,1,1"))
                                                      (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "68") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "68") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "77") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0"))
                                                      (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "77") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "76") (term "0,0,1,1"))
                                                      (rule "inEqSimp_notGeq" (formula "76") (term "0,0,0,1,1"))
                                                      (rule "times_zero_1" (formula "76") (term "1,0,0,0,0,0,1,1"))
                                                      (rule "add_literals" (formula "76") (term "0,0,0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,1,1"))
                                                      (rule "mul_literals" (formula "76") (term "1,0,0,0,1,1"))
                                                      (rule "inEqSimp_notLeq" (formula "76") (term "1,0,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,0,1,1"))
                                                      (rule "add_literals" (formula "76") (term "0,0,0,1,0,0,1,1"))
                                                      (rule "add_zero_left" (formula "76") (term "0,0,1,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,1,1"))
                                                      (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                      (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                      (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthNotNegative" (formula "61") (term "1,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "59") (term "1,1,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "true_left" (formula "59"))
                                                      (rule "equiv_left" (formula "72"))
                                                      (branch "Case 1"
                                                         (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "replace_known_left" (formula "79") (term "1") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "79"))
                                                         (rule "allRight" (formula "79") (inst "sk=j_17"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "78"))
                                                         (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "78"))
                                                         (rule "applyEq" (formula "75") (term "0") (ifseqformula "78"))
                                                         (rule "applyEq" (formula "74") (term "1") (ifseqformula "78"))
                                                         (rule "applyEqRigid" (formula "74") (term "1") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "75"))
                                                         (rule "applyEqRigid" (formula "80") (term "0,0") (ifseqformula "75"))
                                                         (rule "replace_known_left" (formula "80") (term "0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "80"))
                                                         (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "75"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "79") (term "1,0,1,1") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "79"))
                                                         (rule "notLeft" (formula "79"))
                                                         (rule "replace_known_right" (formula "76") (term "0") (ifseqformula "79"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "notLeft" (formula "76"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "78") (term "1") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "8") (term "1") (ifseqformula "76"))
                                                         (rule "applyEq" (formula "79") (term "1,0,1") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "79"))
                                                         (rule "false_right" (formula "79"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_528"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "45"))
                                                         (rule "eqSymm" (formula "80"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_529"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_530"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "47"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_531"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "ifthenelse_split" (formula "72") (term "0"))
                                                         (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "72"))
                                                            (rule "notLeft" (formula "73"))
                                                            (rule "notLeft" (formula "72"))
                                                            (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "72"))
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "72"))
                                                            (rule "hideAuxiliaryEq" (formula "72"))
                                                            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "82"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "80"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                            (rule "replace_known_right" (formula "8") (term "0,0,1,0,0") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "80")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "8") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "72"))
                                                            (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "72"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                                            (rule "mul_literals" (formula "72") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "71") (term "0"))
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "71"))
                                                               (rule "notLeft" (formula "71"))
                                                               (rule "notLeft" (formula "71"))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "71"))
                                                               (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,1,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "80")))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                               (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "80")))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "70"))
                                                               (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                               (rule "mul_literals" (formula "70") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "50") (term "0,1"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "55") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "55") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "81"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "ex_pull_out3" (formula "5") (term "0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "82") (term "1,1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "81") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "81") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0"))
                                                                  (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "74") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "true_left" (formula "74"))
                                                                  (rule "arrayLengthNotNegative" (formula "77") (term "0"))
                                                                  (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                                                  (rule "arrayLengthIsAShort" (formula "78") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "true_left" (formula "78"))
                                                                  (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                  (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "84") (term "1,1,0") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "eqSymm" (formula "83"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "82") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "82") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "82") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "82") (term "1,0"))
                                                                     (rule "mul_literals" (formula "82") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "82") (term "1,1,0"))
                                                                     (rule "replace_known_left" (formula "82") (term "0") (ifseqformula "68"))
                                                                     (builtin "One Step Simplification" (formula "82"))
                                                                     (rule "allRight" (formula "82") (inst "sk=j_21"))
                                                                     (rule "orRight" (formula "82"))
                                                                     (rule "orRight" (formula "82"))
                                                                     (rule "inEqSimp_leqRight" (formula "82"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "83"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "pullOutSelect" (formula "84") (term "1") (inst "selectSK=arr_610"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")) (ifInst ""  (formula "84")))
                                                                     (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=arr_611"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                     (rule "eqSymm" (formula "85"))
                                                                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")) (ifInst ""  (formula "81")))
                                                                     (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "eqSymm" (formula "84"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "69") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                     (rule "true_left" (formula "69"))
                                                                     (rule "commute_and_2" (formula "7") (term "0,0"))
                                                                     (rule "allLeft" (formula "67") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_612"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "90")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                                     (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "88"))
                                                                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                                     (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                     (rule "hideAuxiliaryEq" (formula "67"))
                                                                     (rule "narrowSelectArrayType" (formula "67") (term "0,0,0") (ifseqformula "59") (ifseqformula "89"))
                                                                     (rule "allLeft" (formula "31") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "allLeft" (formula "42") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "allLeft" (formula "39") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "allLeft" (formula "33") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "allLeft" (formula "73") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                     (rule "pullOutSelect" (formula "73") (term "0,0,0") (inst "selectSK=arr_613"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "68"))
                                                                     (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "114")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,0,0") (ifseqformula "55"))
                                                                     (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "55"))
                                                                     (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "114")) (ifInst ""  (formula "36")))
                                                                     (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "73"))
                                                                     (rule "hideAuxiliaryEq" (formula "73"))
                                                                     (rule "allLeft" (formula "46") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "allLeft" (formula "62") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_614"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "56"))
                                                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "106")) (ifInst ""  (formula "18")))
                                                                     (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                                     (rule "hideAuxiliaryEq" (formula "62"))
                                                                     (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_615"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "56"))
                                                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "116")) (ifInst ""  (formula "36")))
                                                                     (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                     (rule "hideAuxiliaryEq" (formula "61"))
                                                                     (rule "allLeft" (formula "74") (inst "t=i_38"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "74") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "74") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "74") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "74") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "74") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "74") (term "0,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "74") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "74"))
                                                                     (rule "pullOutSelect" (formula "74") (term "1,0,1") (inst "selectSK=arr_616"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "70"))
                                                                     (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "102")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,0") (ifseqformula "56"))
                                                                     (rule "replace_known_right" (formula "74") (term "0,0,0,0") (ifseqformula "100"))
                                                                     (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "101")))
                                                                     (rule "applyEqReverse" (formula "75") (term "1,0,1") (ifseqformula "74"))
                                                                     (rule "hideAuxiliaryEq" (formula "74"))
                                                                     (rule "pullOutSelect" (formula "74") (term "2,0,1") (inst "selectSK=arr_617"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "70"))
                                                                     (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "102")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,0") (ifseqformula "56"))
                                                                     (rule "replace_known_right" (formula "74") (term "1,0,0,0") (ifseqformula "101"))
                                                                     (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "100")))
                                                                     (rule "applyEqReverse" (formula "75") (term "2,0,1") (ifseqformula "74"))
                                                                     (rule "hideAuxiliaryEq" (formula "74"))
                                                                     (rule "allLeft" (formula "80") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "80") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "80") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "80") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "80") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "80") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "80") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "80") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                     (rule "pullOutSelect" (formula "80") (term "0,0,0") (inst "selectSK=arr_618"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "70"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "103")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,0,0") (ifseqformula "56"))
                                                                     (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "101"))
                                                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "102")))
                                                                     (rule "applyEqReverse" (formula "81") (term "0,0,0") (ifseqformula "80"))
                                                                     (rule "hideAuxiliaryEq" (formula "80"))
                                                                     (rule "narrowSelectArrayType" (formula "80") (term "0,0,0") (ifseqformula "69") (ifseqformula "102"))
                                                                     (rule "allLeft" (formula "62") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_619"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "56"))
                                                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "119")) (ifInst ""  (formula "36")))
                                                                     (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                                     (rule "hideAuxiliaryEq" (formula "62"))
                                                                     (rule "allLeft" (formula "54") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "allLeft" (formula "64") (inst "t=i_41"))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_55" (formula "64") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_56" (formula "64") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "79")))
                                                                     (rule "true_left" (formula "64"))
                                                                     (rule "allLeft" (formula "83") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "83") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "83") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "pullOutSelect" (formula "83") (term "0,0,0") (inst "selectSK=arr_620"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "72"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "106")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "57"))
                                                                     (rule "replace_known_right" (formula "83") (term "1,0,0,0") (ifseqformula "105"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "104")))
                                                                     (rule "applyEqReverse" (formula "84") (term "0,0,0") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "narrowSelectArrayType" (formula "83") (term "0,0,0") (ifseqformula "71") (ifseqformula "105"))
                                                                     (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "61") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "61") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "61") (term "0,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "61") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "pullOutSelect" (formula "61") (term "1,0,1") (inst "selectSK=arr_621"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "62") (term "1,0,1") (ifseqformula "61"))
                                                                     (rule "hideAuxiliaryEq" (formula "61"))
                                                                     (rule "pullOutSelect" (formula "61") (term "2,0,1") (inst "selectSK=arr_622"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                                                     (rule "applyEqReverse" (formula "62") (term "2,0,1") (ifseqformula "61"))
                                                                     (rule "hideAuxiliaryEq" (formula "61"))
                                                                     (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "62") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "62") (term "1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0,2,2,0,1"))
                                                                     (rule "add_literals" (formula "62") (term "0,0,2,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "62") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "62") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "62") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "62") (term "0,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "62") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "pullOutSelect" (formula "62") (term "2,0,1") (inst "selectSK=arr_623"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "109")) (ifInst ""  (formula "110")))
                                                                     (rule "applyEqReverse" (formula "63") (term "2,0,1") (ifseqformula "62"))
                                                                     (rule "hideAuxiliaryEq" (formula "62"))
                                                                     (rule "allLeft" (formula "68") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_624"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "115")) (ifInst ""  (formula "17")))
                                                                     (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                     (rule "hideAuxiliaryEq" (formula "68"))
                                                                     (rule "allLeft" (formula "70") (inst "t=i_41"))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_71" (formula "70") (term "0,0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_72" (formula "70") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_625"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "115")) (ifInst ""  (formula "18")))
                                                                     (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                     (rule "hideAuxiliaryEq" (formula "67"))
                                                                     (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "68") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_626"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "57"))
                                                                     (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "116")) (ifInst ""  (formula "17")))
                                                                     (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                     (rule "hideAuxiliaryEq" (formula "68"))
                                                                     (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "allLeft" (formula "56") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "allLeft" (formula "82") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_63" (formula "82") (term "1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_64" (formula "82") (term "1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "82") (term "0,2,2,0,1"))
                                                                     (rule "add_literals" (formula "82") (term "0,0,2,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "82") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "82") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "82") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "82") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "82") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "82") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "82") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "82") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "82") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "82") (term "0,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "82") (term "0,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "82"))
                                                                     (rule "pullOutSelect" (formula "82") (term "2,0,1") (inst "selectSK=arr_627"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "82") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "112")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "replace_known_right" (formula "82") (term "0,0,0,0") (ifseqformula "110"))
                                                                     (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "111")))
                                                                     (rule "applyEqReverse" (formula "83") (term "2,0,1") (ifseqformula "82"))
                                                                     (rule "hideAuxiliaryEq" (formula "82"))
                                                                     (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "67")))
                                                                     (rule "true_left" (formula "29"))
                                                                     (rule "allLeft" (formula "71") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "71") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "71") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "71") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "71") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "71") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "71") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_628"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "127")) (ifInst ""  (formula "35")))
                                                                     (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                                     (rule "hideAuxiliaryEq" (formula "71"))
                                                                     (rule "allLeft" (formula "71") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_629"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "127")) (ifInst ""  (formula "35")))
                                                                     (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                                     (rule "hideAuxiliaryEq" (formula "71"))
                                                                     (rule "allLeft" (formula "85") (inst "t=add(Z(1(#)), i_38)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "85") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "85") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "85") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "85") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "85") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "85") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "85") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "85") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                     (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_630"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "128")))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_59" (formula "85") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_60" (formula "85") (term "2,0"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                     (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                     (rule "hideAuxiliaryEq" (formula "85"))
                                                                     (rule "allLeft" (formula "71") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_631"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "127")) (ifInst ""  (formula "35")))
                                                                     (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                                     (rule "hideAuxiliaryEq" (formula "71"))
                                                                     (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "68")))
                                                                     (rule "true_left" (formula "29"))
                                                                     (rule "allLeft" (formula "29") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "85")))
                                                                     (rule "true_left" (formula "29"))
                                                                     (rule "allLeft" (formula "85") (inst "t=i_38"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                     (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_632"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "128")))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_67" (formula "85") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_68" (formula "85") (term "2,0"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                     (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                     (rule "hideAuxiliaryEq" (formula "85"))
                                                                     (rule "allLeft" (formula "83") (inst "t=i_41"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "83") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "83") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "83") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "83") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "83") (term "0,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "83") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "pullOutSelect" (formula "83") (term "2,0,1") (inst "selectSK=arr_633"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "113")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "replace_known_right" (formula "83") (term "1,0,0,0") (ifseqformula "112"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "111")))
                                                                     (rule "applyEqReverse" (formula "84") (term "2,0,1") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "pullOutSelect" (formula "83") (term "1,0,1") (inst "selectSK=arr_634"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "77"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "113")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "59"))
                                                                     (rule "replace_known_right" (formula "83") (term "0,0,0,0") (ifseqformula "111"))
                                                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "112")))
                                                                     (rule "applyEqReverse" (formula "84") (term "1,0,1") (ifseqformula "83"))
                                                                     (rule "hideAuxiliaryEq" (formula "83"))
                                                                     (rule "allLeft" (formula "69") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                     (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_635"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "119")) (ifInst ""  (formula "18")))
                                                                     (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                     (rule "hideAuxiliaryEq" (formula "69"))
                                                                     (rule "allLeft" (formula "70") (inst "t=i_41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "2"))
                                                                     (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                     (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_636"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "120")) (ifInst ""  (formula "17")))
                                                                     (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                     (rule "hideAuxiliaryEq" (formula "70"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "1,0,1,0") (ifseqformula "58"))
                                                                     (rule "replace_known_left" (formula "95") (term "1") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "106")))
                                                                     (rule "true_left" (formula "95"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "1,1,1,0") (ifseqformula "58"))
                                                                     (rule "replace_known_left" (formula "95") (term "1") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "107")))
                                                                     (rule "true_left" (formula "95"))
                                                                     (rule "commute_and" (formula "7") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "95") (inst "t=j_21"))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_50" (formula "95") (term "0,1"))
                                                                     (rule "replaceKnownSelect_taclet00000000001011000000000_47" (formula "95") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_51" (formula "95") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00000000001011000000000_48" (formula "95") (term "1,1"))
                                                                     (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "109"))
                                                                     (builtin "One Step Simplification" (formula "95"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "95") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "95") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "95") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "95") (term "0,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "95") (term "0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "95") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "95") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "95") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "95") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "95"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "95") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "95") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "95"))
                                                                     (rule "closeFalse" (formula "95"))
                                                                  )
                                                                  (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "referencedObjectIsCreatedRight" (formula "79") (ifseqformula "81"))
                                                                     (rule "close" (formula "79") (ifseqformula "44"))
                                                                  )
                                                               )
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "78") (ifseqformula "81"))
                                                                  (rule "close" (formula "78") (ifseqformula "45"))
                                                               )
                                                            )
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "71"))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "70"))
                                                               (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                               (rule "mul_literals" (formula "70") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "50") (term "0,1"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "55") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "55") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "notRight" (formula "79"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "82") (term "0,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "allLeft" (formula "54") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "54") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "54") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "54") (term "0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "ex_pull_out3" (formula "5") (term "0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "80") (term "1,1,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "allRight" (formula "79") (inst "sk=j_20"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "inEqSimp_leqRight" (formula "79"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_geqRight" (formula "80"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_585"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "4")))
                                                                  (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_586"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "81"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                                  (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "69") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "arrayLengthIsAShort" (formula "74") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "true_left" (formula "74"))
                                                                  (rule "arrayLengthNotNegative" (formula "74") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "78") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "true_left" (formula "78"))
                                                                  (rule "arrayLengthNotNegative" (formula "78") (term "0"))
                                                                  (rule "applyEq" (formula "78") (term "0") (ifseqformula "79"))
                                                                  (rule "commute_and_2" (formula "8") (term "0,0"))
                                                                  (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_587"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "104")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "104")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "66") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_588"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "105")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "105")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                                  (rule "hideAuxiliaryEq" (formula "66"))
                                                                  (rule "allLeft" (formula "64") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "1,0,1") (inst "selectSK=arr_589"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "90"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "65") (term "1,0,1") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "2,0,1") (inst "selectSK=arr_590"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "90"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "65") (term "2,0,1") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "allLeft" (formula "56") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_591"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "93")) (ifInst ""  (formula "94")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "71") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "71") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "71") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "71") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "71") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "71") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "71") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_592"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "93")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "91"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "92")))
                                                                  (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                                  (rule "hideAuxiliaryEq" (formula "71"))
                                                                  (rule "narrowSelectArrayType" (formula "71") (term "0,0,0") (ifseqformula "60") (ifseqformula "92"))
                                                                  (rule "allLeft" (formula "72") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "pullOutSelect" (formula "72") (term "0,0,0") (inst "selectSK=arr_593"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "94")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "72") (term "1,0,0,0") (ifseqformula "93"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "92")))
                                                                  (rule "applyEqReverse" (formula "73") (term "0,0,0") (ifseqformula "72"))
                                                                  (rule "hideAuxiliaryEq" (formula "72"))
                                                                  (rule "narrowSelectArrayType" (formula "72") (term "0,0,0") (ifseqformula "60") (ifseqformula "93"))
                                                                  (rule "allLeft" (formula "51") (inst "t=i_41"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_62" (formula "51") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_63" (formula "51") (term "1,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_594"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                                                                  (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                                  (rule "hideAuxiliaryEq" (formula "51"))
                                                                  (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_595"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "110")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "allLeft" (formula "37") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "allLeft" (formula "73") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "pullOutSelect" (formula "73") (term "0,0,0") (inst "selectSK=arr_596"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "114")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "114")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "73"))
                                                                  (rule "hideAuxiliaryEq" (formula "73"))
                                                                  (rule "allLeft" (formula "70") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "polySimp_addAssoc" (formula "70") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "70") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "70") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "70") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "70") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "70") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "70") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "70") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "70") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "70") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "70") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "70") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "1,0,1") (inst "selectSK=arr_597"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "100")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "70") (term "1,0,0,0") (ifseqformula "99"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "98")))
                                                                  (rule "applyEqReverse" (formula "71") (term "1,0,1") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "2,0,1") (inst "selectSK=arr_598"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "100")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "70") (term "0,0,0,0") (ifseqformula "98"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "99")))
                                                                  (rule "applyEqReverse" (formula "71") (term "2,0,1") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "73")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "74")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "75")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_599"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "106")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_600"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "107")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allLeft" (formula "48") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "allLeft" (formula "49") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_601"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "111")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                                  (rule "hideAuxiliaryEq" (formula "60"))
                                                                  (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_53" (formula "59") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_54" (formula "59") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "78")))
                                                                  (rule "true_left" (formula "59"))
                                                                  (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "58") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "58") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "58") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "58") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "58") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "58") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "58") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "pullOutSelect" (formula "58") (term "2,0,1") (inst "selectSK=arr_602"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "59") (term "2,0,1") (ifseqformula "58"))
                                                                  (rule "hideAuxiliaryEq" (formula "58"))
                                                                  (rule "allLeft" (formula "65") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_603"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "121")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "66") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_604"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "122")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                                  (rule "hideAuxiliaryEq" (formula "66"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_605"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "114")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "63") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_606"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "115")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                                  (rule "hideAuxiliaryEq" (formula "63"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_41"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_73" (formula "60") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_74" (formula "60") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "84")))
                                                                  (rule "true_left" (formula "60"))
                                                                  (rule "allLeft" (formula "88") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "88") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "88") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "88") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "pullOutSelect" (formula "88") (term "0,0,0") (inst "selectSK=arr_607"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "110")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0") (ifseqformula "53"))
                                                                  (rule "replace_known_right" (formula "88") (term "1,0,0,0") (ifseqformula "109"))
                                                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "89") (term "0,0,0") (ifseqformula "88"))
                                                                  (rule "hideAuxiliaryEq" (formula "88"))
                                                                  (rule "narrowSelectArrayType" (formula "88") (term "0,0,0") (ifseqformula "73") (ifseqformula "109"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "67")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "80") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_75" (formula "80") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_76" (formula "80") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "80") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "80") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "80") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "80") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "80") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "80") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "80") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "pullOutSelect" (formula "80") (term "1,0,1") (inst "selectSK=arr_608"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "74"))
                                                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "111")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,0,0") (ifseqformula "53"))
                                                                  (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "109"))
                                                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "110")))
                                                                  (rule "applyEqReverse" (formula "81") (term "1,0,1") (ifseqformula "80"))
                                                                  (rule "hideAuxiliaryEq" (formula "80"))
                                                                  (rule "allLeft" (formula "64") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_609"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "63")))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "allLeft" (formula "41") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "65")))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "allLeft" (formula "41") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")))
                                                                  (rule "true_left" (formula "41"))
                                                                  (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "67")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "69")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "60") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_56" (formula "60") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_57" (formula "60") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "85")))
                                                                  (rule "true_left" (formula "60"))
                                                                  (rule "allLeft" (formula "95") (inst "t=j_20"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_50" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet0100000001011000000000_47" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_51" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100000001011000000000_48" (formula "95") (term "0,1"))
                                                                  (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "108"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "95") (term "0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "95") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "95") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "95"))
                                                                  (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                                                                  (rule "mul_literals" (formula "95") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "95") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "95") (term "0"))
                                                                  (rule "add_literals" (formula "95") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "95") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "95") (term "0"))
                                                                  (rule "leq_literals" (formula "95"))
                                                                  (rule "closeFalse" (formula "95"))
                                                               )
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "79"))
                                                                  (rule "close" (formula "77") (ifseqformula "44"))
                                                               )
                                                            )
                                                         )
                                                         (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "72"))
                                                            (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "72"))
                                                            (rule "hideAuxiliaryEq" (formula "72"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "81"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "72"))
                                                            (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "72"))
                                                            (rule "polySimp_mulComm0" (formula "72") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "72") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "1,1"))
                                                            (rule "mul_literals" (formula "72") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "71") (term "0"))
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "71"))
                                                               (rule "notLeft" (formula "72"))
                                                               (rule "notLeft" (formula "71"))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "71"))
                                                               (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "79")))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "79")))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")))
                                                               (rule "ifthenelse_negated" (formula "6") (term "0"))
                                                               (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "70"))
                                                               (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                               (rule "mul_literals" (formula "70") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "50") (term "0,1"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "55") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "allLeft" (formula "55") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "55") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "55") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "notRight" (formula "81"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "81") (term "1,1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "80") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "80") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                                                               (rule "mul_literals" (formula "80") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "80") (term "1,1,0"))
                                                               (rule "ex_pull_out3" (formula "5") (term "0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "5") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "true_left" (formula "73"))
                                                               (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                               (rule "arrayLengthNotNegative" (formula "77") (term "0"))
                                                               (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                                               (rule "arrayLengthIsAShort" (formula "78") (term "0"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "true_left" (formula "78"))
                                                               (rule "ifthenelse_split" (formula "6") (term "0"))
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "83") (term "1,1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "eqSymm" (formula "82"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "81") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "81") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0"))
                                                                  (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "allRight" (formula "81") (inst "sk=j_19"))
                                                                  (rule "orRight" (formula "81"))
                                                                  (rule "orRight" (formula "81"))
                                                                  (rule "inEqSimp_leqRight" (formula "81"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_geqRight" (formula "82"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=arr_557"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "8"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")) (ifInst ""  (formula "83")))
                                                                  (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=arr_558"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "84"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")) (ifInst ""  (formula "4")))
                                                                  (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "69") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "commute_and_2" (formula "7") (term "0,0"))
                                                                  (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_559"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "104")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "68") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_560"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "90")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "88"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "narrowSelectArrayType" (formula "68") (term "0,0,0") (ifseqformula "60") (ifseqformula "89"))
                                                                  (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "65") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "2,0,1") (inst "selectSK=arr_561"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "90"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "66") (term "2,0,1") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "1,0,1") (inst "selectSK=arr_562"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "90"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "89")))
                                                                  (rule "applyEqReverse" (formula "66") (term "1,0,1") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "allLeft" (formula "30") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "allLeft" (formula "72") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "pullOutSelect" (formula "72") (term "0,0,0") (inst "selectSK=arr_563"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "94")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "92"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "93")))
                                                                  (rule "applyEqReverse" (formula "73") (term "0,0,0") (ifseqformula "72"))
                                                                  (rule "hideAuxiliaryEq" (formula "72"))
                                                                  (rule "narrowSelectArrayType" (formula "72") (term "0,0,0") (ifseqformula "62") (ifseqformula "93"))
                                                                  (rule "allLeft" (formula "53") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "2,0,1") (inst "selectSK=arr_564"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                                                                  (rule "applyEqReverse" (formula "54") (term "2,0,1") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "1,0,1") (inst "selectSK=arr_565"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                                                                  (rule "applyEqReverse" (formula "54") (term "1,0,1") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "allLeft" (formula "56") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_566"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "111")) (ifInst ""  (formula "35")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_567"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "101")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_568"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "103")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "47") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "59")))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "56") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "56") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "56") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "2,0,1") (inst "selectSK=arr_569"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                                                  (rule "applyEqReverse" (formula "57") (term "2,0,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_570"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "106")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "39") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "62")))
                                                                  (rule "true_left" (formula "39"))
                                                                  (rule "allLeft" (formula "76") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "pullOutSelect" (formula "76") (term "0,0,0") (inst "selectSK=arr_571"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "70"))
                                                                  (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "117")))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_66" (formula "76") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_67" (formula "76") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "replace_known_left" (formula "76") (term "0,0,0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "applyEqReverse" (formula "77") (term "0,0,0") (ifseqformula "76"))
                                                                  (rule "hideAuxiliaryEq" (formula "76"))
                                                                  (rule "allLeft" (formula "66") (inst "t=i_41"))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_64" (formula "66") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_65" (formula "66") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "allLeft" (formula "81") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "81") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=arr_572"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "71"))
                                                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "103")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "replace_known_right" (formula "81") (term "1,0,0,0") (ifseqformula "102"))
                                                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "101")))
                                                                  (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "81"))
                                                                  (rule "hideAuxiliaryEq" (formula "81"))
                                                                  (rule "narrowSelectArrayType" (formula "81") (term "0,0,0") (ifseqformula "70") (ifseqformula "102"))
                                                                  (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_573"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "118")) (ifInst ""  (formula "34")))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "66")))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "allLeft" (formula "33") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "allLeft" (formula "62") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_574"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "123")) (ifInst ""  (formula "37")))
                                                                  (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                                  (rule "hideAuxiliaryEq" (formula "62"))
                                                                  (rule "allLeft" (formula "69") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_575"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "122")) (ifInst ""  (formula "36")))
                                                                  (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "67")))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "allLeft" (formula "43") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "allLeft" (formula "67") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_576"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "56"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "115")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "allLeft" (formula "72") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "72") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "pullOutSelect" (formula "72") (term "0,0,0") (inst "selectSK=arr_577"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "57"))
                                                                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "125")) (ifInst ""  (formula "36")))
                                                                  (rule "applyEqReverse" (formula "73") (term "0,0,0") (ifseqformula "72"))
                                                                  (rule "hideAuxiliaryEq" (formula "72"))
                                                                  (rule "allLeft" (formula "83") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_58" (formula "83") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_59" (formula "83") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "83") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "83") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "83") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "83") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "83") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "83") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "pullOutSelect" (formula "83") (term "1,0,1") (inst "selectSK=arr_578"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "111")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "replace_known_right" (formula "83") (term "1,0,0,0") (ifseqformula "110"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "109")))
                                                                  (rule "applyEqReverse" (formula "84") (term "1,0,1") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_579"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "57"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "85") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "85") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "85") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "85") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "85") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "85") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "85") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_580"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "127")))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_52" (formula "85") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_53" (formula "85") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "allLeft" (formula "85") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_581"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "127")))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_82" (formula "85") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_83" (formula "85") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "allLeft" (formula "84") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "84") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "84") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "2,0,1") (inst "selectSK=arr_582"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "112")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "110"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "111")))
                                                                  (rule "applyEqReverse" (formula "85") (term "2,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "1,0,1") (inst "selectSK=arr_583"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "112")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "110"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "111")))
                                                                  (rule "applyEqReverse" (formula "85") (term "1,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_584"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "57"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "119")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "95") (inst "t=j_19"))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_50" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet0010000001011000000000_47" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_51" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010000001011000000000_48" (formula "95") (term "0,1"))
                                                                  (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "108"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "95") (term "0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "95") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "95"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "79") (ifseqformula "81"))
                                                                  (rule "close" (formula "79") (ifseqformula "44"))
                                                               )
                                                            )
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "71"))
                                                               (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "70"))
                                                               (rule "polySimp_addComm1" (formula "70") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "70") (term "1"))
                                                               (rule "mul_literals" (formula "70") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "70") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "70") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "5") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "5") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "5") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "50") (term "0,1"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "55") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "55") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "78"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "notRight" (formula "79"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "80") (term "0,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "allLeft" (formula "54") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "54") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "54") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "54") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "notLeft" (formula "54"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "notRight" (formula "79"))
                                                               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "79") (term "1,1,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "68"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "allRight" (formula "78") (inst "sk=j_18"))
                                                               (rule "orRight" (formula "78"))
                                                               (rule "orRight" (formula "78"))
                                                               (rule "inEqSimp_leqRight" (formula "78"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "79"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_532"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")) (ifInst ""  (formula "5")))
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_533"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "eqSymm" (formula "81"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "69") (term "0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "true_left" (formula "69"))
                                                               (rule "ex_pull_out3" (formula "8") (term "0"))
                                                               (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                                               (rule "commute_or_2" (formula "8") (term "1,0,0"))
                                                               (rule "commute_or" (formula "8") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "8") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "8") (term "0,1,0,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "74") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "75") (term "0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "true_left" (formula "75"))
                                                               (rule "arrayLengthNotNegative" (formula "78") (term "0"))
                                                               (rule "applyEq" (formula "78") (term "0") (ifseqformula "79"))
                                                               (rule "arrayLengthIsAShort" (formula "79") (term "0"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "true_left" (formula "79"))
                                                               (rule "allLeft" (formula "56") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_534"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "89")) (ifInst ""  (formula "90")))
                                                               (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                               (rule "hideAuxiliaryEq" (formula "56"))
                                                               (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
                                                               (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_535"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "104")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "104")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                               (rule "hideAuxiliaryEq" (formula "66"))
                                                               (rule "allLeft" (formula "67") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_536"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "105")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "105")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "allLeft" (formula "65") (inst "t=i_41"))
                                                               (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "65") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "pullOutSelect" (formula "65") (term "1,0,1") (inst "selectSK=arr_537"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "91")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "90"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "89")))
                                                               (rule "applyEqReverse" (formula "66") (term "1,0,1") (ifseqformula "65"))
                                                               (rule "hideAuxiliaryEq" (formula "65"))
                                                               (rule "pullOutSelect" (formula "65") (term "2,0,1") (inst "selectSK=arr_538"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "91")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "90")))
                                                               (rule "applyEqReverse" (formula "66") (term "2,0,1") (ifseqformula "65"))
                                                               (rule "hideAuxiliaryEq" (formula "65"))
                                                               (rule "allLeft" (formula "69") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_539"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "107")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_left" (formula "69") (term "0,0,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "107")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_540"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "98")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                               (rule "hideAuxiliaryEq" (formula "53"))
                                                               (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "67") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "67") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                               (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "2,0,1") (inst "selectSK=arr_541"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "94")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "92"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "93")))
                                                               (rule "applyEqReverse" (formula "68") (term "2,0,1") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "1,0,1") (inst "selectSK=arr_542"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "94")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "92"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "93")))
                                                               (rule "applyEqReverse" (formula "68") (term "1,0,1") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "70")))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "71")))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "72")))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "74") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "74") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "74") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "74") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "74") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "74") (term "0,1,0"))
                                                               (rule "add_literals" (formula "74") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "74") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "74") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "74") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "74") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "74") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "pullOutSelect" (formula "74") (term "0,0,0") (inst "selectSK=arr_543"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "95")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "74") (term "0,0,0,0") (ifseqformula "93"))
                                                               (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "94")))
                                                               (rule "applyEqReverse" (formula "75") (term "0,0,0") (ifseqformula "74"))
                                                               (rule "hideAuxiliaryEq" (formula "74"))
                                                               (rule "narrowSelectArrayType" (formula "74") (term "0,0,0") (ifseqformula "61") (ifseqformula "94"))
                                                               (rule "allLeft" (formula "75") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_544"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "96")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "75") (term "0,0,0,0") (ifseqformula "94"))
                                                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "95")))
                                                               (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                               (rule "hideAuxiliaryEq" (formula "75"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0,0,0") (ifseqformula "61") (ifseqformula "95"))
                                                               (rule "allLeft" (formula "51") (inst "t=i_41"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_52" (formula "51") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_53" (formula "51") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_545"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "98")) (ifInst ""  (formula "99")))
                                                               (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "77") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "77") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "pullOutSelect" (formula "77") (term "0,0,0") (inst "selectSK=arr_546"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "98")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0,0,0") (ifseqformula "96"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "97")))
                                                               (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "77"))
                                                               (rule "hideAuxiliaryEq" (formula "77"))
                                                               (rule "narrowSelectArrayType" (formula "77") (term "0,0,0") (ifseqformula "62") (ifseqformula "97"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "allLeft" (formula "71") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_71" (formula "71") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_72" (formula "71") (term "2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "71") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "71") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "71") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "71") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "71") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "pullOutSelect" (formula "71") (term "1,0,1") (inst "selectSK=arr_547"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "101")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "71") (term "1,0,0,0") (ifseqformula "100"))
                                                               (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "99")))
                                                               (rule "applyEqReverse" (formula "72") (term "1,0,1") (ifseqformula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "71"))
                                                               (rule "allLeft" (formula "40") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "allLeft" (formula "58") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                                               (rule "add_literals" (formula "58") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_548"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "108")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                               (rule "hideAuxiliaryEq" (formula "58"))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_549"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "110")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                               (rule "hideAuxiliaryEq" (formula "60"))
                                                               (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "allLeft" (formula "49") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "33") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allLeft" (formula "43") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "allLeft" (formula "65") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_550"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "115")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                               (rule "hideAuxiliaryEq" (formula "65"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_58" (formula "61") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_59" (formula "61") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "82")))
                                                               (rule "true_left" (formula "61"))
                                                               (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "65")))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "allLeft" (formula "39") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "64")))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "61") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "61") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "61") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "61") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "61") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "61") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "2,0,1") (inst "selectSK=arr_551"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "111")) (ifInst ""  (formula "112")))
                                                               (rule "applyEqReverse" (formula "62") (term "2,0,1") (ifseqformula "61"))
                                                               (rule "hideAuxiliaryEq" (formula "61"))
                                                               (rule "allLeft" (formula "66") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_552"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "116")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                               (rule "hideAuxiliaryEq" (formula "66"))
                                                               (rule "allLeft" (formula "68") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_553"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                               (rule "hideAuxiliaryEq" (formula "68"))
                                                               (rule "allLeft" (formula "39") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "67")))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "allLeft" (formula "69") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "69") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "69") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "69") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "69") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
                                                               (rule "add_literals" (formula "69") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "69") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "69") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "69") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_554"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "126")) (ifInst ""  (formula "35")))
                                                               (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "allLeft" (formula "63") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_55" (formula "63") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_56" (formula "63") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "63") (term "0,1,0"))
                                                               (rule "add_literals" (formula "63") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "84")))
                                                               (rule "true_left" (formula "63"))
                                                               (rule "allLeft" (formula "63") (inst "t=i_41"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_65" (formula "63") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_66" (formula "63") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "86")))
                                                               (rule "true_left" (formula "63"))
                                                               (rule "allLeft" (formula "69") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_555"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "126")) (ifInst ""  (formula "35")))
                                                               (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "allLeft" (formula "69") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_556"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "126")) (ifInst ""  (formula "35")))
                                                               (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                               (rule "hideAuxiliaryEq" (formula "69"))
                                                               (rule "commute_and_2" (formula "8") (term "0,0"))
                                                               (rule "allLeft" (formula "95") (inst "t=j_18"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_50" (formula "95") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet110000001011000000000_47" (formula "95") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_51" (formula "95") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110000001011000000000_48" (formula "95") (term "0,1"))
                                                               (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "107"))
                                                               (builtin "One Step Simplification" (formula "95"))
                                                               (rule "inEqSimp_contradInEq1" (formula "95") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "95") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "95"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "95"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "replace_known_right" (formula "79") (term "1") (ifseqformula "76"))
                                                         (builtin "One Step Simplification" (formula "79"))
                                                         (rule "false_right" (formula "79"))
                                                         (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "76"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "notLeft" (formula "74"))
                                                         (rule "inEqSimp_geqRight" (formula "76"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "replace_known_left" (formula "75") (term "0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "andLeft" (formula "75"))
                                                         (rule "notLeft" (formula "76"))
                                                         (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "76")))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "73"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "75") (term "0") (ifseqformula "73"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "applyEq" (formula "76") (term "0") (ifseqformula "73"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "applyEqRigid" (formula "78") (term "0,0") (ifseqformula "75"))
                                                         (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "66"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,1,0,0") (ifseqformula "75"))
                                                         (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "75"))
                                                         (rule "applyEq" (formula "76") (term "1") (ifseqformula "75"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                         (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                         (rule "add_literals" (formula "76") (term "0,0"))
                                                         (rule "leq_literals" (formula "76") (term "0"))
                                                         (builtin "One Step Simplification" (formula "76"))
                                                         (rule "false_right" (formula "76"))
                                                         (rule "ifthenelse_split" (formula "67") (term "0"))
                                                         (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "67"))
                                                            (rule "notLeft" (formula "68"))
                                                            (rule "notLeft" (formula "67"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "67"))
                                                            (rule "applyEqReverse" (formula "69") (term "1,1") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "76")))
                                                            (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "68"))
                                                            (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                            (rule "mul_literals" (formula "68") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "67") (term "0"))
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "67"))
                                                               (rule "notLeft" (formula "68"))
                                                               (rule "notLeft" (formula "67"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "67"))
                                                               (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                                               (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "52") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "52") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "allLeft" (formula "47") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "47") (term "0,1"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "ex_pull_out3" (formula "2") (term "0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                                               (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                               (rule "commute_or" (formula "2") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "79") (term "1,1,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "78") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "78") (term "1,1,0"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "79") (term "1,1,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "78") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                                     (rule "mul_literals" (formula "78") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "78") (term "1,1,0"))
                                                                     (rule "replace_known_left" (formula "78") (term "0") (ifseqformula "67"))
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "allRight" (formula "78") (inst "sk=j_16"))
                                                                     (rule "orRight" (formula "78"))
                                                                     (rule "orRight" (formula "78"))
                                                                     (rule "inEqSimp_leqRight" (formula "78"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "79"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_526"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "81"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "78"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                                                                     (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=arr_527"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "81"))
                                                                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "7"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")))
                                                                     (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "68") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "true_left" (formula "68"))
                                                                     (rule "commute_and_2" (formula "5") (term "0,0"))
                                                                     (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "73"))
                                                                     (rule "true_left" (formula "73"))
                                                                     (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                                     (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
                                                                     (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                                                                     (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "commute_and" (formula "6") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "71") (inst "t=j_16"))
                                                                     (rule "replaceKnownSelect_taclet00001000001011000000000_42" (formula "71") (term "1,1"))
                                                                     (rule "replaceKnownSelect_taclet00001000001011000000000_39" (formula "71") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00001000001011000000000_43" (formula "71") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00001000001011000000000_40" (formula "71") (term "0,1"))
                                                                     (rule "replace_known_right" (formula "71") (term "1") (ifseqformula "83"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "71") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "71") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "71") (term "0,0,1"))
                                                                     (rule "polySimp_addComm0" (formula "71") (term "0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "71") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "71") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "71") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "71") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "closeFalse" (formula "71"))
                                                                  )
                                                                  (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "75"))
                                                                     (rule "close" (formula "74") (ifseqformula "42"))
                                                                  )
                                                               )
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "77"))
                                                                  (rule "close" (formula "74") (ifseqformula "42"))
                                                               )
                                                            )
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "67"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "notRight" (formula "75"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "78") (term "0,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "52") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "76"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "allLeft" (formula "47") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "47") (term "0,1"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "ex_pull_out3" (formula "3") (term "0"))
                                                               (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                               (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "78") (term "1,1,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "allRight" (formula "77") (inst "sk=j_15"))
                                                                  (rule "orRight" (formula "77"))
                                                                  (rule "orRight" (formula "77"))
                                                                  (rule "inEqSimp_geqRight" (formula "78"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "78"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "79") (term "1") (inst "selectSK=arr_500"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                                                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_501"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "4")))
                                                                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "79"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "68") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "true_left" (formula "68"))
                                                                  (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "true_left" (formula "73"))
                                                                  (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                                  (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
                                                                  (rule "commute_and_2" (formula "6") (term "0,0"))
                                                                  (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                                  (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_502"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "100")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "allLeft" (formula "56") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "0,0,0") (inst "selectSK=arr_503"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "101")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "57") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "pullOutSelect" (formula "57") (term "0,0,0") (inst "selectSK=arr_504"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "102")) (ifInst ""  (formula "32")))
                                                                  (rule "applyEqReverse" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                                  (rule "hideAuxiliaryEq" (formula "57"))
                                                                  (rule "allLeft" (formula "68") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "68") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "68") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "68") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_505"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "104")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "104")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "allLeft" (formula "69") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_506"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "105")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_left" (formula "69") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "105")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "allLeft" (formula "67") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "67") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "1,0,1") (inst "selectSK=arr_507"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "90")))
                                                                  (rule "applyEqReverse" (formula "68") (term "1,0,1") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "2,0,1") (inst "selectSK=arr_508"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "91")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "89"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "90")))
                                                                  (rule "applyEqReverse" (formula "68") (term "2,0,1") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "allLeft" (formula "52") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_54" (formula "52") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_55" (formula "52") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "71")))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "allLeft" (formula "73") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "73") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "73") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "73") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "73") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "73") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "73") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "73") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "pullOutSelect" (formula "73") (term "0,0,0") (inst "selectSK=arr_509"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "63"))
                                                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "92")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "73") (term "1,0,0,0") (ifseqformula "91"))
                                                                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "90")))
                                                                  (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "73"))
                                                                  (rule "hideAuxiliaryEq" (formula "73"))
                                                                  (rule "narrowSelectArrayType" (formula "73") (term "0,0,0") (ifseqformula "62") (ifseqformula "91"))
                                                                  (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_51" (formula "52") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_52" (formula "52") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "70")))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "allLeft" (formula "52") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,0,0") (inst "selectSK=arr_510"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "108")) (ifInst ""  (formula "33")))
                                                                  (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_511"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "99")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "pullOutSelect" (formula "55") (term "0,0,0") (inst "selectSK=arr_512"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "100")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                                                  (rule "hideAuxiliaryEq" (formula "55"))
                                                                  (rule "allLeft" (formula "71") (inst "t=i_38"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "71") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "71") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "71") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "71") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "71"))
                                                                  (rule "pullOutSelect" (formula "71") (term "1,0,1") (inst "selectSK=arr_513"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "96")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "94"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "95")))
                                                                  (rule "applyEqReverse" (formula "72") (term "1,0,1") (ifseqformula "71"))
                                                                  (rule "hideAuxiliaryEq" (formula "71"))
                                                                  (rule "pullOutSelect" (formula "71") (term "2,0,1") (inst "selectSK=arr_514"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "96")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "71") (term "1,0,0,0") (ifseqformula "95"))
                                                                  (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "94")))
                                                                  (rule "applyEqReverse" (formula "72") (term "2,0,1") (ifseqformula "71"))
                                                                  (rule "hideAuxiliaryEq" (formula "71"))
                                                                  (rule "allLeft" (formula "45") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "allLeft" (formula "63") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "pullOutSelect" (formula "63") (term "0,0,0") (inst "selectSK=arr_515"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "99")) (ifInst ""  (formula "100")))
                                                                  (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "63"))
                                                                  (rule "hideAuxiliaryEq" (formula "63"))
                                                                  (rule "allLeft" (formula "77") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "77") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "77") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "pullOutSelect" (formula "77") (term "0,0,0") (inst "selectSK=arr_516"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "114")))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_62" (formula "77") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_63" (formula "77") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "48"))
                                                                  (rule "replace_known_left" (formula "77") (term "0,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "77"))
                                                                  (rule "hideAuxiliaryEq" (formula "77"))
                                                                  (rule "allLeft" (formula "80") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "80") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "pullOutSelect" (formula "80") (term "0,0,0") (inst "selectSK=arr_517"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "99")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "80") (term "0,0,0") (ifseqformula "48"))
                                                                  (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "97"))
                                                                  (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "98")))
                                                                  (rule "applyEqReverse" (formula "81") (term "0,0,0") (ifseqformula "80"))
                                                                  (rule "hideAuxiliaryEq" (formula "80"))
                                                                  (rule "narrowSelectArrayType" (formula "80") (term "0,0,0") (ifseqformula "67") (ifseqformula "98"))
                                                                  (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "57")))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "allLeft" (formula "81") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "81") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=arr_518"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "68"))
                                                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "100")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,0,0") (ifseqformula "48"))
                                                                  (rule "replace_known_right" (formula "81") (term "1,0,0,0") (ifseqformula "99"))
                                                                  (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "98")))
                                                                  (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "81"))
                                                                  (rule "hideAuxiliaryEq" (formula "81"))
                                                                  (rule "narrowSelectArrayType" (formula "81") (term "0,0,0") (ifseqformula "67") (ifseqformula "99"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "61")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "52") (inst "t=i_41"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_72" (formula "52") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_73" (formula "52") (term "1,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "pullOutSelect" (formula "52") (term "2,0,1") (inst "selectSK=arr_519"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "102")) (ifInst ""  (formula "103")))
                                                                  (rule "applyEqReverse" (formula "53") (term "2,0,1") (ifseqformula "52"))
                                                                  (rule "hideAuxiliaryEq" (formula "52"))
                                                                  (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "53") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "53") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "pullOutSelect" (formula "53") (term "2,0,1") (inst "selectSK=arr_520"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "103")) (ifInst ""  (formula "104")))
                                                                  (rule "applyEqReverse" (formula "54") (term "2,0,1") (ifseqformula "53"))
                                                                  (rule "hideAuxiliaryEq" (formula "53"))
                                                                  (rule "allLeft" (formula "59") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_521"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "108")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_522"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "110")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "62") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "62") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "62") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "62") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "62") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "62") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "62") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_523"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "111")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                                  (rule "hideAuxiliaryEq" (formula "62"))
                                                                  (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "allLeft" (formula "47") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "67")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "69")))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "allLeft" (formula "36") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "allLeft" (formula "36") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "62")))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "allLeft" (formula "65") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_524"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "114")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "82") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_70" (formula "82") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_71" (formula "82") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "82") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "82") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "82") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "82") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "82") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "82") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "82") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "82") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "82") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "82") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "82") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "82") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "82") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "82") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "82") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "pullOutSelect" (formula "82") (term "2,0,1") (inst "selectSK=arr_525"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "82") (ifseqformula "76"))
                                                                  (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "109")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "82") (term "0,0,0") (ifseqformula "50"))
                                                                  (rule "replace_known_right" (formula "82") (term "0,0,0,0") (ifseqformula "107"))
                                                                  (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "108")))
                                                                  (rule "applyEqReverse" (formula "83") (term "2,0,1") (ifseqformula "82"))
                                                                  (rule "hideAuxiliaryEq" (formula "82"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "85")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "86")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "65")))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "66")))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "allLeft" (formula "38") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "64")))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "allLeft" (formula "29") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "58")))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "commute_and" (formula "7") (term "0,0,0"))
                                                                  (rule "allLeft" (formula "95") (inst "t=j_15"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_42" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownSelect_taclet0101000001011000000000_39" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_43" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101000001011000000000_40" (formula "95") (term "1,1"))
                                                                  (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "106"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "95") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "95") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "95") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "95") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "95") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "95") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "95") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "95") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "95") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "95") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "95") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "closeFalse" (formula "95"))
                                                               )
                                                               (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "76"))
                                                                  (rule "close" (formula "74") (ifseqformula "42"))
                                                               )
                                                            )
                                                         )
                                                         (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "69") (term "1,1") (ifseqformula "67"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "67"))
                                                            (rule "hideAuxiliaryEq" (formula "67"))
                                                            (rule "inEqSimp_homoInEq1" (formula "68"))
                                                            (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                            (rule "mul_literals" (formula "68") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "67") (term "0"))
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                               (rule "andLeft" (formula "67"))
                                                               (rule "notLeft" (formula "68"))
                                                               (rule "notLeft" (formula "67"))
                                                               (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "67"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                               (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "47") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "47") (term "0,1"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "52") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "75"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_right" (formula "77") (term "0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "notRight" (formula "77"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "78") (term "1,1,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "77") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "77") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                               (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "77") (term "1,1,0"))
                                                               (rule "ex_pull_out3" (formula "3") (term "0"))
                                                               (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "1,0,0"))
                                                               (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "78") (term "1,1,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "77") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "77") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "77") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "77") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "77") (term "1,1,0"))
                                                                  (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "allRight" (formula "77") (inst "sk=j_14"))
                                                                  (rule "orRight" (formula "77"))
                                                                  (rule "orRight" (formula "77"))
                                                                  (rule "inEqSimp_leqRight" (formula "77"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_geqRight" (formula "78"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_472"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                                                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_473"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                  (rule "eqSymm" (formula "80"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "4")))
                                                                  (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "68") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "true_left" (formula "68"))
                                                                  (rule "arrayLengthIsAShort" (formula "73") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "true_left" (formula "73"))
                                                                  (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                                  (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
                                                                  (rule "commute_and_2" (formula "6") (term "0,0"))
                                                                  (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_474"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "86")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "84"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "85")))
                                                                  (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "narrowSelectArrayType" (formula "67") (term "0,0,0") (ifseqformula "59") (ifseqformula "85"))
                                                                  (rule "allLeft" (formula "68") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "68") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "pullOutSelect" (formula "68") (term "0,0,0") (inst "selectSK=arr_475"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "87")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "85"))
                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "86")))
                                                                  (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "68"))
                                                                  (rule "hideAuxiliaryEq" (formula "68"))
                                                                  (rule "narrowSelectArrayType" (formula "68") (term "0,0,0") (ifseqformula "59") (ifseqformula "86"))
                                                                  (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "64") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "64") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "2,0,1") (inst "selectSK=arr_476"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "88")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "86")))
                                                                  (rule "applyEqReverse" (formula "65") (term "2,0,1") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "1,0,1") (inst "selectSK=arr_477"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "88")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "86")))
                                                                  (rule "applyEqReverse" (formula "65") (term "1,0,1") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "allLeft" (formula "30") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "allLeft" (formula "56") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "1,0,1") (inst "selectSK=arr_478"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "95")) (ifInst ""  (formula "96")))
                                                                  (rule "applyEqReverse" (formula "57") (term "1,0,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "pullOutSelect" (formula "56") (term "2,0,1") (inst "selectSK=arr_479"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "95")) (ifInst ""  (formula "96")))
                                                                  (rule "applyEqReverse" (formula "57") (term "2,0,1") (ifseqformula "56"))
                                                                  (rule "hideAuxiliaryEq" (formula "56"))
                                                                  (rule "allLeft" (formula "61") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_480"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "109")) (ifInst ""  (formula "37")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "allLeft" (formula "59") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "59") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "59"))
                                                                  (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=arr_481"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "53"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "111")) (ifInst ""  (formula "38")))
                                                                  (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                                                  (rule "hideAuxiliaryEq" (formula "59"))
                                                                  (rule "allLeft" (formula "42") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "allLeft" (formula "43") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "allLeft" (formula "64") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_482"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "112")) (ifInst ""  (formula "37")))
                                                                  (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                                  (rule "hideAuxiliaryEq" (formula "64"))
                                                                  (rule "allLeft" (formula "65") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_483"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "113")) (ifInst ""  (formula "37")))
                                                                  (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                                  (rule "hideAuxiliaryEq" (formula "65"))
                                                                  (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_484"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "114")) (ifInst ""  (formula "38")))
                                                                  (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "hideAuxiliaryEq" (formula "61"))
                                                                  (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "allLeft" (formula "62") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_485"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "56"))
                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "115")) (ifInst ""  (formula "38")))
                                                                  (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                                  (rule "hideAuxiliaryEq" (formula "62"))
                                                                  (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "allLeft" (formula "47") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allLeft" (formula "48") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "66") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_486"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "108")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                                  (rule "hideAuxiliaryEq" (formula "66"))
                                                                  (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "67") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_487"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "59"))
                                                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "109")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                                  (rule "hideAuxiliaryEq" (formula "67"))
                                                                  (rule "allLeft" (formula "57") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "57") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "allLeft" (formula "58") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "allLeft" (formula "66") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "66") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "66") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "66") (term "0,2,2,0,1"))
                                                                  (rule "add_literals" (formula "66") (term "0,0,2,2,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "66") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "66") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "66") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "pullOutSelect" (formula "66") (term "2,0,1") (inst "selectSK=arr_488"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")))
                                                                  (rule "applyEqReverse" (formula "67") (term "2,0,1") (ifseqformula "66"))
                                                                  (rule "hideAuxiliaryEq" (formula "66"))
                                                                  (rule "allLeft" (formula "73") (inst "t=i_41"))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_52" (formula "73") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_53" (formula "73") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "73") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "73"))
                                                                  (rule "allLeft" (formula "83") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_50" (formula "83") (term "2,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_51" (formula "83") (term "2,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "83") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "83") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "83") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "83") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "83") (term "0,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "83") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "pullOutSelect" (formula "83") (term "1,0,1") (inst "selectSK=arr_489"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "107")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_right" (formula "83") (term "0,0,0,0") (ifseqformula "105"))
                                                                  (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "106")))
                                                                  (rule "applyEqReverse" (formula "84") (term "1,0,1") (ifseqformula "83"))
                                                                  (rule "hideAuxiliaryEq" (formula "83"))
                                                                  (rule "allLeft" (formula "69") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_490"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "113")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_491"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "114")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "70") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "pullOutSelect" (formula "70") (term "0,0,0") (inst "selectSK=arr_492"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "114")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "71") (term "0,0,0") (ifseqformula "70"))
                                                                  (rule "hideAuxiliaryEq" (formula "70"))
                                                                  (rule "allLeft" (formula "89") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "89") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "89") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "89") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "pullOutSelect" (formula "89") (term "0,0,0") (inst "selectSK=arr_493"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "108")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_right" (formula "89") (term "0,0,0,0") (ifseqformula "106"))
                                                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "107")))
                                                                  (rule "applyEqReverse" (formula "90") (term "0,0,0") (ifseqformula "89"))
                                                                  (rule "hideAuxiliaryEq" (formula "89"))
                                                                  (rule "narrowSelectArrayType" (formula "89") (term "0,0,0") (ifseqformula "77") (ifseqformula "107"))
                                                                  (rule "allLeft" (formula "85") (inst "t=i_41"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_494"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_64" (formula "85") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_65" (formula "85") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "allLeft" (formula "36") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "72")))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "allLeft" (formula "69") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "pullOutSelect" (formula "69") (term "0,0,0") (inst "selectSK=arr_495"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "61"))
                                                                  (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "114")) (ifInst ""  (formula "18")))
                                                                  (rule "applyEqReverse" (formula "70") (term "0,0,0") (ifseqformula "69"))
                                                                  (rule "hideAuxiliaryEq" (formula "69"))
                                                                  (rule "allLeft" (formula "85") (inst "t=add(Z(1(#)), i_38)"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "85") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "85") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "85") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "85") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "85") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "85") (term "0,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_496"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_58" (formula "85") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_59" (formula "85") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "allLeft" (formula "85") (inst "t=i_38"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "14"))
                                                                  (rule "qeq_literals" (formula "85") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "pullOutSelect" (formula "85") (term "0,0,0") (inst "selectSK=arr_497"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_66" (formula "85") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_67" (formula "85") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                  (rule "applyEqReverse" (formula "86") (term "0,0,0") (ifseqformula "85"))
                                                                  (rule "hideAuxiliaryEq" (formula "85"))
                                                                  (rule "allLeft" (formula "84") (inst "t=i_41"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "84") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "84") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "84") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "1,0,1") (inst "selectSK=arr_498"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "109")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_right" (formula "84") (term "1,0,0,0") (ifseqformula "108"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "107")))
                                                                  (rule "applyEqReverse" (formula "85") (term "1,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "pullOutSelect" (formula "84") (term "2,0,1") (inst "selectSK=arr_499"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "78"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "109")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "61"))
                                                                  (rule "replace_known_right" (formula "84") (term "1,0,0,0") (ifseqformula "108"))
                                                                  (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "107")))
                                                                  (rule "applyEqReverse" (formula "85") (term "2,0,1") (ifseqformula "84"))
                                                                  (rule "hideAuxiliaryEq" (formula "84"))
                                                                  (rule "commute_and" (formula "7") (term "0,0,0"))
                                                                  (rule "allLeft" (formula "95") (inst "t=j_14"))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_39" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownSelect_taclet0011000001011000000000_42" (formula "95") (term "1,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_40" (formula "95") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0011000001011000000000_43" (formula "95") (term "1,1"))
                                                                  (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "106"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "95") (term "0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "95") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "95"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "95") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "95"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "95"))
                                                                  (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                                                                  (rule "mul_literals" (formula "95") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "95") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "95") (term "0"))
                                                                  (rule "add_literals" (formula "95") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "95") (term "1,0"))
                                                                  (rule "add_literals" (formula "95") (term "0"))
                                                                  (rule "leq_literals" (formula "95"))
                                                                  (rule "closeFalse" (formula "95"))
                                                               )
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "74") (ifseqformula "76"))
                                                                  (rule "close" (formula "74") (ifseqformula "42"))
                                                               )
                                                            )
                                                            (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "67"))
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "67"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                               (rule "ex_pull_out3" (formula "2") (term "1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,1,0"))
                                                               (rule "cnf_rightDist" (formula "2") (term "0,0,1,0"))
                                                               (rule "commute_or" (formula "2") (term "1,0,0,1,0"))
                                                               (rule "allLeft" (formula "52") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                                                               (rule "add_literals" (formula "52") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "52") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "notRight" (formula "75"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "77") (term "0,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "allLeft" (formula "52") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_22" (formula "52") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_23" (formula "52") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                                               (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "52") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "74"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "notRight" (formula "76"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "77") (term "1,1,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "allRight" (formula "76") (inst "sk=j_13"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "orRight" (formula "76"))
                                                               (rule "inEqSimp_geqRight" (formula "77"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "77"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_447"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "eqSymm" (formula "79"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "5")))
                                                               (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=arr_448"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "eqSymm" (formula "79"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "68") (term "0"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "true_left" (formula "68"))
                                                               (rule "allLeft" (formula "50") (inst "t=i_38"))
                                                               (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "50") (term "0,1"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "true_left" (formula "50"))
                                                               (rule "ex_pull_out3" (formula "7") (term "0"))
                                                               (rule "cnf_rightDist" (formula "7") (term "0,0"))
                                                               (rule "commute_or_2" (formula "7") (term "1,0,0"))
                                                               (rule "commute_or" (formula "7") (term "0,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                                               (rule "arrayLengthNotNegative" (formula "73") (term "0"))
                                                               (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
                                                               (rule "arrayLengthIsAShort" (formula "74") (term "0"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "true_left" (formula "74"))
                                                               (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                                               (rule "commute_and_2" (formula "8") (term "0,0"))
                                                               (rule "allLeft" (formula "67") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=arr_449"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "85")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "83")))
                                                               (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "narrowSelectArrayType" (formula "67") (term "0,0,0") (ifseqformula "59") (ifseqformula "84"))
                                                               (rule "allLeft" (formula "65") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "65") (term "0,1,0"))
                                                               (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=arr_450"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "101")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "101")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "65"))
                                                               (rule "hideAuxiliaryEq" (formula "65"))
                                                               (rule "allLeft" (formula "66") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "66") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=arr_451"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "102")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "102")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "66"))
                                                               (rule "hideAuxiliaryEq" (formula "66"))
                                                               (rule "allLeft" (formula "64") (inst "t=i_41"))
                                                               (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "pullOutSelect" (formula "64") (term "1,0,1") (inst "selectSK=arr_452"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "88")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "87"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "65") (term "1,0,1") (ifseqformula "64"))
                                                               (rule "hideAuxiliaryEq" (formula "64"))
                                                               (rule "pullOutSelect" (formula "64") (term "2,0,1") (inst "selectSK=arr_453"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "88")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "64") (term "1,0,0,0") (ifseqformula "87"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "86")))
                                                               (rule "applyEqReverse" (formula "65") (term "2,0,1") (ifseqformula "64"))
                                                               (rule "hideAuxiliaryEq" (formula "64"))
                                                               (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "pullOutSelect" (formula "53") (term "0,0,0") (inst "selectSK=arr_454"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "94")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                                               (rule "hideAuxiliaryEq" (formula "53"))
                                                               (rule "allLeft" (formula "54") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=arr_455"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "95")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                                               (rule "hideAuxiliaryEq" (formula "54"))
                                                               (rule "allLeft" (formula "67") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "67") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "67") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "67") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "67") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                               (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "1,0,1") (inst "selectSK=arr_456"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "91")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "89"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "90")))
                                                               (rule "applyEqReverse" (formula "68") (term "1,0,1") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "pullOutSelect" (formula "67") (term "2,0,1") (inst "selectSK=arr_457"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "91")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "90"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "89")))
                                                               (rule "applyEqReverse" (formula "68") (term "2,0,1") (ifseqformula "67"))
                                                               (rule "hideAuxiliaryEq" (formula "67"))
                                                               (rule "allLeft" (formula "58") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "pullOutSelect" (formula "58") (term "0,0,0") (inst "selectSK=arr_458"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "93")) (ifInst ""  (formula "94")))
                                                               (rule "applyEqReverse" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                               (rule "hideAuxiliaryEq" (formula "58"))
                                                               (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "71")))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "72")))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "allLeft" (formula "75") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "75") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "75") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "75") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "75") (term "0,1,0"))
                                                               (rule "add_literals" (formula "75") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "75") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "75") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "75") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "75") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "pullOutSelect" (formula "75") (term "0,0,0") (inst "selectSK=arr_459"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "93")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "75") (term "0,0,0,0") (ifseqformula "91"))
                                                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "92")))
                                                               (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "75"))
                                                               (rule "hideAuxiliaryEq" (formula "75"))
                                                               (rule "narrowSelectArrayType" (formula "75") (term "0,0,0") (ifseqformula "62") (ifseqformula "92"))
                                                               (rule "allLeft" (formula "76") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "pullOutSelect" (formula "76") (term "0,0,0") (inst "selectSK=arr_460"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "94")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,0,0") (ifseqformula "47"))
                                                               (rule "replace_known_right" (formula "76") (term "1,0,0,0") (ifseqformula "93"))
                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "92")))
                                                               (rule "applyEqReverse" (formula "77") (term "0,0,0") (ifseqformula "76"))
                                                               (rule "hideAuxiliaryEq" (formula "76"))
                                                               (rule "narrowSelectArrayType" (formula "76") (term "0,0,0") (ifseqformula "62") (ifseqformula "93"))
                                                               (rule "allLeft" (formula "51") (inst "t=i_41"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_64" (formula "51") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_65" (formula "51") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "pullOutSelect" (formula "51") (term "2,0,1") (inst "selectSK=arr_461"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                                                               (rule "applyEqReverse" (formula "52") (term "2,0,1") (ifseqformula "51"))
                                                               (rule "hideAuxiliaryEq" (formula "51"))
                                                               (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "55")))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_50" (formula "53") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_51" (formula "53") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "73")))
                                                               (rule "true_left" (formula "53"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "allLeft" (formula "74") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "74") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "74") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "pullOutSelect" (formula "74") (term "0,0,0") (inst "selectSK=arr_462"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "112")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "replace_known_left" (formula "74") (term "0,0,0,0") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "48"))
                                                               (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "112")) (ifInst ""  (formula "34")))
                                                               (rule "applyEqReverse" (formula "75") (term "0,0,0") (ifseqformula "74"))
                                                               (rule "hideAuxiliaryEq" (formula "74"))
                                                               (rule "allLeft" (formula "46") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "allLeft" (formula "60") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                                               (rule "add_literals" (formula "60") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "60") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=arr_463"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "112")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                                               (rule "hideAuxiliaryEq" (formula "60"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_464"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "113")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                               (rule "hideAuxiliaryEq" (formula "61"))
                                                               (rule "allLeft" (formula "62") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "62") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "pullOutSelect" (formula "62") (term "0,0,0") (inst "selectSK=arr_465"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "114")) (ifInst ""  (formula "33")))
                                                               (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                                               (rule "hideAuxiliaryEq" (formula "62"))
                                                               (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "61")))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "allLeft" (formula "55") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_47" (formula "55") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_48" (formula "55") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "77")))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "allLeft" (formula "40") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "allLeft" (formula "32") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "65")))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "allLeft" (formula "77") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_60" (formula "77") (term "2,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_61" (formula "77") (term "2,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "77") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "77") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "77") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "77") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "77") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "77") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "pullOutSelect" (formula "77") (term "1,0,1") (inst "selectSK=arr_466"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "77") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "103")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "77") (term "0,0,0") (ifseqformula "51"))
                                                               (rule "replace_known_right" (formula "77") (term "1,0,0,0") (ifseqformula "102"))
                                                               (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "101")))
                                                               (rule "applyEqReverse" (formula "78") (term "1,0,1") (ifseqformula "77"))
                                                               (rule "hideAuxiliaryEq" (formula "77"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_467"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "110")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                               (rule "hideAuxiliaryEq" (formula "61"))
                                                               (rule "allLeft" (formula "57") (inst "t=i_41"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_73" (formula "57") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_74" (formula "57") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "29")))
                                                               (rule "true_left" (formula "57"))
                                                               (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "replaceKnownSelect_taclet000001011000000000_24" (formula "56") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000001011000000000_25" (formula "56") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,2,2,0,1"))
                                                               (rule "add_literals" (formula "56") (term "0,0,2,2,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "pullOutSelect" (formula "56") (term "2,0,1") (inst "selectSK=arr_468"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")))
                                                               (rule "applyEqReverse" (formula "57") (term "2,0,1") (ifseqformula "56"))
                                                               (rule "hideAuxiliaryEq" (formula "56"))
                                                               (rule "allLeft" (formula "61") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "61") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "61"))
                                                               (rule "pullOutSelect" (formula "61") (term "0,0,0") (inst "selectSK=arr_469"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "110")) (ifInst ""  (formula "18")))
                                                               (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                                               (rule "hideAuxiliaryEq" (formula "61"))
                                                               (rule "allLeft" (formula "32") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "66")))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "allLeft" (formula "37") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "allLeft" (formula "37") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "62")))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "allLeft" (formula "41") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "allLeft" (formula "64") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_470"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "113")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                               (rule "hideAuxiliaryEq" (formula "64"))
                                                               (rule "allLeft" (formula "64") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "64") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                                               (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "64"))
                                                               (rule "pullOutSelect" (formula "64") (term "0,0,0") (inst "selectSK=arr_471"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "113")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                                               (rule "hideAuxiliaryEq" (formula "64"))
                                                               (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_38)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "allLeft" (formula "51") (inst "t=i_41"))
                                                               (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "allLeft" (formula "95") (inst "t=j_13"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_39" (formula "95") (term "0,1"))
                                                               (rule "replaceKnownSelect_taclet111000001011000000000_42" (formula "95") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_40" (formula "95") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet111000001011000000000_43" (formula "95") (term "1,1"))
                                                               (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "105"))
                                                               (builtin "One Step Simplification" (formula "95"))
                                                               (rule "inEqSimp_contradInEq1" (formula "95") (term "0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "95") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "95"))
                                                               (rule "inEqSimp_contradInEq0" (formula "95") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "95"))
                                                               (rule "inEqSimp_homoInEq1" (formula "95"))
                                                               (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                                                               (rule "mul_literals" (formula "95") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "95") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "95") (term "0"))
                                                               (rule "add_literals" (formula "95") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "95") (term "1,0"))
                                                               (rule "add_literals" (formula "95") (term "0"))
                                                               (rule "leq_literals" (formula "95"))
                                                               (rule "closeFalse" (formula "95"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch " forall int j; ( 0 <= j & j < res_min -> result_2[i_38][j]@heapAfter_sort = result_2[1 + i_38][j]@heapAfter_sort) & result_2[i_38]@heapAfter_sort.length <= result_2[1 + i_38]@heapAfter_sort.length"
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,1,1,1,0,0"))
                                                      (rule "translateJavaAddInt" (formula "68") (term "0,2,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,0,1,0"))
                                                      (rule "translateJavaAddInt" (formula "67") (term "0,2,1,1,1,0,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0,1"))
                                                      (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,0,1,1"))
                                                      (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,0"))
                                                      (rule "andLeft" (formula "59"))
                                                      (rule "eqSymm" (formula "66") (term "1"))
                                                      (rule "eqSymm" (formula "63") (term "1"))
                                                      (rule "eqSymm" (formula "64") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "64") (term "0,1"))
                                                      (rule "eqSymm" (formula "69") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "68") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "67") (term "0,1"))
                                                      (rule "eqSymm" (formula "67") (term "0,1,1"))
                                                      (rule "eqSymm" (formula "59") (term "1,0"))
                                                      (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "68") (term "0,2,1,1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "66") (term "0,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "69") (term "0,2,1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "68") (term "0,2,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,2,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,2,0,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                      (rule "inEqSimp_leqRight" (formula "70"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "65") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "68") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "69") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6"))
                                                      (rule "inEqSimp_commuteLeq" (formula "61"))
                                                      (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "70") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "67") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "64") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "65") (term "1,0,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "68") (term "1,0,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "65") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "65") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "68") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "69") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "65") (term "0") (ifseqformula "61"))
                                                      (rule "inEqSimp_homoInEq1" (formula "65") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "65") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,0"))
                                                      (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "65") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "65") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "notLeft" (formula "65"))
                                                      (rule "pullOutSelect" (formula "66") (term "0,0,1") (inst "selectSK=arr_637"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "68") (term "0,1,0,1,1") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "70") (term "1,1,1,0,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "70") (term "1,1,1,0,1,0") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "71") (term "1,1,1,0,0") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "66"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "75")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "76")))
                                                      (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "60") (term "1,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "69") (term "0,1,0,1") (ifseqformula "66"))
                                                      (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "66"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                                      (rule "applyEqReverse" (formula "71") (term "0,1,1") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "67") (term "0,0,1") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "70") (term "1,1,1,0,1,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,1,0,1,1") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "67") (term "0,1,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "71") (term "1,1,1,0,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "70") (term "1,1,1,0,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "61") (term "0,1") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "60") (term "1,1,1,0") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "69") (term "0,1,0,1") (ifseqformula "66"))
                                                      (rule "applyEqReverse" (formula "64") (term "0,0") (ifseqformula "66"))
                                                      (rule "hideAuxiliaryEq" (formula "66"))
                                                      (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "61") (term "1") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "64"))
                                                      (rule "eqSymm" (formula "66") (term "1"))
                                                      (rule "applyEq" (formula "67") (term "1,0,1,1") (ifseqformula "64"))
                                                      (rule "applyEq" (formula "68") (term "1,0,1") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "false_right" (formula "68"))
                                                      (rule "pullOutSelect" (formula "60") (term "1,0,1,0") (inst "selectSK=arr_638"))
                                                      (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "60"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                                      (rule "applyEqReverse" (formula "61") (term "1,0,1,0") (ifseqformula "60"))
                                                      (rule "applyEqReverse" (formula "62") (term "0,0") (ifseqformula "60"))
                                                      (rule "hideAuxiliaryEq" (formula "60"))
                                                      (rule "pullOutSelect" (formula "69") (term "1,0,1,0,0") (inst "selectSK=arr_639"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "69") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "69") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "70") (term "0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "68") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                      (rule "replaceKnownSelect_taclet100001011000000000_25" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_26" (formula "1") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                      (rule "eqSymm" (formula "70") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "69") (term "1,0,1,1,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "75"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                      (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "69") (term "1,1,1,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "70") (term "0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "69") (term "1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "70") (term "1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "68") (term "1,0,1,1,0"))
                                                      (rule "eqSymm" (formula "69") (term "1,0,0"))
                                                      (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "69"))
                                                      (rule "allRight" (formula "69") (inst "sk=j_22"))
                                                      (rule "impRight" (formula "69"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEqRigid" (formula "70") (term "1,1,1,0,0") (ifseqformula "68"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "68"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "68"))
                                                      (rule "applyEqRigid" (formula "69") (term "1,0,1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "69"))
                                                      (rule "notLeft" (formula "69"))
                                                      (rule "inEqSimp_leqRight" (formula "69"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "pullOutSelect" (formula "70") (term "1") (inst "selectSK=arr_640"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
                                                      (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_641"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
                                                      (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_642"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_643"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "nnf_ex2all" (formula "73"))
                                                      (rule "nnf_imp2or" (formula "67") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "67") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                      (rule "nnf_notAll" (formula "1") (term "1,1,0"))
                                                      (rule "nnf_imp2or" (formula "1") (term "0,0,1,1,0"))
                                                      (rule "nnf_notOr" (formula "1") (term "0,1,1,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "arrayLengthIsAShort" (formula "63") (term "1,1,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "true_left" (formula "63"))
                                                      (rule "arrayLengthNotNegative" (formula "65") (term "1,1,0"))
                                                      (rule "ex_pull_out3" (formula "1") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "commute_or" (formula "1") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "1") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "1") (term "1,0,0,1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "72") (term "0"))
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "true_left" (formula "72"))
                                                      (rule "arrayLengthNotNegative" (formula "72") (term "0"))
                                                      (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                                                      (rule "ex_pull_out3" (formula "1") (term "0"))
                                                      (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                                      (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                      (rule "commute_or" (formula "1") (term "0,1,0,0"))
                                                      (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                                      (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "notLeft" (formula "5"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "76")))
                                                         (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "true_left" (formula "67"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_25" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_26" (formula "53") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "true_left" (formula "53"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_38"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "48") (term "0,1"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_23" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_24" (formula "53") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "78"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "true_left" (formula "53"))
                                                            (rule "commute_and_2" (formula "1") (term "0,0"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_22"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_31" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_32" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100001011000000000_33" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00100001011000000000_34" (formula "66") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "66") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "66") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "66"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "eqSymm" (formula "80"))
                                                               (rule "commute_and" (formula "1") (term "0,0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                                  (rule "close" (formula "81") (ifseqformula "3"))
                                                               )
                                                               (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                                  (rule "referencedObjectIsCreatedRight" (formula "76") (ifseqformula "77"))
                                                                  (rule "close" (formula "76") (ifseqformula "43"))
                                                               )
                                                            )
                                                            (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "76") (ifseqformula "79"))
                                                               (rule "close" (formula "76") (ifseqformula "43"))
                                                            )
                                                         )
                                                         (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "68") (term "0"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "true_left" (formula "68"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_23" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_24" (formula "53") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "77"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "true_left" (formula "53"))
                                                            (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_25" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_26" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "notRight" (formula "76"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_38"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "48") (term "0,1"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_22"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_31" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_32" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0100001011000000000_33" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10100001011000000000_34" (formula "66") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "66") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "applyEq" (formula "79") (term "0") (ifseqformula "66"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "close" (formula "80") (ifseqformula "4"))
                                                            )
                                                            (branch " result_2[i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "76") (ifseqformula "78"))
                                                               (rule "close" (formula "76") (ifseqformula "43"))
                                                            )
                                                         )
                                                      )
                                                      (branch " ! result_2[i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "75")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "true_left" (formula "67"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_25" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_26" (formula "53") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "76"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "true_left" (formula "53"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_38"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "48") (term "0,1"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_23" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_24" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "78") (term "0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "78"))
                                                            (rule "notRight" (formula "78"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "78"))
                                                            (rule "commute_and_2" (formula "2") (term "0,0"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_22"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_32" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_31" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01100001011000000000_34" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1100001011000000000_33" (formula "66") (term "1,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "66") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "66") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "66"))
                                                            (rule "commute_and" (formula "2") (term "0,0,0"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0,0") (ifseqformula "43"))
                                                            (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "77"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE TRUE"
                                                               (rule "close" (formula "81") (ifseqformula "4"))
                                                            )
                                                            (branch " result_2[1 + i_38].<created>@anon_heap_sort<<anonHeapFunction>> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "77") (ifseqformula "79"))
                                                               (rule "close" (formula "77") (ifseqformula "43"))
                                                            )
                                                         )
                                                         (branch " ! result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>> = null & ! (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "arrayLengthIsAShort" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "true_left" (formula "67"))
                                                            (rule "arrayLengthNotNegative" (formula "67") (term "0"))
                                                            (rule "allLeft" (formula "53") (inst "t=i_38"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_23" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_24" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "notRight" (formula "77"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "77"))
                                                            (rule "allLeft" (formula "53") (inst "t=add(Z(1(#)), i_38)"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_25" (formula "53") (term "0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001011000000000_26" (formula "53") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                            (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "53") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "53") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notLeft" (formula "53"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "77") (term "0,0") (ifseqformula "75"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "notRight" (formula "77"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "77"))
                                                            (rule "allLeft" (formula "48") (inst "t=i_38"))
                                                            (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "48") (term "0,1"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "commute_and_2" (formula "3") (term "0,0"))
                                                            (rule "allLeft" (formula "66") (inst "t=j_22"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_32" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet100001011000000000_31" (formula "66") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11100001011000000000_34" (formula "66") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1100001011000000000_33" (formula "66") (term "1,1"))
                                                            (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "78"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                                                            (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "66") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "66") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "66"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Exceptional Post (min)"
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,0") (ifseqformula "50"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "0,1,0") (ifseqformula "37"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "65") (term "1,1,0,0"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "66") (term "1,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "66") (term "0,2,1,1,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,1,1,1,0,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "66") (term "0,2,0,1,1"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,1,1,0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "63") (term "0,2,0,1,0,0,0,1"))
                                                   (rule "translateJavaAddInt" (formula "63") (term "0,2,0,1,0,1,1,0,1"))
                                                   (rule "translateJavaAddInt" (formula "63") (term "0,2,0,1,0,1,0,1"))
                                                   (rule "translateJavaAddInt" (formula "63") (term "0,2,0,1,0,1,1,1,0,1"))
                                                   (rule "andLeft" (formula "63"))
                                                   (rule "andLeft" (formula "64"))
                                                   (rule "andLeft" (formula "63"))
                                                   (rule "andLeft" (formula "65"))
                                                   (rule "notLeft" (formula "63"))
                                                   (rule "close" (formula "67") (ifseqformula "66"))
                                                )
                                                (branch "Pre (min)"
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "wellFormedAnonEQ" (formula "63") (ifseqformula "50"))
                                                   (rule "wellFormedAnonEQ" (formula "63") (term "0") (ifseqformula "37"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "64") (term "1,1,0,0"))
                                                   (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_retrieveSortedMessages,length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38))),length(byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#)))))))_0001011000000000_21" (formula "65") (term "1,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "64") (term "0,2,1,1,0,1,0"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,1,1,1,0,0"))
                                                   (rule "translateJavaAddInt" (formula "65") (term "0,2,0,1,1"))
                                                   (rule "translateJavaAddInt" (formula "64") (term "0,2,1,1,1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "58") (term "1,0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "62") (term "0,1"))
                                                   (rule "eqSymm" (formula "61") (term "1"))
                                                   (rule "eqSymm" (formula "62") (term "0,1,1"))
                                                   (rule "eqSymm" (formula "58") (term "1,0,0,1"))
                                                   (rule "eqSymm" (formula "65") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "64") (term "1,0,1,1,0"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "13")) (ifInst ""  (formula "49")))
                                                   (rule "closeTrue" (formula "63"))
                                                )
                                             )
                                             (branch "Exceptional Post (min)"
                                                (builtin "One Step Simplification" (formula "59"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,0") (ifseqformula "36"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_38))),length(byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38)))))_001011000000000_20" (formula "57") (term "1,1,0,0,0"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_min(heapAfter_sort,length(byte[]_select(heapAfter_sort,result_2,arr(i_38))),length(byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38)))))_001011000000000_20" (formula "57") (term "1,1,0,0,0,1"))
                                                (rule "translateJavaAddInt" (formula "61") (term "0,2,0,2,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "61") (term "0,2,1,1,0,1,0"))
                                                (rule "translateJavaAddInt" (formula "61") (term "0,2,1,1,1,0,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,2,1,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,1,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "62") (term "0,2,0,1,1"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "notLeft" (formula "59"))
                                                (rule "close" (formula "62") (ifseqformula "61"))
                                             )
                                             (branch "Pre (min)"
                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "47")))
                                                (rule "closeTrue" (formula "59"))
                                             )
                                          )
                                          (branch "Exceptional Post (compare)"
                                             (builtin "One Step Simplification" (formula "57"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#))))))_01011000000000_19" (formula "59") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0") (ifseqformula "35"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,1,1,0,0,1,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,0,2,1,1,0,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,1,0,1,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,0,2,1,1,0,0,0,1,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,1,1,0,1,1,0,0,0,0,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,0,1,1,1,0,0,1"))
                                             (rule "andLeft" (formula "57"))
                                             (rule "andLeft" (formula "58"))
                                             (rule "andLeft" (formula "57"))
                                             (rule "notLeft" (formula "57"))
                                             (rule "close" (formula "60") (ifseqformula "59"))
                                          )
                                          (branch "Pre (compare)"
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_retrieveSortedMessages,byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(i_38)),byte[]_select(heapAfter_retrieveSortedMessages,result_2,arr(javaAddInt(i_38,Z(1(#))))))_01011000000000_19" (formula "58") (term "0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1,1") (ifseqformula "48"))
                                             (rule "wellFormedAnonEQ" (formula "57") (term "0,0,1") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1,0,1") (ifseqformula "48"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,1,1") (ifseqformula "35"))
                                             (rule "wellFormedAnonEQ" (formula "57") (term "0,0,0,1") (ifseqformula "35"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,1,0,1") (ifseqformula "35"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,0,0,1,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,0,0,1,0"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,0,1,1,1,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,0,1,0,1,1,1"))
                                             (rule "translateJavaAddInt" (formula "57") (term "0,2,1,0,0,0,1,1,1"))
                                             (rule "eqSymm" (formula "56") (term "1,0,0,1"))
                                             (rule "eqSymm" (formula "56") (term "1,0,1,1,0,0"))
                                             (rule "replace_known_left" (formula "57") (term "1,0,0,1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "11")) (ifInst ""  (formula "34")))
                                             (rule "polySimp_elimSub" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,2,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,2,1,0,0,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,2,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,2,1,0,1,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,2,1,0,1,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "4") (term "1"))
                                             (rule "inEqSimp_leqRight" (formula "58"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "pullOutSelect" (formula "57") (term "1,1,1,0,0,1") (inst "selectSK=arr_114"))
                                             (rule "applyEq" (formula "58") (term "1,1,1,0,1,0,0") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,1,1,0,0,0") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,1") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "1,1,1,0,1,1,0,0") (ifseqformula "57"))
                                             (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,0,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,1,0,0") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,1,1,1,1,0,0,0") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,1,1,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,1,0,1,1,0,0") (ifseqformula "57"))
                                             (rule "hideAuxiliaryEq" (formula "57"))
                                             (rule "pullOutSelect" (formula "57") (term "1,0,1,0,0,1") (inst "selectSK=arr_115"))
                                             (rule "applyEq" (formula "58") (term "0,2,1,1,1,0,0,0") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "0,2,1,1,1,0,0,0,1") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "0,0,1,1") (ifseqformula "57"))
                                             (rule "applyEq" (formula "58") (term "1,0,1,0,1,1,0,0") (ifseqformula "57"))
                                             (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "58") (term "1,0,1,0,0,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,2,1,1,1,0,0,0") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,2,1,1,1,0,0,0,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "0,0,1,1") (ifseqformula "57"))
                                             (rule "applyEqReverse" (formula "58") (term "1,0,1,0,1,1,0,0") (ifseqformula "57"))
                                             (rule "hideAuxiliaryEq" (formula "57"))
                                             (rule "pullOutSelect" (formula "58") (term "1,0,0,0,1,0,1") (inst "selectSK=arr_116"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                             (rule "replaceKnownSelect_taclet201011000000000_20" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_21" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "58") (term "0,0,1,1") (inst "selectSK=arr_117"))
                                             (rule "applyEq" (formula "59") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                             (rule "replaceKnownSelect_taclet201011000000000_22" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_23" (formula "1") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "59") (term "0,0,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,0,0,0,1,1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "57") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "57") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "57") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "57") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,1,0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "0,1"))
                                             (rule "commute_or_2" (formula "58") (term "1,1,1"))
                                             (rule "shift_paren_or" (formula "58") (term "1,1"))
                                             (rule "shift_paren_or" (formula "58") (term "0,0,1"))
                                             (rule "commute_or_2" (formula "58") (term "0,1"))
                                             (rule "shift_paren_or" (formula "58") (term "0,1,1"))
                                             (rule "orLeft" (formula "57"))
                                             (branch "exists int i; ( i >= 0 & i <= -1 + verif.selectvoting.system.core.Utils.min(result_2[i_38]@anon_heap_sort<<anonHeapFunction>>.length, result_2[ 1 + i_38]@anon_heap_sort<<anonHeapFunction>>.length) @heapAfter_sort & ( (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>)[i]@heapAfter_sort >= 1 + (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>)[i]@heapAfter_sort & forall int j; ( j <= -1 | j >= i | (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>)[j]@heapAfter_sort = (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>)[j]@heapAfter_sort)))"
                                                (rule "exLeft" (formula "57") (inst "sk=i_39"))
                                                (rule "andLeft" (formula "57"))
                                                (rule "andLeft" (formula "57"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "inEqSimp_homoInEq0" (formula "58"))
                                                (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1"))
                                                (rule "mul_literals" (formula "58") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                                (rule "pullOutSelect" (formula "59") (term "1,1") (inst "selectSK=arr_118"))
                                                (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_119"))
                                                (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "shift_paren_and" (formula "63"))
                                                (rule "arrayLengthIsAShort" (formula "53") (term "1,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "arrayLengthNotNegative" (formula "53") (term "1,1,1,0,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_38"))
                                                (rule "replaceKnownSelect_taclet201011000000000_20" (formula "45") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_21" (formula "45") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "replace_known_right" (formula "60") (term "0,0,0,0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "64")))
                                                (rule "ifthenelse_negated" (formula "60") (term "0"))
                                                (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_38)"))
                                                (rule "replaceKnownSelect_taclet201011000000000_22" (formula "45") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_23" (formula "45") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "replace_known_right" (formula "61") (term "0,0,0,0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "64")))
                                                (rule "ifthenelse_negated" (formula "61") (term "0"))
                                                (rule "allLeft" (formula "40") (inst "t=i_38"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "40") (term "0,1"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "ifthenelse_split" (formula "60") (term "0"))
                                                (branch " (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "orRight" (formula "66"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "67") (ifseqformula "64"))
                                                   (rule "close" (formula "67") (ifseqformula "35"))
                                                )
                                                (branch " (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "60"))
                                                   (rule "hideAuxiliaryEq" (formula "60"))
                                                   (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                   (rule "mul_literals" (formula "61") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                   (rule "ifthenelse_split" (formula "60") (term "0"))
                                                   (branch " (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_left" (formula "66") (term "0,0,1") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "orRight" (formula "66"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "67") (ifseqformula "65"))
                                                      (rule "close" (formula "67") (ifseqformula "35"))
                                                   )
                                                   (branch " (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>).<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "61") (term "1,1") (ifseqformula "60"))
                                                      (rule "hideAuxiliaryEq" (formula "60"))
                                                      (rule "replace_known_right" (formula "66") (term "0,0,1") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "inEqSimp_homoInEq0" (formula "60"))
                                                      (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "60") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                                      (rule "mul_literals" (formula "60") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                                      (rule "arrayLengthNotNegative" (formula "59") (term "2,0"))
                                                      (rule "arrayLengthNotNegative" (formula "60") (term "1,0"))
                                                      (rule "arrayLengthIsAShort" (formula "61") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "arrayLengthIsAShort" (formula "61") (term "2,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "andRight" (formula "68"))
                                                      (branch "Case 1"
                                                         (rule "orRight" (formula "68"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "69") (ifseqformula "67"))
                                                         (rule "close" (formula "69") (ifseqformula "35"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "orRight" (formula "68"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "69") (ifseqformula "66"))
                                                         (rule "close" (formula "69") (ifseqformula "35"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " forall int j; ( j <= -1 | j >= verif.selectvoting.system.core.Utils.min(result_2[i_38]@anon_heap_sort<<anonHeapFunction>>.length, result_2[ 1 + i_38]@anon_heap_sort<<anonHeapFunction>>.length) @heapAfter_sort | (result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>)[j]@heapAfter_sort = (result_2[i_38]@anon_heap_sort<<anonHeapFunction>>)[j]@heapAfter_sort) & result_2[1 + i_38]@anon_heap_sort<<anonHeapFunction>>.length >= result_2[i_38]@anon_heap_sort<<anonHeapFunction>>.length"
                                                (rule "andLeft" (formula "57"))
                                                (rule "shift_paren_and" (formula "59"))
                                                (rule "arrayLengthIsAShort" (formula "55") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "arrayLengthNotNegative" (formula "53") (term "1,1,1,0,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_38"))
                                                (rule "replaceKnownSelect_taclet201011000000000_20" (formula "45") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_21" (formula "45") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "45") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "replace_known_right" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "60")))
                                                (rule "allLeft" (formula "40") (inst "t=i_38"))
                                                (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "40") (term "0,1"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_38)"))
                                                (rule "replaceKnownSelect_taclet201011000000000_22" (formula "45") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet201011000000000_23" (formula "45") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "60")))
                                                (rule "arrayLengthNotNegative" (formula "58") (term "1,1,1,0,0"))
                                                (rule "arrayLengthNotNegative" (formula "59") (term "2,1,1,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "60") (term "1,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "arrayLengthIsAShort" (formula "61") (term "0"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "true_left" (formula "61"))
                                                (rule "andRight" (formula "64"))
                                                (branch "Case 1"
                                                   (rule "orRight" (formula "64"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "65") (ifseqformula "63"))
                                                   (rule "close" (formula "65") (ifseqformula "35"))
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "64"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "65") (ifseqformula "62"))
                                                   (rule "close" (formula "65") (ifseqformula "35"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Exceptional Post (compare)"
                                          (builtin "One Step Simplification" (formula "54"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "2") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0") (ifseqformula "34"))
                                          (rule "translateJavaAddInt" (formula "56") (term "0,2,2,0"))
                                          (rule "andLeft" (formula "54"))
                                          (rule "andLeft" (formula "54"))
                                          (rule "andLeft" (formula "56"))
                                          (rule "notLeft" (formula "54"))
                                          (rule "close" (formula "57") (ifseqformula "56"))
                                       )
                                       (branch "Pre (compare)"
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "2") (term "0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,1,1") (ifseqformula "34"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0,1") (ifseqformula "34"))
                                          (rule "translateJavaAddInt" (formula "55") (term "0,2,2,0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "55") (term "0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1"))
                                          (rule "inEqSimp_leqRight" (formula "55"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "pullOutSelect" (formula "55") (term "0,0,0,1") (inst "selectSK=arr_110"))
                                          (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "56") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "56") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "55") (term "0,0,1,0") (inst "selectSK=arr_111"))
                                          (rule "applyEq" (formula "56") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "56") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "56") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0,1,1,1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_112"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                          (rule "replaceKnownSelect_taclet21011000000000_21" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet21011000000000_22" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_113"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                          (rule "replaceKnownSelect_taclet21011000000000_19" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet21011000000000_20" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "shift_paren_or" (formula "55") (term "0,1"))
                                          (rule "shift_paren_or" (formula "55") (term "1,1"))
                                          (rule "shift_paren_and" (formula "55"))
                                          (rule "allLeft" (formula "44") (inst "t=i_38"))
                                          (rule "replaceKnownSelect_taclet21011000000000_19" (formula "44") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet21011000000000_20" (formula "44") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,1"))
                                          (rule "leq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "replace_known_right" (formula "56") (term "0,0,0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")))
                                          (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_38)"))
                                          (rule "replaceKnownSelect_taclet21011000000000_21" (formula "44") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet21011000000000_22" (formula "44") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,1"))
                                          (rule "leq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "replace_known_right" (formula "57") (term "0,0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "55")))
                                          (rule "allLeft" (formula "39") (inst "t=i_38"))
                                          (rule "replaceKnownQuery_verif_selectvoting_system_core_Utils_compare(heapAfter_sort,byte[]_select(heapAfter_sort,result_2,arr(i_38)),byte[]_select(heapAfter_sort,result_2,arr(add(Z(1(#)),i_38))))_1011000000000_18" (formula "39") (term "0,1"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "arrayLengthNotNegative" (formula "52") (term "1,1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "53") (term "1,1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "andRight" (formula "58"))
                                          (branch "Case 1"
                                             (rule "orRight" (formula "58"))
                                             (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "57"))
                                             (rule "close" (formula "59") (ifseqformula "34"))
                                          )
                                          (branch "Case 2"
                                             (rule "orRight" (formula "58"))
                                             (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "56"))
                                             (rule "close" (formula "59") (ifseqformula "34"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "nonNull" (formula "51") (term "1") (inst "i=i"))
                                    (rule "sub_literals" (formula "51") (term "2,1,0,1,1,1"))
                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "55")))
                                    (rule "greater_literals" (formula "51") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1"))
                                    (rule "nonNull" (formula "51") (term "0") (inst "i=i"))
                                    (rule "sub_literals" (formula "51") (term "2,1,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "54")))
                                    (rule "greater_literals" (formula "51") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "51") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "andRight" (formula "51"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "51") (inst "sk=i_37"))
                                       (rule "orRight" (formula "51"))
                                       (rule "notRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_109"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "56"))
                                       (rule "allLeft" (formula "53") (inst "t=i_37"))
                                       (rule "replaceKnownSelect_taclet0111000000000_18" (formula "53") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0111000000000_19" (formula "53") (term "0,0,0,0"))
                                       (rule "narrowSelectArrayType" (formula "53") (term "0,0,0,0") (ifseqformula "46") (ifseqformula "57"))
                                       (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                       (rule "leq_literals" (formula "53") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "53"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "51") (inst "sk=i_36"))
                                       (rule "orRight" (formula "51"))
                                       (rule "notRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_107"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "33") (ifseqformula "57"))
                                       (rule "allLeft" (formula "43") (inst "t=i_36"))
                                       (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                       (rule "leq_literals" (formula "43") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "43") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "notLeft" (formula "43"))
                                       (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_108"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                                       (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                       (rule "close" (formula "55") (ifseqformula "4"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "wellFormedAnonEQ" (formula "51") (term "1") (ifseqformula "31"))
                           (rule "wellFormedAnonEQ" (formula "51") (term "0") (ifseqformula "44"))
                           (rule "wellFormedAnonEQ" (formula "51") (term "0,0") (ifseqformula "31"))
                           (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "30")) (ifInst ""  (formula "43")) (ifInst ""  (formula "7")) (ifInst ""  (formula "30")))
                           (rule "closeTrue" (formula "51"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andLeft" (formula "1"))
                        (rule "close" (formula "71") (ifseqformula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "replaceKnownSelect_taclet00000_16" (formula "69") (term "0,0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "69") (term "0,0,0,1"))
                     (rule "replaceKnownSelect_taclet00000_16" (formula "69") (term "0,1,1,0,0,1,1"))
                     (rule "replaceKnownSelect_taclet00000_16" (formula "69") (term "1,0,0,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "69") (term "0,1,1,0,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "69") (term "1,0,0,1,0,1,1"))
                     (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                     (builtin "One Step Simplification" (formula "69"))
                     (rule "andRight" (formula "69"))
                     (branch "Case 1"
                        (rule "allRight" (formula "69") (inst "sk=i_35"))
                        (rule "orRight" (formula "69"))
                        (rule "notRight" (formula "70"))
                        (rule "orRight" (formula "70"))
                        (rule "inEqSimp_leqRight" (formula "70"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_105"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "allLeft" (formula "53") (inst "t=i_35"))
                        (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "53") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "53"))
                        (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                        (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                        (rule "add_literals" (formula "53") (term "0,0,1"))
                        (rule "leq_literals" (formula "53") (term "0,1"))
                        (builtin "One Step Simplification" (formula "53"))
                        (rule "notLeft" (formula "53"))
                        (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_106"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                        (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "54") (term "0") (ifseqformula "46") (ifseqformula "57"))
                        (rule "close" (formula "54") (ifseqformula "3"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "69") (inst "sk=i_34"))
                        (rule "orRight" (formula "69"))
                        (rule "notRight" (formula "70"))
                        (rule "orRight" (formula "70"))
                        (rule "inEqSimp_geqRight" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "71"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_104"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "21")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "allLeft" (formula "16") (inst "t=i_34"))
                        (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_literals" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeFalse" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0,0,0") (ifseqformula "31"))
                  (rule "allRight" (formula "69") (inst "sk=f_0"))
                  (rule "allRight" (formula "69") (inst "sk=o_0"))
                  (rule "orRight" (formula "69"))
                  (rule "pullOutSelect" (formula "70") (term "1") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "70"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Exceptional Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "59"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "43") (term "1,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "43") (term "1,1,0,0,1,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0,1,1") (ifseqformula "31"))
               (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "43") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "31"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "notLeft" (formula "44"))
               (rule "close" (formula "47") (ifseqformula "46"))
            )
            (branch "Pre (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "41")))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "0,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "1,0,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "0,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "1,0,0,1,0,1"))
               (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "56"))
               (builtin "One Step Simplification" (formula "57"))
               (rule "allRight" (formula "57") (inst "sk=i_12"))
               (rule "impRight" (formula "57"))
               (rule "notRight" (formula "58"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_88"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "21")))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "allLeft" (formula "16") (inst "t=i_12"))
               (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "16") (term "0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "16"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "Precondition"
            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1") (ifseqformula "24"))
            (rule "wellFormedAnonEQ" (formula "48") (term "1,0") (ifseqformula "24"))
            (rule "replace_known_left" (formula "48") (term "1,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")))
            (rule "allRight" (formula "48") (inst "sk=i_20"))
            (rule "impRight" (formula "48"))
            (rule "notRight" (formula "49"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")))
            (rule "sub_literals" (formula "33") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_4"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "31"))
            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "31"))
            (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "31"))
            (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "31"))
            (rule "hideAuxiliaryEq" (formula "31"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_103"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "15")))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_imp2or" (formula "31") (term "0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "32") (ifseqformula "6"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "34"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "32") (inst "i=i"))
            (rule "greater_literals" (formula "32") (term "0,1"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "32"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
            (rule "applyEq" (formula "40") (term "0") (ifseqformula "34"))
            (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
            (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "34"))
            (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
            (rule "hideAuxiliaryEq" (formula "34"))
            (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
            (rule "applyEq" (formula "39") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
            (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "33"))
            (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
            (rule "hideAuxiliaryEq" (formula "33"))
            (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
            (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "32"))
            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
            (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "32"))
            (rule "hideAuxiliaryEq" (formula "32"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_imp2or" (formula "32") (term "0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "32") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
            (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
            (rule "mul_literals" (formula "32") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "31") (term "0"))
            (rule "allLeft" (formula "10") (inst "t=i_20"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
            (rule "qeq_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
         (branch "Usage"
            (builtin "One Step Simplification" (formula "32"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,0,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,0,0,1") (ifseqformula "24"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "true_left" (formula "39"))
            (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "37"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "30") (inst "i=i"))
            (rule "greater_literals" (formula "30") (term "0,1"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "30") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_0"))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "44") (term "0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "43") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_1"))
            (rule "simplifySelectOfAnon" (formula "35"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "40") (term "0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "35") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "35") (term "0"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "36") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "39") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "35") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "33") (term "0") (inst "i_0=i_0") (inst "i=i"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")))
            (rule "wellFormedAnon" (formula "33") (term "0,1,0"))
            (rule "wellFormedAnonEQ" (formula "33") (term "1,1,0") (ifseqformula "24"))
            (rule "wellFormedAnonEQ" (formula "33") (term "0,0,1,0") (ifseqformula "24"))
            (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,1,0,0"))
            (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,1,0,0"))
            (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,1,1,0,0"))
            (rule "eqSymm" (formula "33") (term "1"))
            (rule "replace_known_left" (formula "33") (term "1,1,1,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "37")) (ifInst ""  (formula "1")))
            (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "nonNull" (formula "33") (term "1,1,1,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "33") (term "2,1,0,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "nonNull" (formula "33") (term "0,1,1,1,0") (inst "i=i"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1,1,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
            (rule "greater_literals" (formula "33") (term "0,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "38"))
            (rule "shift_paren_or" (formula "39"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,1,1,1,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,1,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,1,1,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,1,1,1,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,1,1,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,1,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "33") (ifseqformula "7"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "nonNull" (formula "35") (inst "i=i"))
            (rule "greater_literals" (formula "35") (term "0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "sub_literals" (formula "35") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "52") (term "0"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "51") (term "0"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "50") (term "0"))
            (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "49") (term "0"))
            (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "62")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_12" (formula "49") (term "0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "36") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "48") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "35") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
            (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_14" (formula "48") (term "0"))
            (rule "replaceKnownSelect_taclet2000_14" (formula "34") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "33"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "47") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "33") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "33") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
            (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_16" (formula "47") (term "0"))
            (rule "replaceKnownSelect_taclet2000_16" (formula "35") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "34"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "46") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "34") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "commute_or_2" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "ifUnfold" (formula "62") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "62") (term "1") (newnames "x"))
            (rule "arrayLengthNotNegative" (formula "26") (term "1,1,0"))
            (rule "shift_paren_or" (formula "46") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "commute_or" (formula "39") (term "0,0"))
            (rule "commute_or_2" (formula "42") (term "0,1,1,1,1,0"))
            (rule "commute_or_2" (formula "42") (term "0,0,1,1,1,0"))
            (rule "arrayLengthIsAShort" (formula "34") (term "1,1,1,0,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "arrayLengthNotNegative" (formula "34") (term "1,1,1,0,0"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or" (formula "46") (term "0,0"))
            (rule "commute_or_2" (formula "49"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "commute_or" (formula "39") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or" (formula "38") (term "0,0"))
            (rule "arrayLengthIsAShort" (formula "43") (term "1,1,1,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "true_left" (formula "43"))
            (rule "arrayLengthNotNegative" (formula "43") (term "1,1,1,0,0,0,1,0"))
            (rule "inequality_comparison_simple" (formula "67") (term "1"))
            (builtin "One Step Simplification" (formula "67"))
            (rule "replace_known_left" (formula "67") (term "0,0,1,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "67"))
            (rule "commute_or" (formula "44") (term "0,0,1,1,1,1,0"))
            (rule "commute_or" (formula "44") (term "0,0,0,1,1,1,0"))
            (rule "ifSplit" (formula "67"))
            (branch "if x true"
               (builtin "One Step Simplification" (formula "68"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x false"
               (builtin "One Step Simplification" (formula "68"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "67") (term "1"))
               (rule "variableDeclarationAssign" (formula "67") (term "1"))
               (rule "variableDeclaration" (formula "67") (term "1") (newnames "signedResult"))
               (builtin "Use Operation Contract" (formula "67") (newnames "heapBefore_postProcess,result_4,exc_4") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::postProcess([[B)].JML normal_behavior operation contract.0"))
               (branch "Post (postProcess)"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "68"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0") (ifseqformula "31"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "assignment" (formula "71") (term "1"))
                  (builtin "One Step Simplification" (formula "71"))
                  (rule "commute_or_2" (formula "51"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "52") (ifseqformula "9"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "54"))
                  (rule "notLeft" (formula "53"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "nonNull" (formula "54") (inst "i=i"))
                  (rule "sub_literals" (formula "54") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "greater_literals" (formula "54") (term "0,1"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "andLeft" (formula "54"))
                  (rule "notLeft" (formula "54"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "53") (inst "i=i"))
                  (rule "sub_literals" (formula "53") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "greater_literals" (formula "53") (term "0,1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "andLeft" (formula "53"))
                  (rule "notLeft" (formula "53"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "52") (inst "i=i"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "greater_literals" (formula "52") (term "0,1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "52"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                  (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_19" (formula "62") (term "0"))
                  (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_21" (formula "61") (term "0"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                  (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_23" (formula "60") (term "0"))
                  (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                  (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_25" (formula "59") (term "0"))
                  (rule "pullOutSelect" (formula "54") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
                  (rule "simplifySelectOfAnon" (formula "54"))
                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "73")))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "59") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_12" (formula "54") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "54") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "55") (term "0,1,1,1,0,0"))
                  (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "58") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "54") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "54") (term "0,1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "53") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
                  (rule "simplifySelectOfAnon" (formula "53"))
                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "72")))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "58") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_16" (formula "53") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "53") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "54") (term "0,1,1,1,0,0"))
                  (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "hideAuxiliaryEq" (formula "53"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "57") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "53") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "53") (term "0,1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
                  (rule "simplifySelectOfAnon" (formula "52"))
                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "71")))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "57") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_14" (formula "52") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "52") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "53") (term "0,1,1,1,0,0"))
                  (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "hideAuxiliaryEq" (formula "52"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "56") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "52") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "52") (term "0,1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "54") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "52") (term "0"))
                  (rule "nnf_notAnd" (formula "54") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "54") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                  (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                  (rule "methodCallReturn" (formula "73") (term "1"))
                  (rule "assignment" (formula "73") (term "1"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "commute_or_2" (formula "54") (term "0"))
                  (rule "commute_or_2" (formula "53") (term "0"))
                  (rule "commute_or_2" (formula "52") (term "0"))
                  (rule "commute_or" (formula "54") (term "0,0"))
                  (rule "commute_or" (formula "53") (term "0,0"))
                  (rule "commute_or" (formula "52") (term "0,0"))
                  (rule "methodCallEmpty" (formula "73") (term "1"))
                  (rule "tryEmpty" (formula "73") (term "1"))
                  (rule "emptyModality" (formula "73") (term "1"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "56")))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "73") (ifseqformula "9"))
                  (rule "replaceKnownSelect_taclet012000_18" (formula "73") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_19" (formula "73") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet012000_20" (formula "73") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_21" (formula "73") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet012000_22" (formula "73") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_23" (formula "73") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet012000_24" (formula "73") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_25" (formula "73") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                  (rule "nonNull" (formula "73") (term "1") (inst "i=i"))
                  (rule "sub_literals" (formula "73") (term "2,1,0,1,1,1"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                  (rule "greater_literals" (formula "73") (term "0,1"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1"))
                  (rule "nonNull" (formula "73") (term "0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "73") (term "2,1,0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "62")))
                  (rule "greater_literals" (formula "73") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,0"))
                  (rule "nonNull" (formula "73") (term "1,0") (inst "i=i"))
                  (rule "greater_literals" (formula "73") (term "0,1,1,0"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "63")))
                  (rule "sub_literals" (formula "73") (term "2,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "73") (term "0,1"))
                  (rule "nnf_imp2or" (formula "73") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "73") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,1,0"))
                  (rule "andRight" (formula "73"))
                  (branch "Case 1"
                     (rule "andRight" (formula "73"))
                     (branch "Case 1"
                        (rule "allRight" (formula "73") (inst "sk=i_15"))
                        (rule "orRight" (formula "73"))
                        (rule "orRight" (formula "73"))
                        (rule "notRight" (formula "75"))
                        (rule "inEqSimp_leqRight" (formula "74"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_91"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "65"))
                        (rule "allLeft" (formula "23") (inst "t=i_15"))
                        (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1"))
                        (rule "leq_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "closeFalse" (formula "23"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "73") (inst "sk=i_14"))
                        (rule "orRight" (formula "73"))
                        (rule "orRight" (formula "73"))
                        (rule "notRight" (formula "75"))
                        (rule "inEqSimp_leqRight" (formula "74"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_90"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "66"))
                        (rule "allLeft" (formula "25") (inst "t=i_14"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "73") (inst "sk=i_13"))
                     (rule "orRight" (formula "73"))
                     (rule "orRight" (formula "73"))
                     (rule "notRight" (formula "75"))
                     (rule "inEqSimp_geqRight" (formula "75"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "75"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_89"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "20")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "74"))
                     (rule "allLeft" (formula "18") (inst "t=i_13"))
                     (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1"))
                     (rule "leq_literals" (formula "18") (term "0,1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "18") (term "0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "closeFalse" (formula "18"))
                  )
               )
               (branch "Exceptional Post (postProcess)"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "68"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,0") (ifseqformula "31"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "53"))
                  (rule "notLeft" (formula "51"))
                  (rule "close" (formula "55") (ifseqformula "54"))
               )
               (branch "Pre (postProcess)"
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "51")))
                  (rule "wellFormedAnon" (formula "67") (term "0,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1") (ifseqformula "31"))
                  (rule "wellFormedAnonEQ" (formula "67") (term "0,0,1") (ifseqformula "31"))
                  (rule "replace_known_left" (formula "67") (term "1,0,1") (ifseqformula "48"))
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "7")) (ifInst ""  (formula "30")))
                  (rule "nonNull" (formula "67") (term "1,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,1,0"))
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "51")))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0"))
                  (rule "commute_or_2" (formula "67") (term "1"))
                  (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "67") (term "0") (ifseqformula "9"))
                  (rule "nonNull" (formula "67") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "67") (term "0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "67") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
                  (rule "applyEq" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_16" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0,0") (ifseqformula "60"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,1,1,1,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
                  (rule "applyEq" (formula "68") (term "1,0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_14" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,0,0,0,0,0,0") (ifseqformula "56"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0,0,0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "1,0,0,1,0,1,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
                  (rule "applyEq" (formula "68") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_12" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "59"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,0"))
                  (rule "andRight" (formula "67"))
                  (branch "Case 1"
                     (rule "andRight" (formula "67"))
                     (branch "Case 1"
                        (rule "andRight" (formula "67"))
                        (branch "Case 1"
                           (rule "allRight" (formula "67") (inst "sk=i_19"))
                           (rule "orRight" (formula "67"))
                           (rule "notRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "inEqSimp_leqRight" (formula "68"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_102"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "59"))
                           (rule "cut_direct" (formula "53") (term "0,0,0"))
                           (branch "CUT: result_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "54"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "allLeft" (formula "23") (inst "t=i_19"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "23") (inst "t=i_19"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "CUT: result_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "allLeft" (formula "23") (inst "t=i_19"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "23") (inst "t=i_19"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "67") (inst "sk=i_18"))
                           (rule "orRight" (formula "67"))
                           (rule "notRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "inEqSimp_leqRight" (formula "68"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_101"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "60"))
                           (rule "cut_direct" (formula "53") (term "0,0,0"))
                           (branch "CUT: result_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "54"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "25") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "CUT: result_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "cut_direct" (formula "52") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "25") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                 (rule "add_zero_right" (formula "25") (term "0"))
                                 (rule "leq_literals" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,1"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "67") (inst "sk=i_17"))
                        (rule "orRight" (formula "67"))
                        (rule "notRight" (formula "68"))
                        (rule "orRight" (formula "68"))
                        (rule "inEqSimp_geqRight" (formula "69"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "69"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_100"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "20")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "68"))
                        (rule "cut_direct" (formula "53") (term "0,0,0"))
                        (branch "CUT: result_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "true_left" (formula "54"))
                           (rule "cut_direct" (formula "52") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "allLeft" (formula "18") (inst "t=i_17"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "2"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "allLeft" (formula "18") (inst "t=i_17"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "CUT: result_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "cut_direct" (formula "52") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "allLeft" (formula "18") (inst "t=i_17"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "allLeft" (formula "18") (inst "t=i_17"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "67") (inst "sk=i_16"))
                     (rule "orRight" (formula "67"))
                     (rule "orRight" (formula "67"))
                     (rule "notRight" (formula "69"))
                     (rule "inEqSimp_leqRight" (formula "68"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_92"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "52") (ifseqformula "55"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                     (rule "ifEqualsNull" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0,1,0") (inst "selectSK=arr_93"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "35") (ifseqformula "56"))
                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "12") (ifseqformula "56"))
                     (rule "commute_and" (formula "4") (term "0"))
                     (rule "cut_direct" (formula "55") (term "0,0,0"))
                     (branch "CUT: result_3 = null TRUE"
                        (builtin "One Step Simplification" (formula "56"))
                        (rule "true_left" (formula "56"))
                        (rule "orLeft" (formula "4"))
                        (branch " arr_93<<selectSK>> = null & ( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)"
                           (rule "andLeft" (formula "4"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "cnf_rightDist" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "cnf_rightDist" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "allLeft" (formula "51") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "51") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_99"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "55")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "allLeft" (formula "52") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "52") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "52") (term "0,0,1"))
                              (rule "leq_literals" (formula "52") (term "0,1"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_98"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                        )
                        (branch " !( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) & anon_entr_arr[i_16]@anon_heap<<anonHeapFunction>> = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "56"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "55")))
                           (rule "allLeft" (formula "50") (inst "t=i_16"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                           (rule "add_literals" (formula "50") (term "0,0,1"))
                           (rule "leq_literals" (formula "50") (term "0,1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "notLeft" (formula "50"))
                           (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_97"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "56") (ifseqformula "4"))
                        )
                     )
                     (branch "CUT: result_3 = null FALSE"
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "orLeft" (formula "4"))
                        (branch " arr_93<<selectSK>> = null & ( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)"
                           (rule "andLeft" (formula "4"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "cnf_rightDist" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "cnf_rightDist" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "allLeft" (formula "51") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_96"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "55")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                           (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "allLeft" (formula "52") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "52") (term "0,0,1"))
                              (rule "leq_literals" (formula "52") (term "0,1"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "52") (term "0,1"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "notLeft" (formula "52"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_95"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "58")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                        )
                        (branch " !( anon_entr_arr.<created> = TRUE | anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) & anon_entr_arr[i_16]@anon_heap<<anonHeapFunction>> = null"
                           (rule "andLeft" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "orRight" (formula "56"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "56")))
                           (rule "allLeft" (formula "50") (inst "t=i_16"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "50") (term "0,0,1"))
                           (rule "leq_literals" (formula "50") (term "0,1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "notLeft" (formula "50"))
                           (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_94"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "56") (ifseqformula "4"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Exceptional Post (sort)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "24") (term "0,2,2,0,1,0,0,1,0,1,1"))
         (rule "andLeft" (formula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "25"))
         (rule "close" (formula "28") (ifseqformula "27"))
      )
      (branch "Pre (sort)"
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")) (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "20")))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
         (rule "nonNull" (formula "36") (term "1,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,1,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "23")))
         (rule "greater_literals" (formula "36") (term "0,1,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "23"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,0"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,1"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "36") (term "0,1") (ifseqformula "3"))
         (rule "replace_known_right" (formula "36") (term "0,1,0,0,0,0,1") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
         (rule "nonNull" (formula "36") (term "1,0,0,1") (inst "i=i"))
         (rule "greater_literals" (formula "36") (term "0,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,0,0,1") (ifseqformula "1") (ifseqformula "26"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,0,1"))
         (rule "nonNull" (formula "36") (term "1,0,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,1,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
         (rule "greater_literals" (formula "36") (term "0,1,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "34"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1"))
         (rule "nonNull" (formula "36") (term "0,0,0,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
         (rule "greater_literals" (formula "36") (term "0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,0,0,0,1") (ifseqformula "1") (ifseqformula "25"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,0,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "andRight" (formula "36"))
         (branch "Case 1"
            (rule "allRight" (formula "36") (inst "sk=i_25"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "36"))
            (rule "notRight" (formula "38"))
            (rule "inEqSimp_leqRight" (formula "37"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "38"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
            (rule "allLeft" (formula "10") (inst "t=i_25"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "36"))
            (branch "Case 1"
               (rule "andRight" (formula "36"))
               (branch "Case 1"
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "allRight" (formula "36") (inst "sk=i_24"))
                     (rule "orRight" (formula "36"))
                     (rule "notRight" (formula "37"))
                     (rule "orRight" (formula "37"))
                     (rule "inEqSimp_geqRight" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                     (rule "allLeft" (formula "17") (inst "t=i_24"))
                     (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "17") (term "0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0"))
                     (rule "add_zero_right" (formula "17") (term "0"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "36") (inst "sk=i_23"))
                     (rule "orRight" (formula "36"))
                     (rule "notRight" (formula "37"))
                     (rule "orRight" (formula "37"))
                     (rule "inEqSimp_geqRight" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                     (rule "allLeft" (formula "19") (inst "t=i_23"))
                     (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "36") (inst "sk=i_22"))
                  (rule "orRight" (formula "36"))
                  (rule "notRight" (formula "37"))
                  (rule "orRight" (formula "37"))
                  (rule "inEqSimp_leqRight" (formula "37"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                  (rule "allLeft" (formula "12") (inst "t=i_22"))
                  (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "12"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "36") (inst "sk=i_21"))
               (rule "orRight" (formula "36"))
               (rule "notRight" (formula "37"))
               (rule "orRight" (formula "37"))
               (rule "inEqSimp_geqRight" (formula "38"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "38"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
               (rule "allLeft" (formula "26") (inst "t=i_21"))
               (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "26") (term "0,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
               (rule "andLeft" (formula "26"))
               (rule "inEqSimp_homoInEq1" (formula "26"))
               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0"))
               (rule "add_zero_right" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26"))
               (rule "closeFalse" (formula "26"))
            )
         )
      )
   )
   (branch "Exceptional Post (extractBallots)"
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "25")))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "close" (formula "16") (ifseqformula "15"))
   )
   (branch "Pre (extractBallots)"
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "25") (term "0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (term "1") (ifseqformula "3"))
      (rule "replace_known_right" (formula "25") (term "0,1,0,1") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
      (rule "nonNull" (formula "25") (term "0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "25") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
      (rule "sub_literals" (formula "25") (term "2,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,0,0,1") (ifseqformula "1") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,1"))
      (rule "nonNull" (formula "25") (term "1,1") (inst "i=i"))
      (rule "greater_literals" (formula "25") (term "0,1,1,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
      (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "23"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1"))
      (rule "nonNull" (formula "25") (term "1,0,1") (inst "i=i"))
      (rule "sub_literals" (formula "25") (term "2,1,0,1,1,1,0,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
      (rule "greater_literals" (formula "25") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "15"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,1,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,0,0,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,1,0,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,1,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1"))
      (rule "andRight" (formula "25"))
      (branch "Case 1"
         (rule "allRight" (formula "25") (inst "sk=i_29"))
         (rule "orRight" (formula "25"))
         (rule "orRight" (formula "25"))
         (rule "notRight" (formula "27"))
         (rule "inEqSimp_geqRight" (formula "27"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "27"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "9") (inst "t=i_29"))
         (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
         (rule "add_literals" (formula "9") (term "0,0,1"))
         (rule "leq_literals" (formula "9") (term "0,1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
      (branch "Case 2"
         (rule "andRight" (formula "25"))
         (branch "Case 1"
            (rule "andRight" (formula "25"))
            (branch "Case 1"
               (rule "allRight" (formula "25") (inst "sk=i_28"))
               (rule "orRight" (formula "25"))
               (rule "notRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "allLeft" (formula "12") (inst "t=i_28"))
               (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
               (rule "add_literals" (formula "12") (term "0,0,1"))
               (rule "leq_literals" (formula "12") (term "0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeFalse" (formula "12"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "25") (inst "sk=i_27"))
               (rule "orRight" (formula "25"))
               (rule "notRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "allLeft" (formula "13") (inst "t=i_27"))
               (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
               (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
               (rule "add_literals" (formula "13") (term "0,0,1"))
               (rule "leq_literals" (formula "13") (term "0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
               (rule "qeq_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "closeFalse" (formula "13"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "25") (inst "sk=i_26"))
            (rule "orRight" (formula "25"))
            (rule "notRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_leqRight" (formula "26"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "27"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "allLeft" (formula "10") (inst "t=i_26"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
(branch "Exceptional Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "17")) (ifInst ""  (formula "1")) (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "22") (term "0,0"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (term "1") (ifseqformula "3"))
   (rule "replace_known_right" (formula "22") (term "0,1,0,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
   (rule "nonNull" (formula "22") (term "1,1") (inst "i=i"))
   (rule "sub_literals" (formula "22") (term "2,1,0,1,1,1,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
   (rule "greater_literals" (formula "22") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "20"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1"))
   (rule "nonNull" (formula "22") (term "0,0,1") (inst "i=i"))
   (rule "greater_literals" (formula "22") (term "0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "11")))
   (rule "sub_literals" (formula "22") (term "2,1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,0,0,1") (ifseqformula "1") (ifseqformula "11"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1"))
   (rule "nonNull" (formula "22") (term "1,0,1") (inst "i=i"))
   (rule "sub_literals" (formula "22") (term "2,1,0,1,1,1,0,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")))
   (rule "greater_literals" (formula "22") (term "0,1,0,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "12"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,0,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,1"))
   (rule "andRight" (formula "22"))
   (branch "Case 1"
      (rule "allRight" (formula "22") (inst "sk=i_33"))
      (rule "orRight" (formula "22"))
      (rule "orRight" (formula "22"))
      (rule "notRight" (formula "24"))
      (rule "inEqSimp_geqRight" (formula "24"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_leqRight" (formula "24"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "allLeft" (formula "9") (inst "t=i_33"))
      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "9") (term "0,0,1"))
      (rule "leq_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
      (rule "qeq_literals" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
   (branch "Case 2"
      (rule "andRight" (formula "22"))
      (branch "Case 1"
         (rule "andRight" (formula "22"))
         (branch "Case 1"
            (rule "allRight" (formula "22") (inst "sk=i_32"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "notRight" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "12") (inst "t=i_32"))
            (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,1"))
            (rule "leq_literals" (formula "12") (term "0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeFalse" (formula "12"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "22") (inst "sk=i_31"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "notRight" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "13") (inst "t=i_31"))
            (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1"))
            (rule "leq_literals" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "closeFalse" (formula "13"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "22") (inst "sk=i_30"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "notRight" (formula "24"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "24"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "10") (inst "t=i_30"))
         (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "leq_literals" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
   )
)
)

}
