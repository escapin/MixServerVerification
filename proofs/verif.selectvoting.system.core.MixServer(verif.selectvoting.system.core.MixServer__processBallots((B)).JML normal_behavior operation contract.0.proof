\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 18 18:03:51 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Mar 18 18:03:51 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:processBallots([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))

(autoModeTime "25907")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "data,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "3"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "nonNull" (formula "11") (inst "i=i"))
(rule "greater_literals" (formula "11") (term "0,1"))
(builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "19")))
(rule "sub_literals" (formula "11") (term "2,1,0"))
(builtin "One Step Simplification" (formula "11"))
(rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "nonNull" (formula "10") (inst "i=i"))
(rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "greater_literals" (formula "10") (term "0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_processBallots,savedHeapBefore_processBallots"))
(builtin "One Step Simplification" (formula "22"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "ballotsAsAMessage"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "commute_or" (formula "9") (term "0,0"))
(builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_checkAndGetBallots,result_0,exc_0") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::checkAndGetBallots([B)].JML normal_behavior operation contract.0"))
(branch "Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
   (rule "assignment" (formula "27") (term "1"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "variableDeclarationAssign" (formula "27") (term "1"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "entr_arr"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "3"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "16"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "nonNull" (formula "16") (inst "i=i"))
   (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "27")))
   (rule "greater_literals" (formula "16") (term "0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "27"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "15") (inst "i=i"))
   (rule "greater_literals" (formula "15") (term "0,1"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
   (rule "sub_literals" (formula "15") (term "2,1,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "nonNull" (formula "14") (inst "i=i"))
   (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")))
   (rule "greater_literals" (formula "14") (term "0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_imp2or" (formula "15") (term "0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "commute_or_2" (formula "13") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or_2" (formula "15") (term "0"))
   (rule "commute_or_2" (formula "14") (term "0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (rule "commute_or" (formula "15") (term "0,0"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_extractBallots,result_1,exc_1") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::extractBallots([B)].JML normal_behavior operation contract.0"))
   (branch "Post (extractBallots)"
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "25")))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "assignment" (formula "32") (term "1"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")))
      (rule "sub_literals" (formula "18") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "3"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "nonNull" (formula "19") (inst "i=i"))
      (rule "greater_literals" (formula "19") (term "0,1"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
      (rule "sub_literals" (formula "19") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "32"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "17") (inst "i=i"))
      (rule "greater_literals" (formula "17") (term "0,1"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")))
      (rule "sub_literals" (formula "17") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "23"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
      (rule "sub_literals" (formula "18") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "24"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "20") (term "0"))
      (rule "commute_or_2" (formula "19") (term "0"))
      (rule "commute_or_2" (formula "17") (term "0"))
      (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
      (rule "commute_or_2" (formula "22") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1") (ifseqformula "1"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "39"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (rule "commute_or" (formula "25") (term "0,0"))
      (rule "commute_or" (formula "24") (term "0,0"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_sort,result_2,exc_2,heapAfter_sort,anon_heap_sort") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::sort([[B)].JML normal_behavior operation contract.0"))
      (branch "Post (sort)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "24") (term "0,2,2,0,1,0,0,1,0,1,1"))
         (rule "andLeft" (formula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "24"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "30"))
         (rule "notLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "0,2,2,0,1,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
         (rule "assignment" (formula "48") (term "1"))
         (builtin "One Step Simplification" (formula "48"))
         (builtin "Block Contract" (formula "48") (newnames "anon_heap,result_3,exc_3,heap_Before_BLOCK,savedHeap_Before_BLOCK,entr_arr_Before_BLOCK,o,f,anon_entr_arr"))
         (branch "Validity"
            (builtin "One Step Simplification" (formula "49"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "24"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "eqSymm" (formula "51") (term "1,0,0,1,0,1"))
            (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")))
            (rule "true_left" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
            (rule "variableDeclarationAssign" (formula "49") (term "1"))
            (rule "variableDeclaration" (formula "49") (term "1"))
            (rule "assignment" (formula "49") (term "1"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,1,1,1,0,0,1"))
            (rule "nonNull" (formula "30") (inst "i=i"))
            (rule "greater_literals" (formula "30") (term "0,1"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
            (rule "sub_literals" (formula "30") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "32") (ifseqformula "33"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_2"))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "29") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "35") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "28") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "48") (term "0,0,1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "48") (term "0,1,1,1,1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "48") (term "0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,1,1,0,0,1"))
            (rule "nnf_notAnd" (formula "48") (term "0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,1,1,1,1,0,0,1"))
            (rule "mul_literals" (formula "48") (term "1,0,0,0,1,1,1,1,1,0,0,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "34") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "33") (ifseqformula "7"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "nonNull" (formula "35") (inst "i=i"))
            (rule "greater_literals" (formula "35") (term "0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "sub_literals" (formula "35") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "narrowSelectArrayType" (formula "35") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "narrowSelectArrayType" (formula "34") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "38") (ifseqformula "39"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "45") (term "0"))
            (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "44") (term "0"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "43") (term "0"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "42") (term "0"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_10" (formula "36") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_10" (formula "36") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "41") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "35") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_12" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "35") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "40") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_13" (formula "34") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
            (rule "replaceKnownSelect_taclet0000_14" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_14" (formula "34") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "39") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "33") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_15" (formula "33") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or" (formula "32") (term "0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or" (formula "38") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_retrieveSortedMessages,result_5,exc_5,heapAfter_retrieveSortedMessages,anon_heap_retrieveSortedMessages") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::retrieveSortedMessages()].JML normal_behavior operation contract.0"))
            (branch "Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "43"))
               (builtin "One Step Simplification" (formula "59"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "43") (term "1,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "43") (term "1,1,0,0,1,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0,1,1") (ifseqformula "31"))
               (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "43") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "andLeft" (formula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0") (ifseqformula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,1,0") (ifseqformula "31"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "47"))
               (rule "andLeft" (formula "48"))
               (rule "andLeft" (formula "48"))
               (rule "andLeft" (formula "50"))
               (rule "notLeft" (formula "49"))
               (rule "notLeft" (formula "48"))
               (rule "orRight" (formula "50"))
               (rule "replace_known_right" (formula "45") (term "1,0,1") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")) (ifInst ""  (formula "50")))
               (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
               (rule "assignment" (formula "68") (term "1"))
               (builtin "One Step Simplification" (formula "68"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "49") (inst "i=i"))
               (rule "greater_literals" (formula "49") (term "0,1"))
               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "52")))
               (rule "sub_literals" (formula "49") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "48") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_3"))
               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "43"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "48") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "48") (term "0"))
               (rule "replaceKnownSelect_taclet00000_16" (formula "49") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "48"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "48") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_17" (formula "48") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "47") (term "0"))
               (rule "nnf_imp2or" (formula "49") (term "0"))
               (rule "nnf_imp2or" (formula "48") (term "0"))
               (rule "nnf_notAnd" (formula "47") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
               (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
               (rule "mul_literals" (formula "47") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
               (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "49") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
               (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
               (rule "mul_literals" (formula "49") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "48") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0"))
               (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
               (rule "mul_literals" (formula "48") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "48") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
               (rule "arrayLengthNotNegative" (formula "34") (term "1,1,1,0,0"))
               (rule "arrayLengthIsAShort" (formula "35") (term "1,1,1,0,0"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "true_left" (formula "35"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "49") (term "0"))
               (rule "commute_or" (formula "50") (term "0,0"))
               (rule "commute_or" (formula "49") (term "0,0"))
               (rule "tryEmpty" (formula "69") (term "1"))
               (rule "blockEmptyLabel" (formula "69") (term "1"))
               (rule "blockEmpty" (formula "69") (term "1"))
               (rule "methodCallEmpty" (formula "69") (term "1"))
               (rule "emptyModality" (formula "69") (term "1"))
               (opengoal " ")
            )
            (branch "Exceptional Post (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "43"))
               (builtin "One Step Simplification" (formula "59"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "43") (term "1,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "43") (term "1,1,0,0,1,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0,1,1") (ifseqformula "31"))
               (rule "translateJavaAddInt" (formula "43") (term "0,2,2,0,1,0,0,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0,1,0,1,1"))
               (rule "andLeft" (formula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "43"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "31"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "notLeft" (formula "44"))
               (rule "close" (formula "47") (ifseqformula "46"))
            )
            (branch "Pre (retrieveSortedMessages)"
               (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "41")))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "0,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "57") (term "1,0,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "0,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "57") (term "1,0,0,1,0,1"))
               (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "56"))
               (builtin "One Step Simplification" (formula "57"))
               (rule "allRight" (formula "57") (inst "sk=i_12"))
               (rule "impRight" (formula "57"))
               (rule "notRight" (formula "58"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_88"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "21")))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "allLeft" (formula "16") (inst "t=i_12"))
               (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "16") (term "0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "16"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "Precondition"
            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1") (ifseqformula "24"))
            (rule "wellFormedAnonEQ" (formula "48") (term "1,0") (ifseqformula "24"))
            (rule "replace_known_left" (formula "48") (term "1,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")))
            (rule "allRight" (formula "48") (inst "sk=i_32"))
            (rule "impRight" (formula "48"))
            (rule "notRight" (formula "49"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")))
            (rule "sub_literals" (formula "33") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_4"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "31"))
            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "31"))
            (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "31"))
            (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "31"))
            (rule "hideAuxiliaryEq" (formula "31"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_169"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "15")))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_imp2or" (formula "31") (term "0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "32") (ifseqformula "6"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "34"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "32") (inst "i=i"))
            (rule "greater_literals" (formula "32") (term "0,1"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "32"))
            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
            (rule "applyEq" (formula "40") (term "0") (ifseqformula "34"))
            (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
            (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
            (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "34"))
            (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
            (rule "hideAuxiliaryEq" (formula "34"))
            (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
            (rule "applyEq" (formula "39") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
            (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
            (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "33"))
            (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
            (rule "hideAuxiliaryEq" (formula "33"))
            (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
            (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "32"))
            (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
            (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "32"))
            (rule "hideAuxiliaryEq" (formula "32"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "nnf_imp2or" (formula "32") (term "0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "32") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
            (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
            (rule "mul_literals" (formula "32") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "31") (term "0"))
            (rule "allLeft" (formula "10") (inst "t=i_32"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
            (rule "qeq_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
         (branch "Usage"
            (builtin "One Step Simplification" (formula "32"))
            (builtin "One Step Simplification" (formula "49"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,0,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,0,0,1") (ifseqformula "24"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "true_left" (formula "39"))
            (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "37"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "pullOutSelect" (formula "57") (term "0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "44") (term "0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "40") (term "0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "34") (term "0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "36") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "35") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "29") (term "0,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "36") (term "0,1,0,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "36") (term "0,1,0,0,0,1,0,0,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "43") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "39") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "33") (term "0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "56") (term "0,1,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "34") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "35") (term "0,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "35") (term "0,1,0,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "28") (term "0,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "35") (term "0,1,0,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "30") (inst "i=i"))
            (rule "greater_literals" (formula "30") (term "0,1"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "30") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_0" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_1" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "36") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet2000_2" (formula "36") (term "0,1,1,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "56"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "39") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_3" (formula "35") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "37"))
            (rule "commute_or_2" (formula "38") (term "1"))
            (rule "Contract_axiom_for_sortedPermIsEqual_in_MixServer" (formula "33") (term "0") (inst "i=i") (inst "i_0=i_0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")))
            (rule "wellFormedAnon" (formula "33") (term "0,1,0"))
            (rule "wellFormedAnonEQ" (formula "33") (term "1,1,0") (ifseqformula "24"))
            (rule "wellFormedAnonEQ" (formula "33") (term "0,0,1,0") (ifseqformula "24"))
            (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,1,1,0,0"))
            (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,1,0,0"))
            (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0,0,1,1,0,0"))
            (rule "translateJavaAddInt" (formula "33") (term "0,2,2,0,1,0,0,1,0,0"))
            (rule "eqSymm" (formula "33") (term "1"))
            (rule "replace_known_left" (formula "33") (term "1,1,1,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "37")) (ifInst ""  (formula "1")))
            (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "0,2,2,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "nonNull" (formula "33") (term "1,1,1,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")))
            (rule "sub_literals" (formula "33") (term "2,1,0,1,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,1,1,1,0"))
            (rule "nonNull" (formula "33") (term "0,1,1,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
            (rule "sub_literals" (formula "33") (term "2,1,0,0,1,1,1,0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,1,1,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "33") (term "0,0,1,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,1,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,1,1,1,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,1,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,1,1,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,1,1,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,1,1,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,1,1,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,1,1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or_2" (formula "32") (term "0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "33") (ifseqformula "7"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "notLeft" (formula "34"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "nonNull" (formula "35") (inst "i=i"))
            (rule "sub_literals" (formula "35") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "greater_literals" (formula "35") (term "0,1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "33") (inst "i=i"))
            (rule "greater_literals" (formula "33") (term "0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "34") (inst "i=i"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "greater_literals" (formula "34") (term "0,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "52") (term "0"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "51") (term "0"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "50") (term "0"))
            (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "49") (term "0"))
            (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "62")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_12" (formula "49") (term "0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "36") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "35"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "48") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "35") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "35") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
            (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_14" (formula "48") (term "0"))
            (rule "replaceKnownSelect_taclet2000_14" (formula "34") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "33"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "47") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "33") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "33") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
            (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
            (rule "replaceKnownSelect_taclet2000_16" (formula "47") (term "0"))
            (rule "replaceKnownSelect_taclet2000_16" (formula "35") (term "0,1,1,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "34"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "46") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "34") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "34") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "nnf_imp2or" (formula "33") (term "0"))
            (rule "commute_or_2" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "34") (term "0"))
            (rule "shift_paren_or" (formula "45"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "33") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
            (rule "mul_literals" (formula "33") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0"))
            (rule "ifUnfold" (formula "62") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "62") (term "1") (newnames "x"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "commute_or" (formula "35") (term "0,0"))
            (rule "commute_or_2" (formula "42") (term "0,1,1,1,1,0"))
            (rule "commute_or_2" (formula "42") (term "0,0,1,1,1,0"))
            (rule "arrayLengthIsAShort" (formula "34") (term "1,1,1,0,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "arrayLengthNotNegative" (formula "34") (term "1,1,1,0,0"))
            (rule "commute_or_2" (formula "39") (term "0"))
            (rule "commute_or" (formula "40") (term "0,0"))
            (rule "commute_or" (formula "46") (term "0,0"))
            (rule "shift_paren_or" (formula "49") (term "0"))
            (rule "commute_or_2" (formula "37") (term "0"))
            (rule "commute_or_2" (formula "38") (term "0"))
            (rule "commute_or" (formula "39") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or" (formula "38") (term "0,0"))
            (rule "arrayLengthIsAShort" (formula "43") (term "1,1,1,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "true_left" (formula "43"))
            (rule "arrayLengthNotNegative" (formula "43") (term "1,1,1,0,0,0,1,0"))
            (rule "inequality_comparison_simple" (formula "67") (term "1"))
            (builtin "One Step Simplification" (formula "67"))
            (rule "replace_known_left" (formula "67") (term "0,0,1,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "67"))
            (rule "commute_or" (formula "44") (term "0,0,1,1,1,1,0"))
            (rule "commute_or" (formula "44") (term "0,0,0,1,1,1,0"))
            (rule "ifSplit" (formula "67"))
            (branch "if x true"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x false"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "68"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "67") (term "1"))
               (rule "variableDeclarationAssign" (formula "67") (term "1"))
               (rule "variableDeclaration" (formula "67") (term "1") (newnames "signedResult"))
               (builtin "Use Operation Contract" (formula "67") (newnames "heapBefore_postProcess,result_4,exc_4") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::postProcess([[B)].JML normal_behavior operation contract.0"))
               (branch "Post (postProcess)"
                  (builtin "One Step Simplification" (formula "68"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0") (ifseqformula "31"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "assignment" (formula "71") (term "1"))
                  (builtin "One Step Simplification" (formula "71"))
                  (rule "commute_or_2" (formula "51"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "52") (ifseqformula "9"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "53"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "54"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "54"))
                  (rule "andLeft" (formula "52"))
                  (rule "nonNull" (formula "54") (inst "i=i"))
                  (rule "greater_literals" (formula "54") (term "0,1"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "sub_literals" (formula "54") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "andLeft" (formula "54"))
                  (rule "notLeft" (formula "54"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "53") (inst "i=i"))
                  (rule "sub_literals" (formula "53") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "greater_literals" (formula "53") (term "0,1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "andLeft" (formula "53"))
                  (rule "notLeft" (formula "53"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "52") (inst "i=i"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "greater_literals" (formula "52") (term "0,1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "52"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                  (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "80"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_19" (formula "62") (term "0"))
                  (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "79"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_21" (formula "61") (term "0"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                  (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "78"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_23" (formula "60") (term "0"))
                  (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                  (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "77"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_25" (formula "59") (term "0"))
                  (rule "pullOutSelect" (formula "54") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
                  (rule "simplifySelectOfAnon" (formula "54"))
                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "73")))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "59") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_12" (formula "54") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "54") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "55") (term "0,1,1,1,0,0"))
                  (rule "eqSymm" (formula "54") (term "0,0,0"))
                  (rule "replace_known_left" (formula "54") (term "0,0,1,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "sortsDisjointModuloNull" (formula "54") (term "0,0"))
                  (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "73"))
                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "76")))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "58") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "54") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "54") (term "0,1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "53") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
                  (rule "simplifySelectOfAnon" (formula "53"))
                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "72")))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "58") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_16" (formula "53") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "53") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "54") (term "0,1,1,1,0,0"))
                  (rule "eqSymm" (formula "53") (term "0,0,0"))
                  (rule "replace_known_left" (formula "53") (term "0,0,1,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "sortsDisjointModuloNull" (formula "53") (term "0,0"))
                  (rule "replace_known_right" (formula "53") (term "0,0,0") (ifseqformula "75"))
                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "72")))
                  (rule "hideAuxiliaryEq" (formula "53"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "57") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "53") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "53") (term "0,1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
                  (rule "simplifySelectOfAnon" (formula "52"))
                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "71")))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "57") (term "0"))
                  (rule "replaceKnownSelect_taclet2000_14" (formula "52") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "52") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "31"))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "53") (term "0,1,1,1,0,0"))
                  (rule "eqSymm" (formula "52") (term "0,0,0"))
                  (rule "replace_known_left" (formula "52") (term "0,0,1,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sortsDisjointModuloNull" (formula "52") (term "0,0"))
                  (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "71"))
                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "74")))
                  (rule "hideAuxiliaryEq" (formula "52"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "56") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "52") (term "1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "52") (term "0,1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "54") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "52") (term "0"))
                  (rule "nnf_notAnd" (formula "54") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0"))
                  (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "54") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "54") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "54") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                  (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                  (rule "methodCallReturn" (formula "73") (term "1"))
                  (rule "assignment" (formula "73") (term "1"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "commute_or_2" (formula "54") (term "0"))
                  (rule "commute_or_2" (formula "53") (term "0"))
                  (rule "commute_or_2" (formula "52") (term "0"))
                  (rule "commute_or" (formula "54") (term "0,0"))
                  (rule "commute_or" (formula "53") (term "0,0"))
                  (rule "commute_or" (formula "52") (term "0,0"))
                  (rule "methodCallEmpty" (formula "73") (term "1"))
                  (rule "tryEmpty" (formula "73") (term "1"))
                  (rule "emptyModality" (formula "73") (term "1"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "56")))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "73") (ifseqformula "9"))
                  (rule "replaceKnownSelect_taclet012000_18" (formula "73") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_19" (formula "73") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet012000_20" (formula "73") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_21" (formula "73") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet012000_22" (formula "73") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_23" (formula "73") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet012000_24" (formula "73") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_26" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_25" (formula "73") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_27" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_28" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet012000_30" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_29" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet012000_31" (formula "73") (term "1,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "64")) (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                  (rule "nonNull" (formula "73") (term "1,0") (inst "i=i"))
                  (rule "greater_literals" (formula "73") (term "0,1,1,0"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "63")))
                  (rule "sub_literals" (formula "73") (term "2,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1,0"))
                  (rule "nonNull" (formula "73") (term "1") (inst "i=i"))
                  (rule "greater_literals" (formula "73") (term "0,1,1"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "71")))
                  (rule "sub_literals" (formula "73") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1"))
                  (rule "nonNull" (formula "73") (term "0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "73") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "62")))
                  (rule "sub_literals" (formula "73") (term "2,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "73") (term "0,1"))
                  (rule "nnf_imp2or" (formula "73") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "73") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "73") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                  (rule "andRight" (formula "73"))
                  (branch "Case 1"
                     (rule "andRight" (formula "73"))
                     (branch "Case 1"
                        (rule "allRight" (formula "73") (inst "sk=i_15"))
                        (rule "orRight" (formula "73"))
                        (rule "orRight" (formula "73"))
                        (rule "notRight" (formula "75"))
                        (rule "inEqSimp_geqRight" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "75"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_107"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "66"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_108"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "66"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "commute_or" (formula "5"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cut_direct" (formula "56") (term "0,0,0"))
                        (branch "CUT: result_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: result_4.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "58") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_32" (formula "58") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                 (rule "leq_literals" (formula "58") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "58"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "43") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_33" (formula "43") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00012000_34" (formula "43") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "43") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "70"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_115"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_116"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "59") (ifseqformula "5"))
                              )
                           )
                           (branch "CUT: result_4.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "43") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_33" (formula "43") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00012000_34" (formula "43") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "43") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "70"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "69") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "54") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                 (rule "leq_literals" (formula "54") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "54") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "notLeft" (formula "54"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_114"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "58") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_32" (formula "58") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "58") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (ifseqformula "2"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "inEqSimp_homoInEq1" (formula "58"))
                                 (rule "polySimp_pullOutFactor1b" (formula "58") (term "0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0"))
                                 (rule "leq_literals" (formula "58"))
                                 (rule "closeFalse" (formula "58"))
                              )
                           )
                        )
                        (branch "CUT: result_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: result_4.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "43") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_33" (formula "43") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00012000_34" (formula "43") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "43") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "70"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "66") (term "0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_112"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "54") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                 (rule "leq_literals" (formula "54") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "notLeft" (formula "54"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_113"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "58") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_32" (formula "58") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "58") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "58"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "CUT: result_4.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "43") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_33" (formula "43") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00012000_34" (formula "43") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "43") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "71"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "notLeft" (formula "43"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "39") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_109"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "11") (ifseqformula "77"))
                                 (rule "allLeft" (formula "38") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_110"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_15"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_111"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "59") (ifseqformula "5"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "58") (inst "t=i_15"))
                                 (rule "replaceKnownSelect_taclet00012000_32" (formula "58") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "58") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "58"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "73") (inst "sk=i_14"))
                        (rule "orRight" (formula "73"))
                        (rule "orRight" (formula "73"))
                        (rule "notRight" (formula "75"))
                        (rule "inEqSimp_geqRight" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "75"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_90"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "67"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_91"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "67"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "commute_or" (formula "5"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cut_direct" (formula "56") (term "0,0,0"))
                        (branch "CUT: result_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: result_4.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "66") (term "0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_106"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "75"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "44") (inst "t=i_14"))
                                 (rule "replaceKnownSelect_taclet10012000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "71"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_105"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                           )
                           (branch "CUT: result_4.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "67") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_103"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "11") (ifseqformula "76"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_104"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "69") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_102"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "77"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                           )
                        )
                        (branch "CUT: result_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "cut_direct" (formula "57") (term "0,0"))
                           (branch "CUT: result_4.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_99"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "11") (ifseqformula "76"))
                                 (rule "allLeft" (formula "38") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_100"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_101"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "76"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_97"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "11") (ifseqformula "77"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_98"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "77"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                           )
                           (branch "CUT: result_4.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "cut_direct" (formula "55") (term "0,0"))
                              (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "allLeft" (formula "28") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "57") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "70") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_95"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_96"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "77"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                              (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "44") (inst "t=i_14"))
                                 (rule "replaceKnownSelect_taclet10012000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10012000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "73"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "72") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_92"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "40") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_93"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "11") (ifseqformula "78"))
                                 (rule "allLeft" (formula "55") (inst "t=i_14"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "55") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notLeft" (formula "55"))
                                 (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_94"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "58") (term "0") (ifseqformula "50") (ifseqformula "78"))
                                 (rule "close" (formula "58") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "73") (inst "sk=i_13"))
                     (rule "orRight" (formula "73"))
                     (rule "orRight" (formula "73"))
                     (rule "notRight" (formula "75"))
                     (rule "inEqSimp_leqRight" (formula "74"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "75"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_89"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                     (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "20")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "74"))
                     (rule "allLeft" (formula "18") (inst "t=i_13"))
                     (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "18") (term "0,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (postProcess)"
                  (builtin "One Step Simplification" (formula "68"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,0") (ifseqformula "31"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "53"))
                  (rule "notLeft" (formula "51"))
                  (rule "close" (formula "55") (ifseqformula "54"))
               )
               (branch "Pre (postProcess)"
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "51")))
                  (rule "wellFormedAnon" (formula "67") (term "0,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1") (ifseqformula "31"))
                  (rule "wellFormedAnonEQ" (formula "67") (term "0,0,1") (ifseqformula "31"))
                  (rule "replace_known_left" (formula "67") (term "1,0,1") (ifseqformula "48"))
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "7")) (ifInst ""  (formula "30")))
                  (rule "nonNull" (formula "67") (term "1,0") (inst "i=i"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "51")))
                  (rule "greater_literals" (formula "67") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "commute_or_2" (formula "67") (term "1"))
                  (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "67") (term "0") (ifseqformula "9"))
                  (rule "nonNull" (formula "67") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "67") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "greater_literals" (formula "67") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "67") (term "0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "67") (term "0,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "sub_literals" (formula "67") (term "2,1,0,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
                  (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "1,0,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_14" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "56"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
                  (rule "applyEq" (formula "68") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_16" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_17" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
                  (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_12" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_13" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "68") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0,0,0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0,0,0") (ifseqformula "59"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_6" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_7" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0,0") (ifseqformula "60"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0,0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "pullOutSelect" (formula "67") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                  (rule "replaceKnownSelect_taclet2000_4" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2000_5" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                  (rule "applyEqReverse" (formula "68") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "67"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,0,0,0"))
                  (rule "nnf_imp2or" (formula "67") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "67") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0"))
                  (rule "cut_direct" (formula "50") (term "0,0,0"))
                  (branch "CUT: result_3 = null TRUE"
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "cut_direct" (formula "49") (term "0,0"))
                     (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "true_left" (formula "50"))
                        (rule "andRight" (formula "67"))
                        (branch "Case 1"
                           (rule "andRight" (formula "67"))
                           (branch "Case 1"
                              (rule "andRight" (formula "67"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "67") (inst "sk=i_31"))
                                 (rule "orRight" (formula "67"))
                                 (rule "orRight" (formula "67"))
                                 (rule "notRight" (formula "69"))
                                 (rule "inEqSimp_geqRight" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "69"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_166"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "60"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_167"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "60"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "26") (inst "t=i_31"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "49") (inst "t=i_31"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_168"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "67") (inst "sk=i_30"))
                                 (rule "orRight" (formula "67"))
                                 (rule "orRight" (formula "67"))
                                 (rule "notRight" (formula "69"))
                                 (rule "inEqSimp_geqRight" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "69"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_161"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "61"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_162"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "6")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "61"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "44") (inst "t=i_30"))
                                 (rule "replaceKnownSelect_taclet10000212000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000212000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "64"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_30"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_163"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "11") (ifseqformula "69"))
                                 (rule "allLeft" (formula "38") (inst "t=i_30"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_164"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_30"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_165"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "67") (inst "sk=i_29"))
                              (rule "orRight" (formula "67"))
                              (rule "notRight" (formula "68"))
                              (rule "orRight" (formula "68"))
                              (rule "inEqSimp_geqRight" (formula "69"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "69"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_160"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "20")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "68"))
                              (rule "allLeft" (formula "18") (inst "t=i_29"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "67") (inst "sk=i_28"))
                           (rule "orRight" (formula "67"))
                           (rule "notRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "inEqSimp_leqRight" (formula "68"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_156"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "55"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_157"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "54")))
                           (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "55"))
                           (rule "cnf_rightDist" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "commute_or" (formula "5"))
                           (rule "cnf_rightDist" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "allLeft" (formula "52") (inst "t=i_28"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "52") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "52") (term "0,0,1"))
                           (rule "leq_literals" (formula "52") (term "0,1"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "notLeft" (formula "52"))
                           (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_158"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_159"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr TRUE"
                              (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch " verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr FALSE"
                              (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                     (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "andRight" (formula "68"))
                        (branch "Case 1"
                           (rule "andRight" (formula "68"))
                           (branch "Case 1"
                              (rule "andRight" (formula "68"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "68") (inst "sk=i_27"))
                                 (rule "orRight" (formula "68"))
                                 (rule "notRight" (formula "69"))
                                 (rule "orRight" (formula "69"))
                                 (rule "inEqSimp_geqRight" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_153"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "61"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_154"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "61"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "26") (inst "t=i_27"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "49") (inst "t=i_27"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_155"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "68") (inst "sk=i_26"))
                                 (rule "orRight" (formula "68"))
                                 (rule "notRight" (formula "69"))
                                 (rule "orRight" (formula "69"))
                                 (rule "inEqSimp_geqRight" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_148"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "62"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_149"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "6")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "62"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "44") (inst "t=i_26"))
                                 (rule "replaceKnownSelect_taclet10010212000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10010212000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "65"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_26"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_150"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "11") (ifseqformula "70"))
                                 (rule "allLeft" (formula "38") (inst "t=i_26"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_151"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_26"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_152"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "68") (inst "sk=i_25"))
                              (rule "orRight" (formula "68"))
                              (rule "notRight" (formula "69"))
                              (rule "orRight" (formula "69"))
                              (rule "inEqSimp_geqRight" (formula "70"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "70"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_147"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "20")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "69"))
                              (rule "allLeft" (formula "18") (inst "t=i_25"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "68") (inst "sk=i_24"))
                           (rule "orRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "notRight" (formula "70"))
                           (rule "inEqSimp_leqRight" (formula "69"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "70"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_143"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "56"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_144"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                           (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "34") (ifseqformula "56"))
                           (rule "commute_and" (formula "3") (term "0"))
                           (rule "orLeft" (formula "3"))
                           (branch " anon_entr_arr[i_24]@anon_heap<<anonHeapFunction>> = null & ( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | ! anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)"
                              (rule "andLeft" (formula "3"))
                              (rule "allLeft" (formula "51") (inst "t=i_24"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_146"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                           (branch " !( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | ! anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) & anon_entr_arr[i_24]@anon_heap_sort<<anonHeapFunction>> = null"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "orRight" (formula "55"))
                              (rule "notRight" (formula "56"))
                              (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "54"))
                              (rule "allLeft" (formula "51") (inst "t=i_24"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_145"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "2")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                              (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "56") (ifseqformula "5"))
                           )
                        )
                     )
                  )
                  (branch "CUT: result_3 = null FALSE"
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "cut_direct" (formula "49") (term "0,0"))
                     (branch "CUT: anon_entr_arr.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "true_left" (formula "50"))
                        (rule "andRight" (formula "68"))
                        (branch "Case 1"
                           (rule "andRight" (formula "68"))
                           (branch "Case 1"
                              (rule "andRight" (formula "68"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "68") (inst "sk=i_23"))
                                 (rule "orRight" (formula "68"))
                                 (rule "orRight" (formula "68"))
                                 (rule "notRight" (formula "70"))
                                 (rule "inEqSimp_geqRight" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_140"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "61"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_141"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "61"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "26") (inst "t=i_23"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "49") (inst "t=i_23"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_142"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "68") (inst "sk=i_22"))
                                 (rule "orRight" (formula "68"))
                                 (rule "orRight" (formula "68"))
                                 (rule "notRight" (formula "70"))
                                 (rule "inEqSimp_geqRight" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_135"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "62"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_136"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "6")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "62"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "44") (inst "t=i_22"))
                                 (rule "replaceKnownSelect_taclet10001212000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001212000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "65"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "40") (inst "t=i_22"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_137"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "11") (ifseqformula "70"))
                                 (rule "allLeft" (formula "38") (inst "t=i_22"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_138"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_22"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_139"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "68") (inst "sk=i_21"))
                              (rule "orRight" (formula "68"))
                              (rule "orRight" (formula "68"))
                              (rule "notRight" (formula "70"))
                              (rule "inEqSimp_geqRight" (formula "70"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "70"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_134"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "20")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "69"))
                              (rule "allLeft" (formula "18") (inst "t=i_21"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "2"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "68") (inst "sk=i_20"))
                           (rule "orRight" (formula "68"))
                           (rule "orRight" (formula "68"))
                           (rule "notRight" (formula "70"))
                           (rule "inEqSimp_geqRight" (formula "70"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "70"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_130"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "56"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_131"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "54")))
                           (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "56"))
                           (rule "cnf_rightDist" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cnf_rightDist" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "commute_or" (formula "5"))
                           (rule "commute_or" (formula "4"))
                           (rule "cnf_rightDist" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "allLeft" (formula "52") (inst "t=i_20"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "52") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "52") (term "0,0,1"))
                           (rule "leq_literals" (formula "52") (term "0,1"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "notLeft" (formula "52"))
                           (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_132"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_133"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr TRUE"
                              (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch " verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr FALSE"
                              (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "CUT: anon_entr_arr.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "andRight" (formula "69"))
                        (branch "Case 1"
                           (rule "andRight" (formula "69"))
                           (branch "Case 1"
                              (rule "andRight" (formula "69"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "69") (inst "sk=i_19"))
                                 (rule "orRight" (formula "69"))
                                 (rule "orRight" (formula "69"))
                                 (rule "notRight" (formula "71"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_126"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "62"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_127"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "62"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "26") (inst "t=i_19"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "39") (inst "t=i_19"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_128"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "11") (ifseqformula "71"))
                                 (rule "allLeft" (formula "49") (inst "t=i_19"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_129"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "69") (inst "sk=i_18"))
                                 (rule "orRight" (formula "69"))
                                 (rule "orRight" (formula "69"))
                                 (rule "notRight" (formula "71"))
                                 (rule "inEqSimp_leqRight" (formula "70"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_122"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "63"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "ifEqualsNull" (formula "3"))
                                 (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_123"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "6")))
                                 (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "11") (ifseqformula "63"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "cnf_rightDist" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "4"))
                                 (rule "commute_or" (formula "5"))
                                 (rule "cnf_rightDist" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "commute_or" (formula "3"))
                                 (rule "allLeft" (formula "44") (inst "t=i_18"))
                                 (rule "replaceKnownSelect_taclet10011212000_33" (formula "44") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10011212000_34" (formula "44") (term "0,0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "44") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "66"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "notLeft" (formula "44"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "65") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "allLeft" (formula "38") (inst "t=i_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_124"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "22")))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "allLeft" (formula "49") (inst "t=i_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_125"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "54") (ifseqformula "5"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "69") (inst "sk=i_17"))
                              (rule "orRight" (formula "69"))
                              (rule "orRight" (formula "69"))
                              (rule "notRight" (formula "71"))
                              (rule "inEqSimp_geqRight" (formula "71"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "71"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_121"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "20")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "10") (ifseqformula "70"))
                              (rule "allLeft" (formula "18") (inst "t=i_17"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "69") (inst "sk=i_16"))
                           (rule "orRight" (formula "69"))
                           (rule "notRight" (formula "70"))
                           (rule "orRight" (formula "70"))
                           (rule "inEqSimp_leqRight" (formula "70"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "71"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_117"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "52") (ifseqformula "57"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1,1") (inst "selectSK=arr_118"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "56")))
                           (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0,1,1") (ifseqformula "34") (ifseqformula "57"))
                           (rule "commute_and" (formula "3") (term "0"))
                           (rule "orLeft" (formula "3"))
                           (branch " anon_entr_arr[i_16]@anon_heap<<anonHeapFunction>> = null & ( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | ! anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE)"
                              (rule "andLeft" (formula "3"))
                              (rule "allLeft" (formula "51") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_120"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "57") (ifseqformula "4"))
                           )
                           (branch " !( verif.selectvoting.system.core.ConservativeExtension.messages = anon_entr_arr | ! anon_entr_arr.<created>@anon_heap_sort<<anonHeapFunction>> = TRUE) & anon_entr_arr[i_16]@anon_heap_sort<<anonHeapFunction>> = null"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "orRight" (formula "55"))
                              (rule "notRight" (formula "56"))
                              (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "54"))
                              (rule "allLeft" (formula "51") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "51") (term "0,1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "notLeft" (formula "51"))
                              (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_119"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "58")))
                              (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "56") (ifseqformula "5"))
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Exceptional Post (sort)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "24") (term "0,2,2,0,1,0,0,1,0,1,1"))
         (rule "andLeft" (formula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "25"))
         (rule "close" (formula "28") (ifseqformula "27"))
      )
      (branch "Pre (sort)"
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")) (ifInst ""  (formula "1")) (ifInst ""  (formula "23")) (ifInst ""  (formula "20")))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
         (rule "nonNull" (formula "36") (term "1,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,1,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "23")))
         (rule "greater_literals" (formula "36") (term "0,1,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "23"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,0"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,1"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "36") (term "0,1") (ifseqformula "3"))
         (rule "replace_known_right" (formula "36") (term "0,1,0,0,0,0,1") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
         (rule "nonNull" (formula "36") (term "1,0,0,1") (inst "i=i"))
         (rule "greater_literals" (formula "36") (term "0,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,0,0,1") (ifseqformula "1") (ifseqformula "26"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,0,1"))
         (rule "nonNull" (formula "36") (term "1,0,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,1,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
         (rule "greater_literals" (formula "36") (term "0,1,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "34"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1"))
         (rule "nonNull" (formula "36") (term "0,0,0,1") (inst "i=i"))
         (rule "sub_literals" (formula "36") (term "2,1,0,1,1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
         (rule "greater_literals" (formula "36") (term "0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "narrowSelectArrayType" (formula "36") (term "0,0,1,0,0,0,0,1") (ifseqformula "1") (ifseqformula "25"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,1,0,0,1"))
         (rule "nnf_imp2or" (formula "36") (term "0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0,0,1"))
         (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0,1"))
         (rule "andRight" (formula "36"))
         (branch "Case 1"
            (rule "allRight" (formula "36") (inst "sk=i_37"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "36"))
            (rule "notRight" (formula "38"))
            (rule "inEqSimp_leqRight" (formula "37"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "38"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
            (rule "allLeft" (formula "10") (inst "t=i_37"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "36"))
            (branch "Case 1"
               (rule "andRight" (formula "36"))
               (branch "Case 1"
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "allRight" (formula "36") (inst "sk=i_36"))
                     (rule "orRight" (formula "36"))
                     (rule "notRight" (formula "37"))
                     (rule "orRight" (formula "37"))
                     (rule "inEqSimp_geqRight" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                     (rule "allLeft" (formula "17") (inst "t=i_36"))
                     (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "17") (term "0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0"))
                     (rule "add_zero_right" (formula "17") (term "0"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "36") (inst "sk=i_35"))
                     (rule "orRight" (formula "36"))
                     (rule "notRight" (formula "37"))
                     (rule "orRight" (formula "37"))
                     (rule "inEqSimp_geqRight" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "38"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                     (rule "allLeft" (formula "19") (inst "t=i_35"))
                     (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "36") (inst "sk=i_34"))
                  (rule "orRight" (formula "36"))
                  (rule "notRight" (formula "37"))
                  (rule "orRight" (formula "37"))
                  (rule "inEqSimp_leqRight" (formula "37"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                  (rule "allLeft" (formula "12") (inst "t=i_34"))
                  (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "12"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "36") (inst "sk=i_33"))
               (rule "orRight" (formula "36"))
               (rule "notRight" (formula "37"))
               (rule "orRight" (formula "37"))
               (rule "inEqSimp_geqRight" (formula "38"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "38"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
               (rule "allLeft" (formula "26") (inst "t=i_33"))
               (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "26") (term "0,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
               (rule "andLeft" (formula "26"))
               (rule "inEqSimp_homoInEq1" (formula "26"))
               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0"))
               (rule "add_zero_right" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26"))
               (rule "closeFalse" (formula "26"))
            )
         )
      )
   )
   (branch "Exceptional Post (extractBallots)"
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "25")))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "close" (formula "16") (ifseqformula "15"))
   )
   (branch "Pre (extractBallots)"
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
      (rule "nnf_imp2or" (formula "25") (term "0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "25") (term "1") (ifseqformula "3"))
      (rule "replace_known_right" (formula "25") (term "0,1,0,1") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")))
      (rule "nonNull" (formula "25") (term "0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "25") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
      (rule "sub_literals" (formula "25") (term "2,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,0,0,1") (ifseqformula "1") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,1"))
      (rule "nonNull" (formula "25") (term "1,1") (inst "i=i"))
      (rule "greater_literals" (formula "25") (term "0,1,1,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
      (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "23"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1"))
      (rule "nonNull" (formula "25") (term "1,0,1") (inst "i=i"))
      (rule "sub_literals" (formula "25") (term "2,1,0,1,1,1,0,1"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
      (rule "greater_literals" (formula "25") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "15"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,1,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,0,0,1"))
      (rule "nnf_imp2or" (formula "25") (term "0,1,0,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,1,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,1"))
      (rule "andRight" (formula "25"))
      (branch "Case 1"
         (rule "allRight" (formula "25") (inst "sk=i_41"))
         (rule "orRight" (formula "25"))
         (rule "orRight" (formula "25"))
         (rule "notRight" (formula "27"))
         (rule "inEqSimp_geqRight" (formula "27"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "27"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "9") (inst "t=i_41"))
         (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
         (rule "add_literals" (formula "9") (term "0,0,1"))
         (rule "leq_literals" (formula "9") (term "0,1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
      (branch "Case 2"
         (rule "andRight" (formula "25"))
         (branch "Case 1"
            (rule "andRight" (formula "25"))
            (branch "Case 1"
               (rule "allRight" (formula "25") (inst "sk=i_40"))
               (rule "orRight" (formula "25"))
               (rule "notRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "allLeft" (formula "12") (inst "t=i_40"))
               (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
               (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
               (rule "add_literals" (formula "12") (term "0,0,1"))
               (rule "leq_literals" (formula "12") (term "0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeFalse" (formula "12"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "25") (inst "sk=i_39"))
               (rule "orRight" (formula "25"))
               (rule "notRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "27"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "allLeft" (formula "13") (inst "t=i_39"))
               (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
               (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
               (rule "add_literals" (formula "13") (term "0,0,1"))
               (rule "leq_literals" (formula "13") (term "0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
               (rule "qeq_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "closeFalse" (formula "13"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "25") (inst "sk=i_38"))
            (rule "orRight" (formula "25"))
            (rule "notRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_leqRight" (formula "26"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "27"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "allLeft" (formula "10") (inst "t=i_38"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
            (rule "add_literals" (formula "10") (term "0,0,1"))
            (rule "leq_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
(branch "Exceptional Post (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")))
   (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (checkAndGetBallots)"
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "17")) (ifInst ""  (formula "1")) (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "22") (term "0,0"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
   (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (term "1") (ifseqformula "3"))
   (rule "replace_known_right" (formula "22") (term "0,1,0,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
   (rule "nonNull" (formula "22") (term "1,1") (inst "i=i"))
   (rule "sub_literals" (formula "22") (term "2,1,0,1,1,1,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
   (rule "greater_literals" (formula "22") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,1,1") (ifseqformula "1") (ifseqformula "20"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1"))
   (rule "nonNull" (formula "22") (term "0,0,1") (inst "i=i"))
   (rule "greater_literals" (formula "22") (term "0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "11")))
   (rule "sub_literals" (formula "22") (term "2,1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,0,0,1") (ifseqformula "1") (ifseqformula "11"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1"))
   (rule "nonNull" (formula "22") (term "1,0,1") (inst "i=i"))
   (rule "sub_literals" (formula "22") (term "2,1,0,1,1,1,0,1"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")))
   (rule "greater_literals" (formula "22") (term "0,1,0,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0,1,0,1") (ifseqformula "1") (ifseqformula "12"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,0,0,1"))
   (rule "nnf_imp2or" (formula "22") (term "0,1,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,1"))
   (rule "andRight" (formula "22"))
   (branch "Case 1"
      (rule "allRight" (formula "22") (inst "sk=i_45"))
      (rule "orRight" (formula "22"))
      (rule "orRight" (formula "22"))
      (rule "notRight" (formula "24"))
      (rule "inEqSimp_geqRight" (formula "24"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_leqRight" (formula "24"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "allLeft" (formula "9") (inst "t=i_45"))
      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "9") (term "0,0,1"))
      (rule "leq_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
      (rule "qeq_literals" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
   (branch "Case 2"
      (rule "andRight" (formula "22"))
      (branch "Case 1"
         (rule "andRight" (formula "22"))
         (branch "Case 1"
            (rule "allRight" (formula "22") (inst "sk=i_44"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "notRight" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "12") (inst "t=i_44"))
            (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,1"))
            (rule "leq_literals" (formula "12") (term "0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeFalse" (formula "12"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "22") (inst "sk=i_43"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "notRight" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "allLeft" (formula "13") (inst "t=i_43"))
            (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1"))
            (rule "leq_literals" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "closeFalse" (formula "13"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "22") (inst "sk=i_42"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "notRight" (formula "24"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "24"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "10") (inst "t=i_42"))
         (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "leq_literals" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
   )
)
)

}
