\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Dec 04 16:32:06 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Dec 04 16:32:06 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:addEntry([[B,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:addEntry([[B,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))

(autoModeTime "2619")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "messages,m,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "11") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "10"))
(builtin "One Step Simplification" (formula "5"))
(rule "assignment" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
(builtin "One Step Simplification" (formula "4"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "9"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "array2seqDef" (formula "12") (term "0,1,0,0,0,0,0,1") (inst "u=u"))
(rule "nonNull" (formula "12") (term "1,1,1,0,0,0,1") (inst "i=i"))
(rule "sub_literals" (formula "12") (term "2,1,0,1,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "greater_literals" (formula "12") (term "0,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "12") (term "0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "3"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "nonNull" (formula "10") (inst "i=i"))
(rule "greater_literals" (formula "10") (term "0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "sub_literals" (formula "10") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "sub_literals" (formula "9") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "sub_literals" (formula "8") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "12"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_addEntry,savedHeapBefore_addEntry,_mBefore_addEntry,_messagesBefore_addEntry"))
(builtin "One Step Simplification" (formula "24"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "res"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "arrayCreation" (formula "24") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_arr"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "dim0"))
(rule "compound_addition_1" (formula "24") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
(rule "assignment_read_length" (formula "24") (term "1"))
(branch "Normal Execution (_messages != null)"
   (builtin "One Step Simplification" (formula "25"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
   (rule "false_right" (formula "24"))
   (rule "assignmentAdditionInt" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
   (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
   (rule "mul_literals" (formula "24") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0"))
   (rule "mul_literals" (formula "24") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "24"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "blockThrow" (formula "25") (term "1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "throwUnfold" (formula "25") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "n"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
      (rule "qeq_literals" (formula "12") (term "0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "closeFalse" (formula "12"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "12"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "12"))
      (rule "leq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "38") (term "1") (inst "#v0=x_arr_arr_1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_arr_1"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "38") (term "1"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "methodBodyExpand" (formula "38") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "38") (term "1") (inst "#v0=x_arr_arr_2"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_arr_2"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "38") (term "1"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "allocateInstanceWithLength" (formula "38"))
      (builtin "One Step Simplification" (formula "39"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "42") (term "1"))
      (rule "assignment" (formula "42") (term "1"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "arrayLengthIsAShort" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "methodCall" (formula "43") (term "1"))
      (branch "Normal Execution (newObject != null )"
         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "30")))
         (rule "false_right" (formula "43"))
         (rule "methodBodyExpand" (formula "43") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "assignment_write_attribute_this" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "methodCallWithinClass" (formula "43") (term "1"))
         (rule "methodBodyExpand" (formula "43") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "arrayInitialisation" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "polySimp_elimSub" (formula "43") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "43") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "43") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "43") (term "1"))
         (rule "blockEmpty" (formula "43") (term "1"))
         (rule "assignment_write_attribute_this" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "methodCallReturnIgnoreResult" (formula "43") (term "1"))
         (rule "blockEmpty" (formula "43") (term "1"))
         (rule "methodCallReturn" (formula "43") (term "1"))
         (rule "assignment" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "methodCallEmpty" (formula "43") (term "1"))
         (rule "blockEmpty" (formula "43") (term "1"))
         (rule "assignment" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "blockEmpty" (formula "43") (term "1"))
         (rule "assignment" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "for_to_while" (formula "43") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "43") (term "1"))
         (rule "variableDeclaration" (formula "43") (term "1") (newnames "i"))
         (rule "assignment" (formula "43") (term "1"))
         (builtin "One Step Simplification" (formula "43"))
         (builtin "Loop Invariant" (formula "43") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
            (rule "wellFormedStorePrimitive" (formula "43") (term "1"))
            (rule "translateJavaAddInt" (formula "43") (term "1,1,0"))
            (rule "leq_literals" (formula "43") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
            (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "inEqSimp_commuteLeq" (formula "43") (term "0"))
            (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "applyEq" (formula "43") (term "1,2,1,0") (ifseqformula "2"))
            (rule "polySimp_addAssoc" (formula "43") (term "2,1,0"))
            (rule "add_literals" (formula "43") (term "0,2,1,0"))
            (rule "add_zero_left" (formula "43") (term "2,1,0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "27"))
            (rule "leq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "wellFormedMemsetArrayObject" (formula "42"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "wellFormedStorePrimitive" (formula "42") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "42") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "42") (term "0"))
            (rule "wellFormedCreate" (formula "42") (term "0"))
            (rule "orRight" (formula "42"))
            (rule "close" (formula "42") (ifseqformula "12"))
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
            (builtin "One Step Simplification" (formula "45"))
            (rule "translateJavaAddInt" (formula "30") (term "1,1"))
            (rule "translateJavaAddInt" (formula "45") (term "1,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,1,1"))
            (rule "andLeft" (formula "30"))
            (rule "impRight" (formula "46"))
            (rule "andLeft" (formula "31"))
            (rule "eqSymm" (formula "48") (term "1,0,0,1,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "48") (term "0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "48") (term "0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "33") (term "1"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "47") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "32"))
            (rule "inEqSimp_commuteLeq" (formula "31"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "47") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
            (rule "variableDeclaration" (formula "47") (term "1") (newnames "exc_1"))
            (rule "assignment" (formula "47") (term "1"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "variableDeclaration" (formula "47") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "47") (term "1,0,0,1"))
            (rule "blockThrow" (formula "47") (term "1,0,0,1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "compound_less_than_comparison_2" (formula "32") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "32") (term "1"))
            (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_9"))
            (rule "assignment" (formula "32") (term "1"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "variableDeclarationAssign" (formula "32") (term "1"))
            (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_10"))
            (rule "assignment_read_length" (formula "32") (term "1"))
            (branch "Normal Execution (_messages != null)"
               (builtin "One Step Simplification" (formula "33"))
               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "45")))
               (rule "false_right" (formula "32"))
               (rule "less_than_comparison_simple" (formula "32") (term "1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "32") (term "1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "emptyModality" (formula "32") (term "1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "notRight" (formula "32"))
               (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "32") (term "1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0"))
               (rule "qeq_literals" (formula "32") (term "0"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "ifUnfold" (formula "46") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_11"))
               (rule "compound_less_than_comparison_2" (formula "46") (term "1") (inst "#v1=x_13") (inst "#v0=x_12"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_12"))
               (rule "assignment" (formula "46") (term "1"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_13"))
               (rule "assignment_read_length" (formula "46") (term "1"))
               (branch "Normal Execution (_messages != null)"
                  (builtin "One Step Simplification" (formula "47"))
                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "43")))
                  (rule "false_right" (formula "46"))
                  (rule "less_than_comparison_simple" (formula "46") (term "1"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,0,0,1,0"))
                  (rule "replace_known_left" (formula "46") (term "0,0,1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "ifSplit" (formula "46"))
                  (branch "if x_11 true"
                     (builtin "One Step Simplification" (formula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access3" (formula "46") (term "1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr"))
                     (rule "variableDeclarationAssign" (formula "46") (term "1"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_arr_6"))
                     (rule "assignment" (formula "46") (term "1"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "variableDeclarationAssign" (formula "46") (term "1"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_14"))
                     (rule "assignment" (formula "46") (term "1"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "ifUnfold" (formula "46") (term "1") (inst "#boolv=x_15"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_15"))
                     (rule "compound_assignment_5_nonsimple" (formula "46") (term "1"))
                     (rule "ifElseUnfold" (formula "46") (term "1") (inst "#boolv=x_16"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_16"))
                     (rule "compound_less_equal_than_comparison_1" (formula "46") (term "1") (inst "#v0=x_17"))
                     (rule "variableDeclarationAssign" (formula "46") (term "1"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_17"))
                     (rule "eval_order_access2" (formula "46") (term "1") (inst "#v0=x_arr_arr_7"))
                     (rule "variableDeclarationAssign" (formula "46") (term "1"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_arr_7"))
                     (rule "remove_parentheses_right" (formula "46") (term "1"))
                     (rule "assignment" (formula "46") (term "1"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "assignment_read_length" (formula "46") (term "1"))
                     (branch "Normal Execution (x_arr_arr_7 != null)"
                        (builtin "One Step Simplification" (formula "47"))
                        (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "46"))
                        (rule "less_equal_than_comparison_simple" (formula "46") (term "1"))
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "ifElseSplit" (formula "46"))
                        (branch "if x_16 true"
                           (builtin "One Step Simplification" (formula "47"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ifEnterThen" (formula "47") (term "1"))
                           (rule "assignment" (formula "47") (term "1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "blockThrow" (formula "47") (term "1"))
                           (rule "blockThrow" (formula "47") (term "1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (rule "tryCatchThrow" (formula "47") (term "1,0,0,1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "ifElseUnfold" (formula "47") (term "1,0,0,1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "47") (term "1,0,0,1") (newnames "x_19"))
                           (rule "equality_comparison_simple" (formula "47") (term "1,0,0,1"))
                           (rule "throwUnfold" (formula "47") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "47") (term "1"))
                           (rule "variableDeclaration" (formula "47") (term "1") (newnames "a"))
                           (rule "instanceCreationAssignment" (formula "47") (term "1") (inst "#v0=a_1"))
                           (rule "variableDeclarationAssign" (formula "47") (term "1"))
                           (rule "variableDeclaration" (formula "47") (term "1") (newnames "a_1"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclaration" (formula "47") (term "1") (newnames "a_2"))
                           (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "variableDeclaration" (formula "47") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "47") (term "1") (newnames "a_3"))
                           (rule "allocateInstance" (formula "47"))
                           (builtin "One Step Simplification" (formula "48"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                           (rule "blockEmpty" (formula "50") (term "1"))
                           (rule "assignment" (formula "50") (term "1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "wellFormedMemsetArrayObject" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "1") (term "0,0"))
                           (rule "wellFormedCreate" (formula "1") (term "0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000001010_5" (formula "34") (term "0"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "assignment_write_attribute_this" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallWithinClass" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "castDel" (formula "51") (term "1,0,1,0"))
                           (rule "assignment_write_attribute_this" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "castDel" (formula "51") (term "1,0,1,0"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "51") (term "1"))
                           (rule "methodCallReturn" (formula "51") (term "1"))
                           (rule "assignment" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "assignment" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallSuper" (formula "51") (term "1"))
                           (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "castDel" (formula "51") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "assignment_write_attribute_this" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "castDel" (formula "51") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "methodCallEmpty" (formula "51") (term "1"))
                           (rule "blockEmpty" (formula "51") (term "1"))
                           (rule "assignment_write_attribute" (formula "51") (term "1"))
                           (branch "Normal Execution (a_1 != null)"
                              (builtin "One Step Simplification" (formula "52"))
                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "36")))
                              (rule "false_right" (formula "51"))
                              (rule "assignment" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "tryCatchThrow" (formula "51") (term "1"))
                              (rule "ifElseUnfold" (formula "51") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_20"))
                              (rule "equality_comparison_simple" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "replace_known_right" (formula "51") (term "0,0,1,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "ifElseSplit" (formula "51"))
                              (branch "if x_20 true"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_20 false"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "51"))
                                 (branch "if a instanceof java.lang.Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "51") (term "1") (newnames "e"))
                                    (rule "reference_type_cast" (formula "51") (term "1"))
                                    (branch "Normal Execution (a instanceof java.lang.Throwable)"
                                       (builtin "One Step Simplification" (formula "52"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "51") (term "1"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "assignment" (formula "51") (term "1"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "methodCallEmpty" (formula "51") (term "1"))
                                       (rule "emptyModality" (formula "51") (term "1"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "51") (term "0,0,1,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "ifElseSplit" (formula "51"))
                                       (branch "if x_19 true"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_19 false"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifElseSplit" (formula "51"))
                                          (branch "if thrownExc instanceof Throwable true"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "true_left" (formula "1"))
                                             (rule "variableDeclaration" (formula "51") (term "1") (newnames "t"))
                                             (rule "reference_type_cast" (formula "51") (term "1"))
                                             (branch "Normal Execution (thrownExc instanceof Throwable)"
                                                (builtin "One Step Simplification" (formula "52"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "blockEmpty" (formula "51") (term "1"))
                                                (rule "methodCallReturn" (formula "51") (term "1"))
                                                (rule "assignment" (formula "51") (term "1"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "methodCallEmpty" (formula "51") (term "1"))
                                                (rule "tryEmpty" (formula "51") (term "1"))
                                                (rule "emptyModality" (formula "51") (term "1"))
                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                                                (rule "eqSymm" (formula "51") (term "1,0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "0,0,1,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "2,0,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "0,0,1,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "2,0,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "0,0,1,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "51") (term "2,0,1,0,0,0"))
                                                (rule "applyEq" (formula "51") (term "1,2,1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "5"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "2,1,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "51") (term "0,2,1,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "51") (term "2,1,0,0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "applyEq" (formula "51") (term "1,2,1,0,0,0,0,2,0,1,0,0,0") (ifseqformula "5"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "2,1,0,0,0,0,2,0,1,0,0,0"))
                                                (rule "add_literals" (formula "51") (term "0,2,1,0,0,0,0,2,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "51") (term "2,1,0,0,0,0,2,0,1,0,0,0"))
                                                (rule "applyEq" (formula "51") (term "1,2,1,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "5"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "2,1,0,0,0,0,0,0,1,0,1,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,2,1,0,0,0,0,0,0,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "2,1,0,0,0,0,0,0,1,0,1,1,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "51") (term "1,1,0,0,1,1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "51") (term "1,2,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "5"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "2,1,0,0,0,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "51") (term "0,2,1,0,0,0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "51") (term "2,1,0,0,0,0,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "51") (term "1,2,1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "2,1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "51") (term "0,2,1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "51") (term "2,1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "ClassCastException (!(thrownExc instanceof Throwable))"
                                                (builtin "One Step Simplification" (formula "52"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "closeTrue" (formula "51"))
                                             )
                                          )
                                          (branch "if thrownExc instanceof Throwable false"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                                       (builtin "One Step Simplification" (formula "52"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "closeTrue" (formula "51"))
                                    )
                                 )
                                 (branch "if a instanceof java.lang.Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_1 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_16 false"
                           (builtin "One Step Simplification" (formula "47"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "less_than_comparison_simple" (formula "47") (term "1"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,0"))
                           (rule "blockEmpty" (formula "47") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,1,0") (ifseqformula "32"))
                           (rule "qeq_literals" (formula "47") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "ifSplit" (formula "47"))
                           (branch "if x_15 true"
                              (builtin "One Step Simplification" (formula "48"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_15 false"
                              (builtin "One Step Simplification" (formula "48"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "47") (term "1"))
                              (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_arr_1"))
                              (rule "assignment_array2" (formula "47") (term "1"))
                              (branch "Normal Execution (_messages != null)"
                                 (builtin "One Step Simplification" (formula "48"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "44")))
                                 (rule "orRight" (formula "47"))
                                 (rule "inEqSimp_ltRight" (formula "48"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "pullOutSelect" (formula "48") (term "0,1,0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "assignment_to_reference_array_component" (formula "49") (term "1"))
                                 (branch "Normal Execution (x_arr_arr_6 != null)"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")))
                                    (rule "andLeft" (formula "1"))
                                    (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "9"))
                                    (rule "typeEqDerived2" (formula "2") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "blockEmpty" (formula "50") (term "1"))
                                    (rule "apply_eq_monomials" (formula "1") (term "1,0") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "simplifySelectOfMemset" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfStore" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001100001010_8" (formula "1") (term "2,0"))
                                    (rule "commute_or" (formula "3") (term "0,0"))
                                    (rule "postincrement" (formula "50") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "50") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_18"))
                                    (rule "remove_parentheses_right" (formula "50") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "50") (term "1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "translateJavaAddInt" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "50") (term "1"))
                                    (rule "assignment" (formula "50") (term "1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "tryEmpty" (formula "50") (term "1"))
                                    (rule "methodCallEmpty" (formula "50") (term "1"))
                                    (rule "emptyModality" (formula "50") (term "1"))
                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "5")) (ifInst ""  (formula "7")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                    (rule "eqSymm" (formula "50") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "0,0,1"))
                                    (rule "mul_literals" (formula "50") (term "0,0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,1,0,0,0,1,0"))
                                    (rule "precOfInt" (formula "50") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "50") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,1,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "50") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "50") (term "0,1,1"))
                                    (rule "add_literals" (formula "50") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "50") (term "0,1,1"))
                                    (rule "leq_literals" (formula "50") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_homoInEq0" (formula "50") (term "1"))
                                    (rule "mul_literals" (formula "50") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "50") (term "0,1"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "49") (term "1,2,1,0,0,0,1,1,0,0,0,1,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,2,1,0,0,0,1,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "49") (term "2,1,0,0,0,1,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "49") (term "1,2,1,0,0,0,0,0,1,0,0,1,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "2,1,0,0,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,2,1,0,0,0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "49") (term "2,1,0,0,0,0,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "49") (term "1,2,1,0,0,1,1,0,0,1,0") (ifseqformula "6"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "2,1,0,0,1,1,0,0,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,2,1,0,0,1,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "49") (term "2,1,0,0,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                    (rule "mul_literals" (formula "49") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                    (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "49") (term "0") (ifseqformula "34"))
                                    (rule "leq_literals" (formula "49") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allRight" (formula "49") (inst "sk=f_0"))
                                    (rule "allRight" (formula "49") (inst "sk=o_0"))
                                    (rule "orRight" (formula "49"))
                                    (rule "orRight" (formula "49"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "31"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Null Reference (x_arr_arr_6 = null)"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_arr_6 != null, but x_14 Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "blockThrow" (formula "50") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "34"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_6 and x_arr_1)"
                                    (builtin "One Step Simplification" (formula "50"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "array_store_known_dynamic_array_type" (formula "36") (ifseqformula "8"))
                                    (rule "typeEqDerived2" (formula "36") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "closeTrue" (formula "36"))
                                 )
                              )
                              (branch "Null Reference (_messages = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_messages != null, but i Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "blockThrow" (formula "48") (term "1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "33"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_literals" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (x_arr_arr_7 = null)"
                        (builtin "One Step Simplification" (formula "47"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_11 false"
                     (builtin "One Step Simplification" (formula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_messages = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_messages = null)"
               (builtin "One Step Simplification" (formula "33"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
            (builtin "One Step Simplification" (formula "45"))
            (rule "translateJavaAddInt" (formula "30") (term "1,1"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "30"))
            (rule "polySimp_addComm0" (formula "32") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "31"))
            (rule "inEqSimp_commuteLeq" (formula "30"))
            (rule "variableDeclarationAssign" (formula "46") (term "1"))
            (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_1"))
            (rule "blockEmpty" (formula "46") (term "1,0,1"))
            (rule "eval_order_array_access2" (formula "46") (term "1,0,1") (inst "#v0=x") (inst "#ar1=x_arr_arr"))
            (rule "variableDeclarationAssign" (formula "46") (term "1,0,1"))
            (rule "variableDeclaration" (formula "46") (term "1,0,1") (newnames "x_arr_arr_3"))
            (rule "assignment" (formula "46") (term "1,0,1"))
            (rule "variableDeclarationAssign" (formula "46") (term "1,1,0,1"))
            (rule "variableDeclaration" (formula "46") (term "1,1,0,1") (newnames "x_2"))
            (rule "compound_less_than_comparison_2" (formula "46") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "46") (term "1"))
            (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "46") (term "1"))
            (builtin "One Step Simplification" (formula "46"))
            (rule "variableDeclarationAssign" (formula "46") (term "1"))
            (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_4"))
            (rule "assignment_read_length" (formula "46") (term "1"))
            (branch "Normal Execution (_messages != null)"
               (builtin "One Step Simplification" (formula "47"))
               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "43")))
               (rule "false_right" (formula "46"))
               (rule "less_than_comparison_simple" (formula "46") (term "1"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "46") (term "0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "46") (term "1"))
               (rule "emptyModality" (formula "46") (term "1"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "impRight" (formula "46"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "32"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "assignment_read_length" (formula "47") (term "1"))
               (branch "Normal Execution (_messages != null)"
                  (builtin "One Step Simplification" (formula "48"))
                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "44")))
                  (rule "false_right" (formula "47"))
                  (rule "eval_order_array_access3" (formula "47") (term "1") (inst "#v1=x_arr") (inst "#v2=x_3") (inst "#v0=x_arr_arr_4"))
                  (rule "variableDeclarationAssign" (formula "47") (term "1"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_arr_arr_4"))
                  (rule "assignment" (formula "47") (term "1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "variableDeclarationAssign" (formula "47") (term "1"))
                  (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_5"))
                  (rule "assignment" (formula "47") (term "1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "32") (ifseqformula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "28") (term "0,0"))
                  (rule "add_zero_left" (formula "28") (term "0"))
                  (rule "ifUnfold" (formula "48") (term "1") (inst "#boolv=x_6"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_6"))
                  (rule "compound_assignment_5_nonsimple" (formula "48") (term "1"))
                  (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_7"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_7"))
                  (rule "compound_less_equal_than_comparison_1" (formula "48") (term "1") (inst "#v0=x_8"))
                  (rule "variableDeclarationAssign" (formula "48") (term "1"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_8"))
                  (rule "eval_order_array_access6" (formula "48") (term "1") (inst "#v0=x_arr_arr_5"))
                  (rule "variableDeclarationAssign" (formula "48") (term "1"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr_arr_5"))
                  (rule "remove_parentheses_right" (formula "48") (term "1"))
                  (rule "assignment" (formula "48") (term "1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "assignment_read_length" (formula "48") (term "1"))
                  (branch "Normal Execution (x_arr_arr_5 != null)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "35")))
                     (rule "false_right" (formula "48"))
                     (rule "less_equal_than_comparison_simple" (formula "48") (term "1"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "ifElseSplit" (formula "48"))
                     (branch "if x_7 true"
                        (builtin "One Step Simplification" (formula "49"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "ifEnterThen" (formula "49") (term "1"))
                        (rule "assignment" (formula "49") (term "1"))
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "blockThrow" (formula "49") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "4") (ifseqformula "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_literals" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "if x_7 false"
                        (builtin "One Step Simplification" (formula "49"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "apply_eq_monomials" (formula "1") (term "1,0,0") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "less_than_comparison_simple" (formula "49") (term "1"))
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,1,0"))
                        (rule "blockEmpty" (formula "49") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0,1,0") (ifseqformula "29"))
                        (rule "qeq_literals" (formula "49") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "ifSplit" (formula "49"))
                        (branch "if x_6 true"
                           (builtin "One Step Simplification" (formula "50"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_6 false"
                           (builtin "One Step Simplification" (formula "50"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "49") (term "1"))
                           (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_arr"))
                           (builtin "Use Operation Contract" (formula "49") (newnames "heapBefore_copyOf,result_0,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
                           (branch "Post (copyOf)"
                              (builtin "One Step Simplification" (formula "50"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "notLeft" (formula "37"))
                              (rule "notLeft" (formula "36"))
                              (rule "orRight" (formula "38"))
                              (rule "replace_known_right" (formula "35") (term "1,1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")))
                              (rule "closeFalse" (formula "35"))
                           )
                           (branch "Exceptional Post (copyOf)"
                              (builtin "One Step Simplification" (formula "50"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "35"))
                              (rule "close" (formula "39") (ifseqformula "38"))
                           )
                           (branch "Pre (copyOf)"
                              (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "48")))
                              (rule "wellFormedAnon" (formula "49") (term "0"))
                              (rule "wellFormedStorePrimitive" (formula "49") (term "0,0"))
                              (rule "replace_known_left" (formula "49") (term "1,0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "dismissNonSelectedField" (formula "49") (term "0,0,1"))
                              (rule "applyEq" (formula "49") (term "1,2,1,0,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "49") (term "2,1,0,0"))
                              (rule "add_literals" (formula "49") (term "0,2,1,0,0"))
                              (rule "add_zero_left" (formula "49") (term "2,1,0,0"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "34"))
                              (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "1,0"))
                              (rule "times_zero_1" (formula "34") (term "0"))
                              (rule "leq_literals" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "33"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "47") (term "1,2,1,0,0,0,1") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "47") (term "2,1,0,0,0,1"))
                              (rule "add_literals" (formula "47") (term "0,2,1,0,0,0,1"))
                              (rule "add_zero_left" (formula "47") (term "2,1,0,0,0,1"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "32"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "31"))
                              (rule "applyEq" (formula "46") (term "2,1,0,0") (ifseqformula "31"))
                              (rule "applyEq" (formula "46") (term "2,1,0,0,0,1") (ifseqformula "31"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "31"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "31"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "29"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "wellFormedMemsetArrayObject" (formula "44") (term "0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "wellFormedStorePrimitive" (formula "44") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "44") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "44") (term "0,0"))
                              (rule "wellFormedCreate" (formula "44") (term "0,0"))
                              (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "orRight" (formula "44"))
                              (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "45") (ifseqformula "17"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_arr_5 = null)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_messages = null)"
                  (builtin "One Step Simplification" (formula "48"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_messages = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (_messages = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
   (rule "closeFalse" (formula "1"))
)
)

}
