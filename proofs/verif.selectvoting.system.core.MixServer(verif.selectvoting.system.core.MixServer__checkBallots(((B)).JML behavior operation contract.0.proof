\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 10 10:26:33 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Jul 10 10:26:33 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkBallots([[B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkBallots([[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "2355")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "msg,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "sub_literals" (formula "7") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "8"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "sub_literals" (formula "7") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nonNull" (formula "6") (inst "i=i"))
(rule "greater_literals" (formula "6") (term "0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "sub_literals" (formula "6") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_checkBallots,savedHeapBefore_checkBallots,_msgBefore_checkBallots"))
(builtin "One Step Simplification" (formula "21"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "for_to_while" (formula "21") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "21") (term "1"))
(rule "variableDeclaration" (formula "21") (term "1") (newnames "i"))
(rule "assignment" (formula "21") (term "1"))
(builtin "One Step Simplification" (formula "21"))
(builtin "Loop Invariant" (formula "21") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "21"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,1"))
   (rule "translateJavaAddInt" (formula "22") (term "0,0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "22") (term "0,0,1,1,1,0,1"))
   (rule "impRight" (formula "22"))
   (rule "eqSymm" (formula "23") (term "1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "23") (term "0,0,1,1,1,0"))
   (rule "polySimp_addComm1" (formula "23") (term "0,1,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "23") (term "0,1,1,1,0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "23") (term "1,0,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "compound_less_than_comparison_2" (formula "11") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_4"))
   (rule "compound_subtraction_1" (formula "11") (term "1") (inst "#v=x_5"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_5"))
   (rule "assignment_read_length" (formula "11") (term "1"))
   (branch "Normal Execution (_msg != null)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "22")))
      (rule "false_right" (formula "11"))
      (rule "assignmentSubtractionInt" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "translateJavaSubInt" (formula "11") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
      (rule "less_than_comparison_simple" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "notRight" (formula "11"))
      (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_6"))
      (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_7"))
      (rule "assignment" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_8"))
      (rule "compound_subtraction_1" (formula "23") (term "1") (inst "#v=x_9"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_9"))
      (rule "assignment_read_length" (formula "23") (term "1"))
      (branch "Normal Execution (_msg != null)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
         (rule "false_right" (formula "23"))
         (rule "assignmentSubtractionInt" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "translateJavaSubInt" (formula "23") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "0,1,0"))
         (rule "mul_literals" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "23") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "ifSplit" (formula "34"))
         (branch "if x_6 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "1"))
            (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_checkSingleBallot,exc_0,heapAfter_checkSingleBallot,anon_heap_checkSingleBallot") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::checkSingleBallot([[B,int)].JML behavior operation contract.0"))
            (branch "Post (checkSingleBallot)"
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "25"))
               (rule "typeEqDerived" (formula "26") (term "0,1,1,1,1") (ifseqformula "25"))
               (rule "typeEqDerived" (formula "26") (term "0,1,0,1,1,1") (ifseqformula "25"))
               (rule "typeEqDerived" (formula "26") (term "0,0,0,1,1,1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
               (rule "blockEmpty" (formula "38") (term "1"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "11"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "28"))
               (rule "notLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "28"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "27"))
               (rule "notLeft" (formula "26"))
               (rule "nonNull" (formula "28") (inst "i=i_1"))
               (rule "greater_literals" (formula "28") (term "0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "28"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "27") (inst "i=i_1"))
               (rule "greater_literals" (formula "27") (term "0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "sub_literals" (formula "27") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "27"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "26") (inst "i=i_1"))
               (rule "greater_literals" (formula "26") (term "0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_2" (formula "37") (term "0"))
               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_5" (formula "36") (term "0"))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_8" (formula "35") (term "0"))
               (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_11" (formula "34") (term "0"))
               (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_14" (formula "33") (term "0"))
               (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_17" (formula "32") (term "0"))
               (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_1"))
               (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet00001_18" (formula "32") (term "0"))
               (rule "replaceKnownSelect_taclet00001_18" (formula "29") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "28"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_20" (formula "31") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_20" (formula "28") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_20" (formula "28") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_1"))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet00001_21" (formula "31") (term "0"))
               (rule "replaceKnownSelect_taclet00001_21" (formula "28") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "27"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_23" (formula "30") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_23" (formula "27") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_23" (formula "27") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet00001_24" (formula "30") (term "0"))
               (rule "replaceKnownSelect_taclet00001_24" (formula "27") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "26"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "26"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_26" (formula "29") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_26" (formula "26") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_26" (formula "26") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0"))
               (rule "postincrement" (formula "40") (term "1"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0"))
               (rule "commute_or_2" (formula "26") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "compound_int_cast_expression" (formula "42") (term "1") (inst "#v=x"))
               (rule "variableDeclarationAssign" (formula "42") (term "1"))
               (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_12"))
               (rule "remove_parentheses_right" (formula "42") (term "1"))
               (rule "assignmentAdditionInt" (formula "42") (term "1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "translateJavaAddInt" (formula "42") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "42") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "42") (term "1"))
               (rule "assignment" (formula "42") (term "1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "tryEmpty" (formula "42") (term "1"))
               (rule "methodCallEmpty" (formula "42") (term "1"))
               (rule "emptyModality" (formula "42") (term "1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "eqSymm" (formula "42") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "42") (term "0,0,1"))
               (rule "precOfInt" (formula "42") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,1"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "42") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "42") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "42") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1"))
               (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,1,1"))
               (rule "add_literals" (formula "42") (term "1,1,0,1,1"))
               (rule "times_zero_1" (formula "42") (term "1,0,1,1"))
               (rule "add_zero_right" (formula "42") (term "0,1,1"))
               (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,1"))
               (rule "add_literals" (formula "42") (term "1,0,1,1"))
               (rule "times_zero_1" (formula "42") (term "0,1,1"))
               (rule "leq_literals" (formula "42") (term "1,1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
               (rule "times_zero_2" (formula "42") (term "1,0,1"))
               (rule "add_zero_right" (formula "42") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "42") (term "1") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "42") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
               (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
               (rule "add_literals" (formula "42") (term "0,0,1"))
               (rule "qeq_literals" (formula "42") (term "0,1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "allRight" (formula "42") (inst "sk=f_0"))
               (rule "allRight" (formula "42") (inst "sk=o_0"))
               (rule "orRight" (formula "42"))
               (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "44"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "32"))
                  (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "46"))
                  (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "31")))
                  (rule "closeTrue" (formula "45"))
               )
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                  (rule "close" (formula "45") (ifseqformula "1"))
               )
            )
            (branch "Exceptional Post (checkSingleBallot)"
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "andLeft" (formula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "25"))
               (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "blockThrow" (formula "40") (term "1"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "11"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "28"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "nonNull" (formula "28") (inst "i=i_1"))
               (rule "greater_literals" (formula "28") (term "0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "sub_literals" (formula "28") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "28"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "27") (inst "i=i_1"))
               (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "greater_literals" (formula "27") (term "0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "27"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "26") (inst "i=i_1"))
               (rule "greater_literals" (formula "26") (term "0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "sub_literals" (formula "26") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_2" (formula "38") (term "0"))
               (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_5" (formula "37") (term "0"))
               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_8" (formula "36") (term "0"))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_11" (formula "35") (term "0"))
               (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_14" (formula "34") (term "0"))
               (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "11")))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "11")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_17" (formula "33") (term "0"))
               (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
               (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "45")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet10001_18" (formula "33") (term "0"))
               (rule "replaceKnownSelect_taclet10001_18" (formula "29") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "28"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "45")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_20" (formula "32") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_20" (formula "28") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_20" (formula "28") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
               (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet10001_21" (formula "32") (term "0"))
               (rule "replaceKnownSelect_taclet10001_21" (formula "28") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "27"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "44")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_23" (formula "31") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_23" (formula "27") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_23" (formula "27") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
               (rule "replaceKnownSelect_taclet10001_24" (formula "31") (term "0"))
               (rule "replaceKnownSelect_taclet10001_24" (formula "27") (term "0,1,1,1,0,0"))
               (rule "simplifySelectOfAnon" (formula "26"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
               (rule "hideAuxiliaryEq" (formula "26"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_26" (formula "30") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_26" (formula "26") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10001_26" (formula "26") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0"))
               (rule "tryCatchThrow" (formula "42") (term "1"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0"))
               (rule "commute_or_2" (formula "26") (term "0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "9"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "10"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallThrow" (formula "44") (term "1,0,0,1"))
               (rule "ifElseUnfold" (formula "44") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_10"))
               (rule "equality_comparison_simple" (formula "44") (term "1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "replace_known_right" (formula "44") (term "0,0,1,0") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "ifElseSplit" (formula "44"))
               (branch "if x_10 true"
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_10 false"
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "44"))
                  (branch "if exc_0 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "44") (term "1") (newnames "e"))
                     (rule "reference_type_cast" (formula "44") (term "1"))
                     (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "44") (term "1"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "assignment" (formula "44") (term "1"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "methodCallEmpty" (formula "44") (term "1"))
                        (rule "emptyModality" (formula "44") (term "1"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "tryCatchThrow" (formula "44") (term "1"))
                        (rule "ifElseUnfold" (formula "44") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_11"))
                        (rule "equality_comparison_simple" (formula "44") (term "1"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "replace_known_right" (formula "44") (term "0,0,1,0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "ifElseSplit" (formula "44"))
                        (branch "if x_11 true"
                           (builtin "One Step Simplification" (formula "45"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_11 false"
                           (builtin "One Step Simplification" (formula "45"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "44"))
                           (branch "if thrownExc instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "44") (term "1") (newnames "e_1"))
                              (rule "reference_type_cast" (formula "44") (term "1"))
                              (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "44") (term "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "emptyModality" (formula "44") (term "1"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
                                 (rule "eqSymm" (formula "44") (term "1,0,0,1"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "44") (term "0") (ifseqformula "13"))
                                 (rule "replaceKnownSelect_taclet10001_0" (formula "44") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_2" (formula "44") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet10001_3" (formula "44") (term "0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_5" (formula "44") (term "0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_6" (formula "44") (term "0,0,1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_8" (formula "44") (term "0,0,1,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_18" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_9" (formula "44") (term "0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_20" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_11" (formula "44") (term "0,0,1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_21" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_24" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_23" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_26" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_15" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet10001_12" (formula "44") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_17" (formula "44") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001_14" (formula "44") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "44") (term "0,1,0,0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                 (rule "nonNull" (formula "44") (term "1,0") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "44") (term "2,1,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "35")))
                                 (rule "greater_literals" (formula "44") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                 (rule "nonNull" (formula "44") (term "1,0,0") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "44") (term "2,1,0,1,1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "34")))
                                 (rule "greater_literals" (formula "44") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0,0"))
                                 (rule "nonNull" (formula "44") (term "0,0,0") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "44") (term "2,1,0,1,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "33")))
                                 (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "andRight" (formula "44"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "44"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "44"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "44") (inst "sk=i_1_2"))
                                          (rule "orRight" (formula "44"))
                                          (rule "notRight" (formula "45"))
                                          (rule "orRight" (formula "45"))
                                          (rule "inEqSimp_geqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "36"))
                                          (rule "allLeft" (formula "20") (inst "t=i_1_2"))
                                          (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "2"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0"))
                                          (rule "add_literals" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "44") (inst "sk=i_1_1"))
                                          (rule "orRight" (formula "44"))
                                          (rule "notRight" (formula "45"))
                                          (rule "orRight" (formula "45"))
                                          (rule "inEqSimp_geqRight" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "37"))
                                          (rule "allLeft" (formula "22") (inst "t=i_1_1"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_literals" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "44") (inst "sk=i_1_0"))
                                       (rule "orRight" (formula "44"))
                                       (rule "notRight" (formula "45"))
                                       (rule "orRight" (formula "45"))
                                       (rule "inEqSimp_leqRight" (formula "45"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "13")))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "38"))
                                       (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0"))
                                       (rule "add_literals" (formula "24") (term "0"))
                                       (rule "leq_literals" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "44") (inst "sk=f_1"))
                                    (rule "allRight" (formula "44") (inst "sk=o_1"))
                                    (rule "orRight" (formula "44"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_1_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "32") (term "1"))
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.ServerMisbehavior::instance(exc_0) = TRUE TRUE"
                                       (rule "instanceof_not_compatible_5" (formula "33") (term "0,0") (ifseqformula "32"))
                                       (rule "instanceof_not_compatible_5" (formula "33") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                                       (rule "true_left" (formula "33"))
                                       (rule "cut_direct" (formula "28") (term "0,0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "34"))
                                             (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "48"))
                                             (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "32")))
                                             (rule "closeTrue" (formula "47"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "47") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "34"))
                                             (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "33")))
                                             (rule "closeTrue" (formula "48"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "48") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "CUT: verif.selectvoting.system.core.MixServer.ServerMisbehavior::instance(exc_0) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "cut_direct" (formula "28") (term "0,0"))
                                       (branch "CUT: exc_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "33"))
                                             (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "32")))
                                             (rule "closeTrue" (formula "48"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "48") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "34"))
                                             (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "32")))
                                             (rule "closeTrue" (formula "49"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "49") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "closeTrue" (formula "44"))
                              )
                           )
                           (branch "if thrownExc instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "closeTrue" (formula "44"))
                     )
                  )
                  (branch "if exc_0 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Pre (checkSingleBallot)"
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "12")))
               (rule "wellFormedAnon" (formula "34") (term "1"))
               (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "22")))
               (rule "nonNull" (formula "34") (term "1") (inst "i=i_1"))
               (rule "sub_literals" (formula "34") (term "2,1,0,1,1,1"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
               (rule "greater_literals" (formula "34") (term "0,1"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
               (rule "nnf_imp2or" (formula "34") (term "0,1"))
               (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "34") (term "0") (ifseqformula "11"))
               (rule "nonNull" (formula "34") (term "1,0,0,0,0,0") (inst "i=i_1"))
               (rule "sub_literals" (formula "34") (term "2,1,0,1,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,0") (inst "i=i_1"))
               (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "sub_literals" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,0,0") (inst "i=i_1"))
               (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "sub_literals" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_2"))
               (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
               (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_2"))
               (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,1,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,1,0,0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,1,0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,1,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "34") (term "0,0,0,0"))
               (rule "nnf_imp2or" (formula "34") (term "0,1,0,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "34") (term "0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0,0"))
               (rule "andRight" (formula "34"))
               (branch "Case 1"
                  (rule "andRight" (formula "34"))
                  (branch "Case 1"
                     (rule "andRight" (formula "34"))
                     (branch "Case 1"
                        (rule "allRight" (formula "34") (inst "sk=i_1_6"))
                        (rule "orRight" (formula "34"))
                        (rule "notRight" (formula "35"))
                        (rule "orRight" (formula "35"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "13") (ifseqformula "27"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "26") (ifseqformula "27"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "allLeft" (formula "21") (inst "t=i_1_6"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1"))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "30"))
                        (rule "close" (formula "28") (ifseqformula "14"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "34") (inst "sk=i_1_5"))
                        (rule "orRight" (formula "34"))
                        (rule "notRight" (formula "35"))
                        (rule "orRight" (formula "35"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "13") (ifseqformula "28"))
                        (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "26") (ifseqformula "28"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "ifEqualsNull" (formula "3"))
                        (rule "cnf_rightDist" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "cnf_rightDist" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "commute_or" (formula "4"))
                        (rule "cnf_rightDist" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "3"))
                        (rule "allLeft" (formula "23") (inst "t=i_1_5"))
                        (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1"))
                        (rule "leq_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "31"))
                        (rule "close" (formula "28") (ifseqformula "14"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "34") (inst "sk=i_1_4"))
                     (rule "orRight" (formula "34"))
                     (rule "notRight" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "36"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "28"))
                     (rule "allLeft" (formula "22") (inst "t=i_1_4"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                     (rule "andLeft" (formula "22"))
                     (rule "inEqSimp_homoInEq1" (formula "22"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "1,1,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0"))
                     (rule "add_zero_right" (formula "22") (term "0"))
                     (rule "leq_literals" (formula "22"))
                     (rule "closeFalse" (formula "22"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "34") (inst "sk=i_1_3"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "notRight" (formula "36"))
                  (rule "inEqSimp_geqRight" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "36"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "16")))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "12") (ifseqformula "35"))
                  (rule "allLeft" (formula "24") (inst "t=i_1_3"))
                  (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "24") (term "0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
         (branch "if x_6 false"
            (builtin "One Step Simplification" (formula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_msg = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (_msg = null)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_1"))
   (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_1"))
   (rule "compound_subtraction_1" (formula "22") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
   (rule "assignment_read_length" (formula "22") (term "1"))
   (branch "Normal Execution (_msg != null)"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
      (rule "false_right" (formula "22"))
      (rule "assignmentSubtractionInt" (formula "22") (term "1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "translateJavaSubInt" (formula "22") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "22") (term "0,1,0"))
      (rule "mul_literals" (formula "22") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
      (rule "less_than_comparison_simple" (formula "22") (term "1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "22") (term "1"))
      (rule "emptyModality" (formula "22") (term "1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "impRight" (formula "22"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "11"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "methodCallEmpty" (formula "23") (term "1"))
      (rule "tryEmpty" (formula "23") (term "1"))
      (rule "emptyModality" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "eqSymm" (formula "23") (term "1,0,0,1"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (term "0") (ifseqformula "4"))
      (rule "nonNull" (formula "23") (term "1,0,0,0,0,0") (inst "i=i_1"))
      (rule "greater_literals" (formula "23") (term "0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "2,1,0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "nonNull" (formula "23") (term "1,0,0,0,0,0,0,0") (inst "i=i_1"))
      (rule "greater_literals" (formula "23") (term "0,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "nonNull" (formula "23") (term "1,0,0,0,0,0,0") (inst "i=i_1"))
      (rule "greater_literals" (formula "23") (term "0,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "2,1,0,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
      (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_3"))
      (rule "applyEq" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_3"))
      (rule "applyEq" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,1,0,0,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,0,0,0,0,0,0,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,1,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,1,0,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,1,0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
      (rule "applyEqReverse" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "23") (term "0,0,0,0"))
      (rule "nnf_imp2or" (formula "23") (term "0,1,0,0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0"))
      (rule "andRight" (formula "23"))
      (branch "Case 1"
         (rule "andRight" (formula "23"))
         (branch "Case 1"
            (rule "andRight" (formula "23"))
            (branch "Case 1"
               (rule "allRight" (formula "23") (inst "sk=i_1_9"))
               (rule "orRight" (formula "23"))
               (rule "notRight" (formula "24"))
               (rule "orRight" (formula "24"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "25"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
               (rule "simplifySelectOfAnon" (formula "3"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "16")))
               (rule "ifthenelse_negated" (formula "3") (term "0"))
               (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "16"))
               (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "16"))
               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or" (formula "4"))
               (rule "cnf_rightDist" (formula "3"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
               (rule "times_zero_1" (formula "17") (term "0,0"))
               (rule "add_zero_left" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
               (rule "allLeft" (formula "14") (inst "t=i_1_9"))
               (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "14") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
               (rule "add_literals" (formula "14") (term "0,0,1"))
               (rule "leq_literals" (formula "14") (term "0,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "24"))
               (rule "close" (formula "22") (ifseqformula "7"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "23") (inst "sk=i_1_8"))
               (rule "orRight" (formula "23"))
               (rule "notRight" (formula "24"))
               (rule "orRight" (formula "24"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "25"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
               (rule "simplifySelectOfAnon" (formula "3"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "17")))
               (rule "ifthenelse_negated" (formula "3") (term "0"))
               (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "17"))
               (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "17"))
               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or" (formula "4"))
               (rule "cnf_rightDist" (formula "3"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
               (rule "times_zero_1" (formula "17") (term "0,0"))
               (rule "add_zero_left" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
               (rule "allLeft" (formula "16") (inst "t=i_1_8"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "16") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
               (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
               (rule "add_literals" (formula "16") (term "0,0,1"))
               (rule "leq_literals" (formula "16") (term "0,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "notLeft" (formula "16"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "25"))
               (rule "close" (formula "22") (ifseqformula "7"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "23") (inst "sk=i_1_7"))
            (rule "orRight" (formula "23"))
            (rule "orRight" (formula "23"))
            (rule "notRight" (formula "25"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "15") (ifseqformula "18"))
            (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "6") (ifseqformula "18"))
            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
            (rule "ifEqualsNull" (formula "3"))
            (rule "cnf_rightDist" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "cnf_rightDist" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "commute_or" (formula "4"))
            (rule "cnf_rightDist" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
            (rule "times_zero_1" (formula "17") (term "0,0"))
            (rule "add_zero_left" (formula "17") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1"))
            (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "15") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
            (rule "allLeft" (formula "18") (inst "t=i_1_7"))
            (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "18") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
            (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
            (rule "add_literals" (formula "18") (term "0,0,1"))
            (rule "leq_literals" (formula "18") (term "0,1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "26"))
            (rule "close" (formula "22") (ifseqformula "7"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "23") (inst "sk=f_2"))
         (rule "allRight" (formula "23") (inst "sk=o_2"))
         (rule "orRight" (formula "23"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_2_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
         (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "closeTrue" (formula "25"))
      )
   )
   (branch "Null Reference (_msg = null)"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
