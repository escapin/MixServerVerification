\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 18 19:04:05 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 18 19:04:05 CET 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:unsign(byte)].JML normal_behavior operation contract.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:unsign(byte)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))

(autoModeTime "96")

(branch "dummy ID"
(rule "defOfunsign" (formula "1") (term "1,0,0,0,1,1") (newnames "b,result,exc,heapAtPre,o,f") (userinteraction))
(rule "translateJavaCastInt" (formula "1") (term "0,1,1,0,0,0,1,1") (userinteraction))
(rule "translateJavaAddInt" (formula "1") (term "1,1,0,0,0,1,1") (userinteraction))
(rule "assignment" (formula "1") (term "1,1") (userinteraction))
(rule "methodBodyExpand" (formula "1") (term "1,1,1") (newnames "heapBefore_unsign,savedHeapBefore_unsign") (userinteraction))
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "3") (term "0,0,0,1"))
(rule "polySimp_addComm0" (formula "3") (term "1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,0,0,1"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,1"))
(rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,1"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,1,0"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
   (rule "compound_addition_1" (formula "4") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2"))
   (rule "widening_identity_cast_5" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "assignmentAdditionInt" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaAddInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "4") (term "0,1,0"))
   (rule "blockReturn" (formula "4") (term "1"))
   (rule "methodCallReturn" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "4"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "3"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "methodCallReturn" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "orRight" (formula "4"))
   (rule "notRight" (formula "4"))
   (rule "polySimp_homoEq" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
   (rule "mul_literals" (formula "5") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
   (rule "add_literals" (formula "5") (term "1,1,0"))
   (rule "times_zero_1" (formula "5") (term "1,0"))
   (rule "add_zero_right" (formula "5") (term "0"))
   (rule "equal_literals" (formula "5"))
   (rule "false_right" (formula "5"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
