\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 18 22:00:31 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=60000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Fri Nov 18 22:00:31 CET 2016
name=lenInverse
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "6" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "7" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "8" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "9" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "10" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "11" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))
(keyLog "12" (keyUser "mihai" ) (keyVersion "b47d5398afca7e5b5ae9d483bbd792dd953e71bc"))

(autoModeTime "88029")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "f_i") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(rule "notRight" (formula "2") (userinteraction))
(rule "defOfint2seq" (formula "2") (term "0,0") (userinteraction))
(rule "defOfseq2int" (formula "2") (term "0") (userinteraction))
(rule "getOfSeqConcat" (formula "2") (term "0,1,1,1,0") (userinteraction))
(rule "ifthenelse_split" (formula "2") (term "0,1,1,1,0") (userinteraction))
(branch " 3 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length TRUE"
   (builtin "One Step Simplification" (formula "1"))
   (rule "expand_inInt" (formula "2") (term "1"))
   (rule "less_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch " 3 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length FALSE"
   (builtin "One Step Simplification" (formula "3"))
   (rule "sub_literals" (formula "3") (term "1,0,1,1,1,0") (userinteraction))
   (rule "getOfSeqConcat" (formula "3") (term "0,1,1,1,0") (userinteraction))
   (rule "ifthenelse_split" (formula "3") (term "0,1,1,1,0") (userinteraction))
   (branch " 2 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length TRUE"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "expand_inInt" (formula "2") (term "1"))
      (rule "less_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch " 2 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length FALSE"
      (builtin "One Step Simplification" (formula "4"))
      (rule "sub_literals" (formula "4") (term "1,0,1,1,1,0") (userinteraction))
      (rule "getOfSeqConcat" (formula "4") (term "0,1,1,1,0") (userinteraction))
      (rule "ifthenelse_split" (formula "4") (term "0,1,1,1,0") (userinteraction))
      (branch "1 < 〈(byte)(javaMod(javaDivInt(f_i, 256), 256))〉.length TRUE"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "expand_inInt" (formula "2") (term "1"))
         (rule "less_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "1 < 〈(byte)(javaMod(javaDivInt(f_i, 256), 256))〉.length FALSE"
         (builtin "One Step Simplification" (formula "5"))
         (rule "sub_literals" (formula "5") (term "1,0,1,1,1,0") (userinteraction))
         (rule "getOfSeqSingleton" (formula "5") (term "0,1,1,1,0") (userinteraction))
         (builtin "One Step Simplification" (formula "5"))
         (rule "castDel" (formula "5") (term "0,1,1,1,0") (userinteraction))
         (rule "translateJavaCastByte" (formula "5") (term "0,1,1,1,0") (userinteraction))
         (rule "getOfSeqConcat" (formula "5") (term "0,1,0,1,1,0") (userinteraction))
         (rule "ifthenelse_split" (formula "5") (term "0,1,0,1,1,0") (userinteraction))
         (branch " 2 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length TRUE"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "5"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "4"))
         )
         (branch " 2 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length FALSE"
            (builtin "One Step Simplification" (formula "6"))
            (rule "sub_literals" (formula "6") (term "1,0,1,0,1,1,0") (userinteraction))
            (rule "getOfSeqConcat" (formula "6") (term "0,1,0,1,1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "6") (term "0,1,0,1,1,0") (userinteraction))
            (branch " 1 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length TRUE"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "5"))
            )
            (branch " 1 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length FALSE"
               (builtin "One Step Simplification" (formula "7"))
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "5"))
               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "6")))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
               (builtin "One Step Simplification" (formula "2"))
               (rule "less_literals" (formula "4") (userinteraction))
               (rule "less_literals" (formula "2") (userinteraction))
               (rule "less_literals" (formula "3") (userinteraction))
               (rule "false_right" (formula "2") (userinteraction))
               (rule "sub_literals" (formula "2") (term "1,0,1,0,1,1,0") (userinteraction))
               (rule "getOfSeqConcat" (formula "2") (term "0,1,0,1,1,0") (userinteraction))
               (rule "ifthenelse_split" (formula "2") (term "0,1,0,1,1,0") (userinteraction))
               (branch "0 < 〈(byte)(javaMod(javaDivInt(f_i, 256), 256))〉.length TRUE"
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "translateJavaCastByte" (formula "3") (term "0,0,1,0,1,1,0") (userinteraction))
                  (rule "castDel" (formula "3") (term "0,1,0,1,1,0") (userinteraction))
                  (rule "getOfSeqConcat" (formula "3") (term "0,1,0,1,0") (userinteraction))
                  (rule "ifthenelse_split" (formula "3") (term "0,1,0,1,0") (userinteraction))
                  (branch " 1 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length TRUE"
                     (builtin "One Step Simplification" (formula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "expand_inInt" (formula "3") (term "1"))
                     (rule "less_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "less_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch " 1 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length FALSE"
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "sub_literals" (formula "4") (term "1,0,1,0,1,0") (userinteraction))
                     (rule "getOfSeqConcat" (formula "4") (term "0,1,0,1,0") (userinteraction))
                     (rule "ifthenelse_split" (formula "4") (term "0,1,0,1,0") (userinteraction))
                     (branch " 0 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length TRUE"
                        (rule "translateJavaCastByte" (formula "5") (term "0,1,1,1,0,0,1,0,0") (userinteraction))
                        (rule "translateJavaMod" (formula "5") (term "0,0,1,1,1,0,0,1,0,0") (userinteraction))
                        (rule "getOfSeqConcat" (formula "5") (term "0,1,0,0") (userinteraction))
                        (rule "ifthenelse_split" (formula "5") (term "0,1,0,0") (userinteraction))
                        (branch " 0 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length TRUE"
                           (builtin "One Step Simplification" (formula "6"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "less_literals" (formula "5") (userinteraction))
                           (builtin "One Step Simplification" (formula "3"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                           (rule "true_left" (formula "1") (userinteraction))
                           (rule "less_literals" (formula "1") (userinteraction))
                           (rule "true_left" (formula "1") (userinteraction))
                           (rule "false_right" (formula "2") (userinteraction))
                           (rule "translateJavaAddInt" (formula "2") (term "0") (userinteraction))
                           (rule "expand_addJint" (formula "2") (term "0") (userinteraction))
                           (rule "translateJavaMulInt" (formula "2") (term "0,0,0") (userinteraction))
                           (rule "translateJavaAddInt" (formula "2") (term "1,0,0") (userinteraction))
                           (rule "expand_mulJint" (formula "2") (term "0,0,0") (userinteraction))
                           (rule "castDel" (formula "2") (term "0,1,0,0,0,0") (userinteraction))
                           (rule "translateJavaMod" (formula "2") (term "0,0,1,0,0,0,0") (userinteraction))
                           (rule "translateJavaDivInt" (formula "2") (term "0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "expand_divJint" (formula "2") (term "0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "translateJavaDivInt" (formula "2") (term "0,0,0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "translateJavaDivInt" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "expand_divJint" (formula "2") (term "0,0,0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "expand_divJint" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0") (userinteraction))
                           (rule "expand_addJint" (formula "2") (term "1,0,0") (userinteraction))
                           (rule "castDel" (formula "2") (term "0,1,0,0,1,0,0") (userinteraction))
                           (rule "translateJavaMulInt" (formula "2") (term "0,0,1,0,0") (userinteraction))
                           (rule "expand_mulJint" (formula "2") (term "0,0,1,0,0") (userinteraction))
                           (rule "translateJavaAddInt" (formula "2") (term "1,0,1,0,0") (userinteraction))
                           (rule "expand_addJint" (formula "2") (term "1,0,1,0,0") (userinteraction))
                           (rule "translateJavaMulInt" (formula "2") (term "0,0,1,0,1,0,0") (userinteraction))
                           (rule "expand_mulJint" (formula "2") (term "0,0,1,0,1,0,0") (userinteraction))
                           (rule "translateJavaMod" (formula "2") (term "0,0,1,0,0,0,1,0,1,0,0") (userinteraction))
                           (rule "translateJavaDivInt" (formula "2") (term "0,0,0,1,0,0,0,1,0,1,0,0") (userinteraction))
                           (rule "expand_divJint" (formula "2") (term "0,0,0,1,0,0,0,1,0,1,0,0") (userinteraction))
                           (rule "translateJavaMod" (formula "2") (term "0,0,1,0,1,0,1,0,0") (userinteraction))
                           (rule "cut" (inst "cutFormula=  unsign(moduloByte(jmod(f_i, Z(6(5(2(#)))))))
= jmod(f_i, Z(6(5(2(#)))))") (userinteraction))
                           (branch "CUT: unsign(moduloByte(jmod(f_i, 256))) = jmod(f_i, 256) TRUE"
                              (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "1") (userinteraction))
                              (rule "translateJavaCastByte" (formula "3") (term "0,1,0,0,0,0") (userinteraction))
                              (rule "cut" (inst "cutFormula=  unsign(moduloByte(jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i,
                                                                      Z(6(5(2(#)))))),
                                                       Z(6(5(2(#)))))),
                                        Z(6(5(2(#)))))),
                         Z(6(5(2(#)))))))
= jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i,
                                                    Z(6(5(2(#)))))),
                                     Z(6(5(2(#)))))),
                      Z(6(5(2(#)))))),
       Z(6(5(2(#)))))") (userinteraction))
                              (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i, 256)), 256)), 256)), 256))) = jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i, 256)), 256)), 256)), 256) TRUE"
                                 (rule "applyEq" (formula "4") (term "1,0,0,0,0") (ifseqformula "1") (userinteraction))
                                 (rule "translateJavaCastByte" (formula "4") (term "0,1,0,0,0,1,0,0") (userinteraction))
                                 (rule "cut" (inst "cutFormula=  unsign(moduloByte(javaMod(javaDivInt(javaDivInt(f_i,
                                                  Z(6(5(2(#))))),
                                       Z(6(5(2(#))))),
                            Z(6(5(2(#)))))))
= javaMod(javaDivInt(javaDivInt(f_i, Z(6(5(2(#))))),
                     Z(6(5(2(#))))),
          Z(6(5(2(#)))))") (userinteraction))
                                 (branch "CUT: unsign(moduloByte(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))) = javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256) TRUE"
                                    (rule "applyEq" (formula "5") (term "1,0,0,0,1,0,0") (ifseqformula "1") (userinteraction))
                                    (rule "cut" (inst "cutFormula=  unsign(moduloByte(jmod(moduloInt(jdiv(f_i,
                                        Z(6(5(2(#)))))),
                         Z(6(5(2(#)))))))
= jmod(moduloInt(jdiv(f_i, Z(6(5(2(#)))))),
       Z(6(5(2(#)))))") (userinteraction))
                                    (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(f_i, 256)), 256))) = jmod(moduloInt(jdiv(f_i, 256)), 256) TRUE"
                                       (rule "cut" (inst "cutFormula=  unsign(moduloByte(jmod(moduloInt(jdiv(f_i,
                                        Z(6(5(2(#)))))),
                         Z(6(5(2(#)))))))
= jmod(moduloInt(jdiv(f_i, Z(6(5(2(#)))))),
       Z(6(5(2(#)))))") (userinteraction))
                                       (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(f_i, 256)), 256))) = jmod(moduloInt(jdiv(f_i, 256)), 256) TRUE"
                                          (rule "applyEq" (formula "6") (term "1,0,0,0,1,0,1,0,0") (ifseqformula "1") (userinteraction))
                                          (rule "hide_left" (formula "3") (userinteraction))
                                          (rule "hide_left" (formula "2") (userinteraction))
                                          (rule "hide_left" (formula "2") (userinteraction))
                                          (rule "hide_left" (formula "1") (userinteraction))
                                          (rule "moduloIntFixpointInline" (formula "2") (term "0,1,0,0,0,1,0,1,0,0") (userinteraction))
                                          (rule "ifthenelse_split" (formula "2") (term "0,1,0,0,0,1,0,1,0,0") (userinteraction))
                                          (branch "inInt(jdiv(f_i, 256)) TRUE"
                                             (rule "translateJavaDivInt" (formula "3") (term "0,0,1,0,0,0,1,0,0") (userinteraction))
                                             (rule "expand_divJint" (formula "3") (term "0,0,1,0,0,0,1,0,0") (userinteraction))
                                             (rule "moduloIntFixpoint" (formula "3") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "1") (userinteraction))
                                             (rule "translateJavaDivInt" (formula "3") (term "0,1,0,0,0,1,0,0") (userinteraction))
                                             (rule "expand_divJint" (formula "3") (term "0,1,0,0,0,1,0,0") (userinteraction))
                                             (rule "moduloIntFixpoint" (formula "3") (term "0,0,0,0,0,1,0,0,0,0") (ifseqformula "1") (userinteraction))
                                             (rule "moduloIntFixpointInline" (formula "3") (term "0,0,1,0,1,0,0") (userinteraction))
                                             (rule "ifthenelse_split" (formula "3") (term "0,0,1,0,1,0,0") (userinteraction))
                                             (branch "inInt(256 * jmod(jdiv(f_i, 256), 256)) TRUE"
                                                (rule "moduloIntFixpointInline" (formula "4") (term "1,0,1,0,0") (userinteraction))
                                                (rule "ifthenelse_split" (formula "4") (term "1,0,1,0,0") (userinteraction))
                                                (branch "inInt(256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256)) TRUE"
                                                   (rule "translateJavaMod" (formula "5") (term "1,0,0,0,1,0,0") (userinteraction))
                                                   (rule "moduloIntFixpointInline" (formula "5") (term "0,1,0,0,0,1,0,0") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "5") (term "0,1,0,0,0,1,0,0") (userinteraction))
                                                   (branch "inInt(jdiv(jdiv(f_i, 256), 256)) TRUE"
                                                      (rule "moduloIntFixpoint" (formula "6") (term "0,0,0,1,0,0,0,0") (ifseqformula "1") (userinteraction))
                                                      (rule "moduloIntFixpointInline" (formula "6") (term "0,0,1,0,0") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "6") (term "0,0,1,0,0") (userinteraction))
                                                      (branch "inInt(65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256)) TRUE"
                                                         (rule "moduloIntFixpointInline" (formula "7") (term "1,0,0") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "7") (term "1,0,0") (userinteraction))
                                                         (branch "inInt( 65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256) + ( 256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256))) TRUE"
                                                            (rule "moduloIntFixpointInline" (formula "8") (term "0,0,0") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "8") (term "0,0,0") (userinteraction))
                                                            (branch "inInt( 16777216 * jmod(moduloInt(jdiv(jdiv(jdiv(f_i, 256), 256), 256)), 256)) TRUE"
                                                               (rule "moduloIntFixpointInline" (formula "9") (term "0") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "9") (term "0") (userinteraction))
                                                               (branch "inInt( 16777216 * jmod(moduloInt(jdiv(jdiv(jdiv(f_i, 256), 256), 256)), 256) + ( 65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256) + ( 256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256)))) TRUE"
                                                                  (rule "andLeft" (formula "9") (userinteraction))
                                                                  (rule "expand_inInt" (formula "1"))
                                                                  (rule "expand_inInt" (formula "2"))
                                                                  (rule "expand_inInt" (formula "3"))
                                                                  (rule "expand_inInt" (formula "4"))
                                                                  (rule "expand_inInt" (formula "5"))
                                                                  (rule "expand_inInt" (formula "6"))
                                                                  (rule "expand_inInt" (formula "7"))
                                                                  (rule "expand_inInt" (formula "8"))
                                                                  (rule "expand_inInt" (formula "10"))
                                                                  (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "5"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "andLeft" (formula "15"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "polySimp_homoEq" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "19"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "20") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "5") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "1") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "elimGcdEq" (formula "19") (inst "elimGcdRightDiv=add(add(jdiv(f_i, Z(6(5(2(#))))),
        mul(jmod(jdiv(f_i, Z(6(5(2(#))))),
                 Z(6(5(2(#))))),
            Z(neglit(1(#))))),
    mul(jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                  Z(6(5(2(#))))),
             Z(6(5(2(#))))),
        Z(neglit(6(5(2(#)))))))") (inst "elimGcdLeftDiv=mul(jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                             Z(6(5(2(#))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(6(3(5(5(6(#)))))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "13") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "neg_literal" (formula "13") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(8(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(neglit(8(2(1(#)))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                                                                  (rule "greater_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "4") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "greater_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "2") (ifseqformula "7"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "7"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "6") (ifseqformula "13"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "13"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,1"))
                                                                  (rule "greater_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "17"))
                                                                  (rule "greater_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "expand_moduloInteger" (formula "2") (term "0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "2") (term "0,0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "21") (term "0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "21") (term "0,0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "4") (term "0,0"))
                                                                  (rule "replace_int_MIN" (formula "4") (term "0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "expand_moduloInteger" (formula "3") (term "0,0"))
                                                                  (rule "replace_int_MIN" (formula "3") (term "0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "3") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "jdiv_axiom" (formula "9") (term "0,0"))
                                                                  (rule "eqSymm" (formula "9"))
                                                                  (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "20"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "eqSymm" (formula "9"))
                                                                  (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "4") (term "0,0,1,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,0,1,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "5") (term "0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "22") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "22") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "9"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "15"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "8") (ifseqformula "13"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "4") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "greater_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "7"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "6") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                  (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_71"))
                                                                  (rule "equal_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "qeq_literals" (formula "9") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                                  (rule "add_literals" (formula "11") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "1"))
                                                                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,0,1,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,0,1,1") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,1,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,1,0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,0,1,1") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "17") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "17") (term "0,1,1") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "1"))
                                                                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                  (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "25") (term "0,0,0,1,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,1,0,0,1") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,0,1,0,1") (ifseqformula "9"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "9"))
                                                                  (rule "applyEq" (formula "5") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "20") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "jmod_axiom" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "18") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "1") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "25") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "25") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "25") (term "0,1"))
                                                                  (rule "jmod_axiom" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "elimGcdEq" (formula "23") (inst "elimGcdRightDiv=add(jdiv(quotient_71, Z(6(5(2(#))))),
    mul(jmod(jdiv(quotient_71, Z(6(5(2(#))))),
             Z(6(5(2(#))))),
        Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(jmod(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(jdiv(quotient_71,
                               Z(6(5(2(#))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "23") (term "0,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "23") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "23") (term "0,0,1"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "17") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "8") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "16"))
                                                                  (rule "greater_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "17") (ifseqformula "16"))
                                                                  (rule "greater_literals" (formula "17") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "17") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "polySimp_mulAssoc" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "15") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "greater_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "22"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_71") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "mul_literals" (formula "21") (term "1"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_71") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "jdiv_axiom" (formula "8") (term "0,0"))
                                                                  (rule "eqSymm" (formula "8"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "eqSymm" (formula "8"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "24") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "4") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "24") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "8"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "9") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "20"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0,1"))
                                                                  (rule "greater_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "19") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "greater_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_mulAssoc" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "11"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "17") (ifseqformula "20"))
                                                                  (rule "greater_literals" (formula "17") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "17") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "17") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "4") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "greater_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "7"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "2") (ifseqformula "7"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_72"))
                                                                  (rule "equal_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "1"))
                                                                  (rule "add_literals" (formula "10") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "22"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "8"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "21") (term "0,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "8"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                  (rule "applyEq" (formula "4") (term "0,1,0,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "8"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,1") (ifseqformula "8"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "27") (term "0,0,1,1") (ifseqformula "8"))
                                                                  (rule "applyEqRigid" (formula "27") (term "0,1") (ifseqformula "8"))
                                                                  (rule "jmod_axiom" (formula "12") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "jmod_axiom" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "1") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,1"))
                                                                  (rule "jmod_axiom" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "jmod_axiom" (formula "27") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                                                                  (rule "add_literals" (formula "27") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "27") (term "0,1"))
                                                                  (rule "add_zero_left" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "elimGcdEq" (formula "25") (inst "elimGcdRightDiv=jdiv(quotient_72, Z(6(5(2(#)))))") (inst "elimGcdLeftDiv=jmod(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
         mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                 jdiv(quotient_72, Z(6(5(2(#)))))),
             Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "25") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "25") (term "0,0,1"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "25") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(5(3(5(5(6(#))))))") (inst "elimGcdLeftDiv=quotient_72") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "14"))
                                                                  (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_72") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "9"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "17"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_mulAssoc" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "4") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "greater_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "7"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "6"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "greater_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "22"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "20"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(neglit(7(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=quotient_72") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "mul_literals" (formula "21") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_72") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "greater_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "20"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "19"))
                                                                  (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "16") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "16") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "jdiv_axiom" (formula "3") (term "1,0,1,0,0"))
                                                                  (rule "eqSymm" (formula "3"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "eqSymm" (formula "3"))
                                                                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "5") (ifseqformula "7"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "4"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "8"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "greater_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "7"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "22"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "6") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "21"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_73"))
                                                                  (rule "equal_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                  (rule "add_literals" (formula "5") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "29") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "applyEqRigid" (formula "7") (term "1,0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "3"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "1"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "3"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
                                                                  (rule "mod_axiom" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "29") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                                  (rule "mod_axiom" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_73") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "9"))
                                                                  (rule "mul_literals" (formula "26") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "23"))
                                                                  (rule "greater_literals" (formula "26") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "1"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "9"))
                                                                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=add(Z(7(0(6(8(8(3(8(#)))))))),
    mul(quotient_73, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_71") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "7"))
                                                                  (rule "greater_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(5(5(2(#))))") (inst "elimGcdLeftDiv=quotient_73") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "9"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "24") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "24") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "24") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "4"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                                                                  (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=quotient_73") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "4"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "21"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=add(Z(neglit(8(0(6(8(8(3(8(#))))))))),
    mul(quotient_73, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_71") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "20"))
                                                                  (rule "polySimp_mulAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "6"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "20"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "26"))
                                                                  (rule "greater_literals" (formula "28") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1,0"))
                                                                  (rule "leq_literals" (formula "28") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "19"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "11") (ifseqformula "4"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "div_axiom" (formula "9") (term "0,1,0,0") (inst "quotient=quotient_74"))
                                                                  (rule "equal_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "qeq_literals" (formula "9") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                                  (rule "add_literals" (formula "11") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                                  (rule "applyEq" (formula "34") (term "0,1,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0,1,0,0") (ifseqformula "9"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "34") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "12") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                                                                  (rule "elimGcdEq" (formula "34") (inst "elimGcdRightDiv=mul(quotient_74, Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))") (inst "elimGcdLeftDiv=jdiv(add(mul(quotient_74,
             Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         quotient_73),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "34") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "34") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "0,0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "34") (term "0,0"))
                                                                  (rule "add_literals" (formula "34") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "34") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "greater_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "29") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "mul_literals" (formula "29") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_74") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                                  (rule "leq_literals" (formula "29") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0"))
                                                                  (rule "leq_literals" (formula "29") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_74") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                                  (rule "leq_literals" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "2"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "17"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "10"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,1,1") (ifseqformula "30"))
                                                                  (rule "mul_literals" (formula "11") (term "1,1"))
                                                                  (rule "add_literals" (formula "11") (term "1"))
                                                                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "11") (term "1,1"))
                                                                  (rule "add_literals" (formula "11") (term "1"))
                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                                  (rule "qeq_literals" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0,0,0,0,0") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "2") (term "0,1"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "1") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "35") (term "0,0,0,0") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0,0"))
                                                                  (rule "applyEq" (formula "8") (term "0,0,0,0,0") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,0,0,0") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "35") (term "1"))
                                                                  (rule "applyEq" (formula "9") (term "1") (ifseqformula "29"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,1,0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "8") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0,1,0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "4"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "29"))
                                                                  (rule "leq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "greater_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "2"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "jdiv_axiom" (formula "10") (term "0,0"))
                                                                  (rule "eqSymm" (formula "10"))
                                                                  (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "eqSymm" (formula "10"))
                                                                  (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "10"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "10"))
                                                                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                                                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "10"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "2"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "greater_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "div_axiom" (formula "10") (term "1") (inst "quotient=quotient_75"))
                                                                  (rule "equal_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "qeq_literals" (formula "10") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "mul_literals" (formula "10") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "10"))
                                                                  (rule "andLeft" (formula "10"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                                  (rule "add_literals" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "10"))
                                                                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                                                  (rule "polySimp_mulAssoc" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "24") (inst "elimGcdRightDiv=add(Z(7(0(6(8(8(3(8(#)))))))),
    mul(quotient_75, Z(6(1(2(7(7(7(6(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_71") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "24") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "neg_literal" (formula "24") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "24") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "8"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "31") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                  (rule "mul_literals" (formula "31") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_75") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "31") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                  (rule "leq_literals" (formula "31") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "inEqSimp_strengthen1" (formula "31") (ifseqformula "37"))
                                                                  (rule "add_literals" (formula "31") (term "1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "31"))
                                                                  (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "false_right" (formula "37"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(5(3(5(5(6(#))))))),
    mul(quotient_75, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_72") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "37"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "33"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "inInt( 16777216 * jmod(moduloInt(jdiv(jdiv(jdiv(f_i, 256), 256), 256)), 256) + ( 65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256) + ( 256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256)))) FALSE"
                                                                  (rule "hide_right" (formula "10") (userinteraction))
                                                                  (rule "expand_inInt" (formula "8") (term "1"))
                                                                  (rule "expand_inInt" (formula "7"))
                                                                  (rule "expand_inInt" (formula "9"))
                                                                  (rule "expand_inInt" (formula "6"))
                                                                  (rule "expand_inInt" (formula "5"))
                                                                  (rule "expand_inInt" (formula "4"))
                                                                  (rule "expand_inInt" (formula "3"))
                                                                  (rule "expand_inInt" (formula "2"))
                                                                  (rule "expand_inInt" (formula "1"))
                                                                  (rule "replace_int_MAX" (formula "8") (term "1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "8") (term "0,1,1"))
                                                                  (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "5"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "1,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "12"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "3") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "18") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0,0,0,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                                  (rule "leq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(8(2(1(#)))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(neglit(8(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "leq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "12") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "5") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "9"))
                                                                  (rule "greater_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "4") (ifseqformula "11"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "greater_literals" (formula "4") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "11"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "expand_moduloInteger" (formula "19") (term "0,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "19") (term "0,0,0,0,1"))
                                                                  (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,0,0,1"))
                                                                  (rule "replace_int_RANGE" (formula "19") (term "1,1,0,0,0,1"))
                                                                  (rule "expand_moduloInteger" (formula "19") (term "0,0,0,0"))
                                                                  (rule "replace_int_MIN" (formula "19") (term "0,0,0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "19") (term "0,0,1,0,0,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "19") (term "1,1,0,0,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "2") (term "0,0"))
                                                                  (rule "replace_int_MIN" (formula "2") (term "0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
                                                                  (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                                                                  (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                                                                  (rule "jdiv_axiom" (formula "15") (term "0"))
                                                                  (rule "eqSymm" (formula "15"))
                                                                  (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "eqSymm" (formula "15"))
                                                                  (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "20") (term "0,0,0,1,1,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "3") (term "0,0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,0,1,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "1") (term "0,0,1,0,1,0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,0,0,1,1,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,0,1,0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "20") (term "0,0,1,0,1,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0,1,0,0,1,1") (ifseqformula "15"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "mul_literals" (formula "17") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "9"))
                                                                  (rule "greater_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "16"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "6") (ifseqformula "10"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "commute_and" (formula "20"))
                                                                  (rule "div_axiom" (formula "15") (term "1") (inst "quotient=quotient_66"))
                                                                  (rule "equal_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "qeq_literals" (formula "15") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "15"))
                                                                  (rule "andLeft" (formula "15"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "1"))
                                                                  (rule "add_literals" (formula "17") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "applyEq" (formula "23") (term "0,0,0,1,1,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "23") (term "0,0,0,1,1,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "applyEq" (formula "3") (term "0,0,1,1") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,1,1") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                                  (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "23") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,0,1,0,1,0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "23") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,1,0,1,0,0") (ifseqformula "15"))
                                                                  (rule "applyEqRigid" (formula "23") (term "0,0,1,0,1,1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "23") (term "0,0,1,0,1,0") (ifseqformula "15"))
                                                                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,0,0,1,0") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,0,0,1,1") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                                                  (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0") (ifseqformula "15"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "jmod_axiom" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "4") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "jmod_axiom" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "12") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "jmod_axiom" (formula "23") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                                                                  (rule "jmod_axiom" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                                  (rule "jmod_axiom" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "17"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "11") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "greater_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "9") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "16"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "15"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_66") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "5"))
                                                                  (rule "greater_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "20"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_66") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "11") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "15"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "3"))
                                                                  (rule "greater_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "true_left" (formula "6"))
                                                                  (rule "jdiv_axiom" (formula "21") (term "0,0,1,1,0"))
                                                                  (rule "eqSymm" (formula "1"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,0,1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,0,1,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "22") (term "0,1,0,1,0,0,0,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "22") (term "0,1,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "22") (term "0,1,0,1,1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "13"))
                                                                  (rule "greater_literals" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "greater_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "10") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "16"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "13"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0,1"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "12") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "12") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "greater_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "17"))
                                                                  (rule "greater_literals" (formula "12") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "10") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "10") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "mul_literals" (formula "9") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "4"))
                                                                  (rule "greater_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption5" (formula "7") (ifseqformula "11"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "6"))
                                                                  (rule "mul_literals" (formula "5") (term "1,0,1"))
                                                                  (rule "greater_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_subsumption2" (formula "5") (ifseqformula "12"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_67"))
                                                                  (rule "equal_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,0,1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,0,1,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "6") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,0,1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,0,0,1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,1,0,1,1") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,1"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0,1,0") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                                  (rule "jmod_axiom" (formula "25") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                                  (rule "jmod_axiom" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "25") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1,1"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,1,1"))
                                                                  (rule "jmod_axiom" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "jmod_axiom" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "jmod_axiom" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "22"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(5(3(5(5(6(#))))))") (inst "elimGcdLeftDiv=quotient_67") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "8"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "mul_literals" (formula "21") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(neglit(7(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=quotient_67") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                                  (rule "leq_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "17"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                                                                  (rule "greater_literals" (formula "13") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "polySimp_mulAssoc" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_67") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "greater_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_67") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                                                                  (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "16") (ifseqformula "4"))
                                                                  (rule "greater_literals" (formula "16") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "jdiv_axiom" (formula "7") (term "1,0,1,0,0"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "20"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "24") (term "1,0,1,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "6") (term "1,0,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "24") (term "1,0,1,0,0,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "24") (term "0,1,1,1") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "24") (term "0,1,1,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "11") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "greater_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "15"))
                                                                  (rule "greater_literals" (formula "11") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "12"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "greater_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_68"))
                                                                  (rule "equal_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "qeq_literals" (formula "7") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "mul_literals" (formula "7") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                  (rule "add_literals" (formula "9") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "1,0,1,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "applyEqRigid" (formula "27") (term "0,1,1,0") (ifseqformula "7"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "1,0"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,1,1") (ifseqformula "7"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "1,1"))
                                                                  (rule "applyEqRigid" (formula "11") (term "1,0,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                  (rule "applyEq" (formula "6") (term "1,0,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "27") (term "1,0,1,0,0,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                                                  (rule "mod_axiom" (formula "27") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                                                  (rule "mod_axiom" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                                                  (rule "mod_axiom" (formula "27") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "27") (term "0,0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "9"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(neglit(7(2(1(#)))))") (inst "elimGcdLeftDiv=quotient_68") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                                                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=add(Z(7(0(6(8(8(3(8(#)))))))),
    mul(quotient_68, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_66") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                                                  (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=quotient_68") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "10"))
                                                                  (rule "mul_literals" (formula "23") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                  (rule "mul_literals" (formula "23") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_68") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "23") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "26") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "9"))
                                                                  (rule "greater_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=add(Z(neglit(8(0(6(8(8(3(8(#))))))))),
    mul(quotient_68, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_66") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "8"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0"))
                                                                  (rule "leq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "20"))
                                                                  (rule "mul_literals" (formula "26") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "24"))
                                                                  (rule "greater_literals" (formula "26") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "11"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "9"))
                                                                  (rule "greater_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "19"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "8"))
                                                                  (rule "greater_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "div_axiom" (formula "29") (term "0,1,0,0,0,0") (inst "quotient=quotient_69"))
                                                                  (rule "equal_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                  (rule "add_literals" (formula "3") (term "0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "32") (term "0,1,0,0,0,1") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1"))
                                                                  (rule "applyEq" (formula "32") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                                  (rule "jmod_axiom" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "jmod_axiom" (formula "32") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "32") (term "0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "32") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "32") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_69") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                                  (rule "leq_literals" (formula "2") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "4"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_69") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                                  (rule "leq_literals" (formula "28") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "leq_literals" (formula "28") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "inEqSimp_antiSymm" (formula "28") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                                  (rule "qeq_literals" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "2") (term "1,1"))
                                                                  (rule "add_literals" (formula "2") (term "1"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "3") (term "1,1"))
                                                                  (rule "add_literals" (formula "3") (term "1"))
                                                                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "27"))
                                                                  (rule "applyEq" (formula "15") (term "0,0,0,0,0") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "33") (term "0,1,0,1,0") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "33") (term "1,0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,1,0"))
                                                                  (rule "applyEq" (formula "33") (term "0,0,0,0,0,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "33") (term "0,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "33") (term "0,0,0,1"))
                                                                  (rule "applyEq" (formula "9") (term "0,0,0,0,0") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,1,0,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,1"))
                                                                  (rule "add_literals" (formula "9") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "33") (term "0,1,0,1,1") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "33") (term "1,0,1,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,1,1"))
                                                                  (rule "applyEq" (formula "33") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "33") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                                                                  (rule "leq_literals" (formula "2") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "commute_and" (formula "31"))
                                                                  (rule "jdiv_axiom" (formula "13") (term "0,0"))
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "13"))
                                                                  (rule "applyEqRigid" (formula "32") (term "0,0,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                                                                  (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_70"))
                                                                  (rule "equal_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "qeq_literals" (formula "13") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1,1,1"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "1"))
                                                                  (rule "add_literals" (formula "15") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "35") (term "0,0,1") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "9"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_70") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "7"))
                                                                  (rule "mul_literals" (formula "29") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "mul_literals" (formula "29") (term "1"))
                                                                  (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_70") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "29") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0"))
                                                                  (rule "leq_literals" (formula "29") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "14"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,1") (ifseqformula "29"))
                                                                  (rule "mul_literals" (formula "15") (term "1"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "28"))
                                                                  (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,0"))
                                                                  (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_geqRight" (formula "35"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "29"))
                                                                  (rule "qeq_literals" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "29"))
                                                                  (rule "leq_literals" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "28"))
                                                                  (rule "mul_literals" (formula "8") (term "1,1"))
                                                                  (rule "add_literals" (formula "8") (term "1"))
                                                                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "27"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "27"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "31"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "inInt( 16777216 * jmod(moduloInt(jdiv(jdiv(jdiv(f_i, 256), 256), 256)), 256)) FALSE"
                                                               (rule "hide_right" (formula "9") (userinteraction))
                                                               (rule "expand_inInt" (formula "7") (term "1"))
                                                               (rule "expand_inInt" (formula "6"))
                                                               (rule "expand_inInt" (formula "5"))
                                                               (rule "expand_inInt" (formula "4"))
                                                               (rule "expand_inInt" (formula "8"))
                                                               (rule "expand_inInt" (formula "3"))
                                                               (rule "expand_inInt" (formula "2"))
                                                               (rule "expand_inInt" (formula "1"))
                                                               (rule "replace_int_MAX" (formula "7") (term "1,0,1"))
                                                               (rule "replace_int_MIN" (formula "7") (term "0,1,1"))
                                                               (rule "replace_int_MAX" (formula "6") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "6") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "5"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "14"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "12"))
                                                               (rule "inEqSimp_commuteLeq" (formula "6"))
                                                               (rule "inEqSimp_commuteLeq" (formula "15"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "inEqSimp_commuteLeq" (formula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "jmod_axiom" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "jmod_axiom" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "jmod_axiom" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(neglit(8(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                               (rule "leq_literals" (formula "4") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "leq_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "10") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                               (rule "leq_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "9") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "elimGcdLeq" (formula "15") (term "0") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                               (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,1,0,0"))
                                                               (rule "qeq_literals" (formula "15") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "15") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "elimGcdGeq" (formula "15") (term "1") (inst "elimGcdRightDiv=Z(neglit(8(2(1(#)))))") (inst "elimGcdLeftDiv=jmod(moduloInt(jdiv(jdiv(jdiv(f_i, Z(6(5(2(#))))),
                         Z(6(5(2(#))))),
                    Z(6(5(2(#)))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(1(2(7(7(7(6(1(#)))))))))"))
                                                               (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1"))
                                                               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,1"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,0,0,1,0,1"))
                                                               (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,1,0,1"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "15") (term "0,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0,0,1"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,0,1"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,1"))
                                                               (rule "qeq_literals" (formula "15") (term "0,0,1"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                                                               (rule "add_literals" (formula "15") (term "1,0,0,1"))
                                                               (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "15") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                               (rule "greater_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_exactShadow1" (formula "8") (ifseqformula "9"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,1"))
                                                               (rule "greater_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "14") (term "0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                               (rule "add_literals" (formula "14") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                                               (rule "leq_literals" (formula "14") (term "0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "expand_moduloInteger" (formula "17") (term "0,0,1"))
                                                               (rule "replace_int_MIN" (formula "17") (term "0,0,0,1"))
                                                               (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,0,1"))
                                                               (rule "replace_int_RANGE" (formula "17") (term "1,1,0,0,1"))
                                                               (rule "expand_moduloInteger" (formula "17") (term "0,0,0"))
                                                               (rule "replace_int_MIN" (formula "17") (term "0,0,0,0"))
                                                               (rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,0,0"))
                                                               (rule "replace_int_RANGE" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "jdiv_axiom" (formula "13") (term "0"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "1") (term "0,0,1,1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "18") (term "0,0,1,0,1,0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "2") (term "0,0,1,1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "18") (term "0,0,1,0,1,0,0,1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "14"))
                                                               (rule "greater_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "15") (term "0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                               (rule "mul_literals" (formula "15") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_exactShadow1" (formula "9") (ifseqformula "10"))
                                                               (rule "greater_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "mul_literals" (formula "9") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                               (rule "greater_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_subsumption5" (formula "2") (ifseqformula "10"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "greater_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "7"))
                                                               (rule "greater_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                               (rule "commute_and" (formula "18"))
                                                               (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_61"))
                                                               (rule "equal_literals" (formula "13") (term "0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "qeq_literals" (formula "13") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1,1,1"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "1"))
                                                               (rule "add_literals" (formula "15") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "14"))
                                                               (rule "inEqSimp_homoInEq1" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,0,1,1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "21") (term "0,0,1,0,1,0,0,1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "21") (term "0,0,1,0,1,0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "13"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,0,1,1") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,1,0,1") (ifseqformula "13"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                               (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "13"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "13"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "7") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "10") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "jmod_axiom" (formula "1") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "0,0,1"))
                                                               (rule "jmod_axiom" (formula "9") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "12") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "jmod_axiom" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "mul_literals" (formula "15") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                               (rule "mul_literals" (formula "9") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "14"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
                                                               (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_61") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "12") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "neg_literal" (formula "12") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "12"))
                                                               (rule "leq_literals" (formula "16") (term "0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "9") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "greater_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                               (rule "mul_literals" (formula "9") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "14"))
                                                               (rule "greater_literals" (formula "9") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_mulAssoc" (formula "9") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                               (rule "greater_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "10"))
                                                               (rule "greater_literals" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "inEqSimp_exactShadow1" (formula "9") (ifseqformula "5"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "greater_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow1" (formula "7") (ifseqformula "5"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "19"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "10"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "15"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_61") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "17") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "16") (term "0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "jdiv_axiom" (formula "19") (term "0,1,0,1,0,0,1"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "17"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "20") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "20") (term "0,1,0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "9"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "19"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "11"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "4"))
                                                               (rule "greater_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "inEqSimp_subsumption2" (formula "3") (ifseqformula "10"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "greater_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "2"))
                                                               (rule "greater_literals" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_subsumption5" (formula "5") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "greater_literals" (formula "5") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow0" (formula "10") (ifseqformula "9"))
                                                               (rule "greater_literals" (formula "10") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "greater_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "15"))
                                                               (rule "greater_literals" (formula "10") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "6"))
                                                               (rule "mul_literals" (formula "10") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow1" (formula "8") (ifseqformula "6"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,1"))
                                                               (rule "greater_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "20"))
                                                               (rule "leq_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "11"))
                                                               (rule "greater_literals" (formula "8") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "greater_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "16"))
                                                               (rule "greater_literals" (formula "8") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_62"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                               (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "23") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "23") (term "0,1,0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "1"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                               (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                               (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                                               (rule "jmod_axiom" (formula "6") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "8") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "jmod_axiom" (formula "5") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "7") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                               (rule "mul_literals" (formula "14") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "mul_literals" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                               (rule "mul_literals" (formula "8") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "qeq_literals" (formula "13") (term "0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "qeq_literals" (formula "13") (term "0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "mul_literals" (formula "18") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_62") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "18") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0"))
                                                               (rule "leq_literals" (formula "18") (term "0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                                               (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "14") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                               (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                               (rule "add_literals" (formula "14") (term "0,0"))
                                                               (rule "qeq_literals" (formula "14") (term "0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "6"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "12"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "17"))
                                                               (rule "greater_literals" (formula "19") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1,0"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "5") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "greater_literals" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "11"))
                                                               (rule "greater_literals" (formula "5") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "20"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(5(3(5(5(6(#))))))") (inst "elimGcdLeftDiv=quotient_62") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                               (rule "leq_literals" (formula "11") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                               (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_62") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "11") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "polySimp_mulAssoc" (formula "11") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "jdiv_axiom" (formula "21") (term "1,0,1,0,0,0"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "22") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "22") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "10"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "greater_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "12"))
                                                               (rule "greater_literals" (formula "7") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow0" (formula "9") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "9") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "greater_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                               (rule "mul_literals" (formula "9") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "13"))
                                                               (rule "greater_literals" (formula "9") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_63"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                               (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "applyEqRigid" (formula "25") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "25") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                                               (rule "mod_axiom" (formula "25") (term "1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,0,1"))
                                                               (rule "mod_axiom" (formula "25") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "qeq_literals" (formula "13") (term "0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "2"))
                                                               (rule "greater_literals" (formula "11") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "polySimp_mulAssoc" (formula "11") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_63") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "19") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                                               (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=add(Z(7(0(6(8(8(3(8(#)))))))),
    mul(quotient_63, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_61") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "16") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0"))
                                                               (rule "qeq_literals" (formula "16") (term "0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "18"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=add(Z(neglit(8(0(6(8(8(3(8(#))))))))),
    mul(quotient_63, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_61") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "11") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                               (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=quotient_63") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "11"))
                                                               (rule "mul_literals" (formula "25") (term "0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                               (rule "mul_literals" (formula "25") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "22"))
                                                               (rule "greater_literals" (formula "25") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "mul_literals" (formula "25") (term "1,0"))
                                                               (rule "leq_literals" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "4"))
                                                               (rule "greater_literals" (formula "15") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "qeq_literals" (formula "15") (term "0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "26"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "2"))
                                                               (rule "greater_literals" (formula "13") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "0,0"))
                                                               (rule "leq_literals" (formula "13") (term "0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                               (rule "mul_literals" (formula "12") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                               (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "3"))
                                                               (rule "greater_literals" (formula "12") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "polySimp_mulAssoc" (formula "12") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "17"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "2"))
                                                               (rule "greater_literals" (formula "12") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "0,0"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
                                                               (rule "mul_literals" (formula "24") (term "0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                               (rule "mul_literals" (formula "24") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "22"))
                                                               (rule "greater_literals" (formula "24") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "mul_literals" (formula "24") (term "1,0"))
                                                               (rule "leq_literals" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "18"))
                                                               (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "4"))
                                                               (rule "greater_literals" (formula "8") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "div_axiom" (formula "27") (term "0,1,0,0,1") (inst "quotient=quotient_64"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "30") (term "0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                                               (rule "applyEqRigid" (formula "30") (term "0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                               (rule "jmod_axiom" (formula "30") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                               (rule "jmod_axiom" (formula "30") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "30") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,1,1"))
                                                               (rule "mul_literals" (formula "30") (term "0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "25") (term "0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                               (rule "mul_literals" (formula "25") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_64") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "25") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0"))
                                                               (rule "leq_literals" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_64") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "26"))
                                                               (rule "mul_literals" (formula "4") (term "1,1"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "26"))
                                                               (rule "mul_literals" (formula "3") (term "1,1"))
                                                               (rule "add_literals" (formula "3") (term "1"))
                                                               (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                                                               (rule "qeq_literals" (formula "27"))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "31") (term "0,1,0,1,0") (ifseqformula "25"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,1,0"))
                                                               (rule "add_literals" (formula "31") (term "0,1,0"))
                                                               (rule "applyEqRigid" (formula "31") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                                               (rule "mul_literals" (formula "31") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
                                                               (rule "applyEq" (formula "31") (term "0,0,0,0,0,1") (ifseqformula "25"))
                                                               (rule "mul_literals" (formula "31") (term "0,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "31") (term "0,0,0,1"))
                                                               (rule "applyEq" (formula "31") (term "0,1,0,1,1") (ifseqformula "25"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,1,1"))
                                                               (rule "add_literals" (formula "31") (term "0,1,1"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "25"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                                               (rule "leq_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "commute_and" (formula "29"))
                                                               (rule "jdiv_axiom" (formula "29") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "30") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_65"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                               (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "33") (term "1") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "33") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "0,0,1"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "inEqSimp_leqRight" (formula "33"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "28") (term "0,0"))
                                                               (rule "add_zero_left" (formula "28") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                               (rule "mul_literals" (formula "28") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_65") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "28") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "29"))
                                                               (rule "greater_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,0"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch "inInt( 65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256) + ( 256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256))) FALSE"
                                                            (rule "hide_right" (formula "8") (userinteraction))
                                                            (rule "expand_inInt" (formula "6") (term "1"))
                                                            (rule "expand_inInt" (formula "5"))
                                                            (rule "expand_inInt" (formula "7"))
                                                            (rule "expand_inInt" (formula "4"))
                                                            (rule "expand_inInt" (formula "3"))
                                                            (rule "expand_inInt" (formula "2"))
                                                            (rule "expand_inInt" (formula "1"))
                                                            (rule "replace_int_MAX" (formula "6") (term "1,0,1"))
                                                            (rule "replace_int_MIN" (formula "6") (term "0,1,1"))
                                                            (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,1,1"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13"))
                                                            (rule "inEqSimp_commuteLeq" (formula "8"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "1"))
                                                            (rule "mul_literals" (formula "14") (term "1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                                                            (rule "jmod_axiom" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "jmod_axiom" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "jmod_axiom" (formula "14") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                            (rule "jmod_axiom" (formula "14") (term "1,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,0,1,1"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,0,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(8(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "8") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "leq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                            (rule "leq_literals" (formula "1") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "7") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "7"))
                                                            (rule "mul_literals" (formula "6") (term "1,0,1"))
                                                            (rule "greater_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "5"))
                                                            (rule "greater_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "6"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,0,1"))
                                                            (rule "greater_literals" (formula "12") (term "0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_exactShadow1" (formula "9") (ifseqformula "11"))
                                                            (rule "greater_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "commute_and" (formula "15"))
                                                            (rule "jdiv_axiom" (formula "11") (term "0"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "16") (term "0,0,0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "16") (term "0,0,0,0,1") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "16") (term "0,0,1,1,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "16") (term "0,0,1,1,1") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "16") (term "0,1,0,1,1") (ifseqformula "11"))
                                                            (rule "inEqSimp_exactShadow1" (formula "7") (ifseqformula "8"))
                                                            (rule "greater_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,1"))
                                                            (rule "greater_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "6"))
                                                            (rule "greater_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_exactShadow1" (formula "9") (ifseqformula "12"))
                                                            (rule "greater_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_58"))
                                                            (rule "equal_literals" (formula "11") (term "0"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "qeq_literals" (formula "11") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "1,1,1"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                            (rule "add_literals" (formula "13") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                            (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "11"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "19") (term "0,0,0,0,1") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,0,1,1,0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,0,1,1,1") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "11"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                            (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "applyEq" (formula "19") (term "0,1,0,1,1") (ifseqformula "11"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,1,1"))
                                                            (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "11"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,0,0,1,0,0,0") (ifseqformula "11"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                            (rule "applyEqRigid" (formula "19") (term "0,1,0,0,0,0") (ifseqformula "11"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                            (rule "jmod_axiom" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0"))
                                                            (rule "jmod_axiom" (formula "19") (term "0,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "1,1"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,1,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,1"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,1,1"))
                                                            (rule "add_literals" (formula "19") (term "0,0,1,1"))
                                                            (rule "jmod_axiom" (formula "8") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                            (rule "jmod_axiom" (formula "10") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "jmod_axiom" (formula "5") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "jmod_axiom" (formula "19") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                            (rule "mul_literals" (formula "13") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "16"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_58") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "10") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "3"))
                                                            (rule "greater_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                                                            (rule "mul_literals" (formula "15") (term "0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_58") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "15") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "6"))
                                                            (rule "greater_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "8"))
                                                            (rule "greater_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "greater_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "13"))
                                                            (rule "greater_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "qeq_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "8"))
                                                            (rule "greater_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_exactShadow0" (formula "7") (ifseqformula "6"))
                                                            (rule "greater_literals" (formula "7") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "greater_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "12"))
                                                            (rule "greater_literals" (formula "7") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "polySimp_mulAssoc" (formula "7") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow1" (formula "7") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "7") (term "1,0,1"))
                                                            (rule "greater_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "jdiv_axiom" (formula "3") (term "0"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "18") (term "0,0,0,1") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "18") (term "0,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "18") (term "0,1,1,1") (ifseqformula "3"))
                                                            (rule "inEqSimp_exactShadow0" (formula "6") (ifseqformula "9"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "greater_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "14"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "4"))
                                                            (rule "greater_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "18"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow1" (formula "8") (ifseqformula "4"))
                                                            (rule "greater_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_exactShadow0" (formula "8") (ifseqformula "7"))
                                                            (rule "greater_literals" (formula "8") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "greater_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "13"))
                                                            (rule "greater_literals" (formula "8") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_mulAssoc" (formula "8") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "7"))
                                                            (rule "greater_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "9"))
                                                            (rule "greater_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "5") (term "0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_59"))
                                                            (rule "equal_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                            (rule "add_literals" (formula "5") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "applyEqRigid" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "21") (term "0,1,1,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "1,1"))
                                                            (rule "applyEq" (formula "21") (term "0,0,0,1") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "21") (term "0,1,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "1,0"))
                                                            (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
                                                            (rule "jmod_axiom" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                            (rule "jmod_axiom" (formula "2") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "jmod_axiom" (formula "1") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "jmod_axiom" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0"))
                                                            (rule "qeq_literals" (formula "12") (term "0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "4"))
                                                            (rule "greater_literals" (formula "10") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "9"))
                                                            (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "5"))
                                                            (rule "greater_literals" (formula "13") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0"))
                                                            (rule "qeq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "16") (term "0,0"))
                                                            (rule "add_zero_left" (formula "16") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_59") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "16") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "leq_literals" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "8"))
                                                            (rule "mul_literals" (formula "17") (term "0,0"))
                                                            (rule "add_zero_left" (formula "17") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                            (rule "mul_literals" (formula "17") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "15"))
                                                            (rule "greater_literals" (formula "17") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "mul_literals" (formula "17") (term "1,0"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(5(3(5(5(6(#))))))") (inst "elimGcdLeftDiv=quotient_59") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                            (rule "leq_literals" (formula "9") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0"))
                                                            (rule "qeq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "9"))
                                                            (rule "leq_literals" (formula "7") (term "0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_59") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "commute_and" (formula "19"))
                                                            (rule "jdiv_axiom" (formula "2") (term "0,0"))
                                                            (rule "eqSymm" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "eqSymm" (formula "2"))
                                                            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "20") (term "0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_60"))
                                                            (rule "equal_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "qeq_literals" (formula "2") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "applyEqRigid" (formula "23") (term "0,0,1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                            (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=quotient_60") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "2") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_60") (inst "elimGcd=Z(6(5(2(#))))"))
                                                            (rule "leq_literals" (formula "18") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                            (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "commute_and" (formula "23"))
                                                            (rule "cut_direct" (formula "23") (term "1"))
                                                            (branch "CUT: f_i ≤ 2147483647 + quotient_60 * 16777216 TRUE"
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_geqRight" (formula "24"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "13") (ifseqformula "4"))
                                                               (rule "greater_literals" (formula "13") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "polySimp_mulAssoc" (formula "13") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0"))
                                                               (rule "add_literals" (formula "13") (term "0"))
                                                               (rule "leq_literals" (formula "13"))
                                                               (rule "closeFalse" (formula "13"))
                                                            )
                                                            (branch "CUT: f_i ≤ 2147483647 + quotient_60 * 16777216 FALSE"
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "false_right" (formula "24"))
                                                               (rule "inEqSimp_leqRight" (formula "23"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(8(0(6(8(8(3(8(#)))))))),
    mul(quotient_60, Z(6(3(5(5(6(#))))))))") (inst "elimGcdLeftDiv=quotient_58") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "leq_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), mul(quotient_60, Z(6(5(2(#))))))") (inst "elimGcdLeftDiv=quotient_59") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                               (rule "leq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "qeq_literals" (formula "6") (term "0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "21"))
                                                               (rule "greater_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                      )
                                                      (branch "inInt(65536 * jmod(jdiv(jdiv(f_i, 256), 256), 256)) FALSE"
                                                         (rule "hide_right" (formula "7") (userinteraction))
                                                         (rule "expand_inInt" (formula "5") (term "1"))
                                                         (rule "expand_inInt" (formula "4"))
                                                         (rule "expand_inInt" (formula "3"))
                                                         (rule "expand_inInt" (formula "2"))
                                                         (rule "expand_inInt" (formula "6"))
                                                         (rule "expand_inInt" (formula "1"))
                                                         (rule "replace_int_MAX" (formula "5") (term "1,0,1"))
                                                         (rule "replace_int_MIN" (formula "5") (term "0,1,1"))
                                                         (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "6") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "6") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "leq_literals" (formula "6") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "leq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "leq_literals" (formula "5") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "elimGcdLeq" (formula "11") (term "0") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                         (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,1,0,0"))
                                                         (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "elimGcdGeq" (formula "11") (term "1") (inst "elimGcdRightDiv=Z(neglit(8(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=jmod(jdiv(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#))))),
     Z(6(5(2(#)))))") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                         (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0,0,1,0,1"))
                                                         (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,1,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "add_zero_left" (formula "11") (term "0,0,1,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0,1"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "1,0,0,1"))
                                                         (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "11") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "5"))
                                                         (rule "greater_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "3"))
                                                         (rule "greater_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "4"))
                                                         (rule "greater_literals" (formula "10") (term "0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_exactShadow1" (formula "7") (ifseqformula "9"))
                                                         (rule "greater_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_and" (formula "13"))
                                                         (rule "jdiv_axiom" (formula "9") (term "0"))
                                                         (rule "eqSymm" (formula "9"))
                                                         (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "eqSymm" (formula "9"))
                                                         (rule "applyEqRigid" (formula "14") (term "0,0,0,1") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "9"))
                                                         (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "6"))
                                                         (rule "greater_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "4"))
                                                         (rule "greater_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_exactShadow1" (formula "7") (ifseqformula "10"))
                                                         (rule "greater_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "3"))
                                                         (rule "greater_literals" (formula "8") (term "0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                         (rule "mul_literals" (formula "8") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                         (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_55"))
                                                         (rule "equal_literals" (formula "9") (term "0"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "qeq_literals" (formula "9") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,1"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "1"))
                                                         (rule "add_literals" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "17") (term "0,0,0,1") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "9"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "applyEqRigid" (formula "17") (term "0,0,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "9"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                                         (rule "jmod_axiom" (formula "6") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "jmod_axiom" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "jmod_axiom" (formula "3") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "jmod_axiom" (formula "8") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                         (rule "mul_literals" (formula "8") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "qeq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "1"))
                                                         (rule "greater_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "1"))
                                                         (rule "greater_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "4"))
                                                         (rule "greater_literals" (formula "5") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "greater_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "9"))
                                                         (rule "greater_literals" (formula "5") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "polySimp_mulAssoc" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "6"))
                                                         (rule "greater_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "greater_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "10"))
                                                         (rule "greater_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "14"))
                                                         (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_55") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "leq_literals" (formula "8") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_exactShadow2" (formula "2") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,1"))
                                                         (rule "greater_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
                                                         (rule "mul_literals" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_55") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_exactShadow2" (formula "2") (ifseqformula "6"))
                                                         (rule "greater_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "jdiv_axiom" (formula "15") (term "0,0,1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "5"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                                                         (rule "greater_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "7"))
                                                         (rule "greater_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "2"))
                                                         (rule "greater_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "7"))
                                                         (rule "greater_literals" (formula "4") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "greater_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "12"))
                                                         (rule "greater_literals" (formula "4") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_exactShadow0" (formula "6") (ifseqformula "5"))
                                                         (rule "greater_literals" (formula "6") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "greater_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "11"))
                                                         (rule "greater_literals" (formula "6") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "polySimp_mulAssoc" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "qeq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_exactShadow1" (formula "6") (ifseqformula "2"))
                                                         (rule "greater_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_56"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                         (rule "jmod_axiom" (formula "19") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "19") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                         (rule "mul_literals" (formula "9") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                         (rule "mul_literals" (formula "8") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "7"))
                                                         (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "11") (ifseqformula "3"))
                                                         (rule "greater_literals" (formula "11") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "qeq_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "7"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "add_zero_left" (formula "15") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(7(6(7(2(3(#)))))))") (inst "elimGcdLeftDiv=quotient_56") (inst "elimGcd=Z(6(3(5(5(6(#))))))"))
                                                         (rule "leq_literals" (formula "15") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                                                         (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_56") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "leq_literals" (formula "2") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "6") (term "0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "3"))
                                                         (rule "greater_literals" (formula "7") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "polySimp_mulAssoc" (formula "7") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "qeq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                                                         (rule "mul_literals" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_56") (inst "elimGcd=Z(6(5(2(#))))"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "16"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "2"))
                                                         (rule "greater_literals" (formula "7") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "mul_literals" (formula "7") (term "0,0"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_and" (formula "17"))
                                                         (rule "jdiv_axiom" (formula "17") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEqRigid" (formula "18") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_57"))
                                                         (rule "equal_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "21") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                         (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "21") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_geqRight" (formula "21"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_literals" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "inInt(jdiv(jdiv(f_i, 256), 256)) FALSE"
                                                      (rule "hide_right" (formula "6") (userinteraction))
                                                      (rule "expand_inInt" (formula "4") (term "1"))
                                                      (rule "expand_inInt" (formula "3"))
                                                      (rule "expand_inInt" (formula "2"))
                                                      (rule "expand_inInt" (formula "1"))
                                                      (rule "expand_inInt" (formula "5"))
                                                      (rule "replace_int_MAX" (formula "4") (term "1,0,1"))
                                                      (rule "replace_int_MIN" (formula "4") (term "0,1,1"))
                                                      (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "5") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "5") (term "0,1"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "6"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9"))
                                                      (rule "inEqSimp_commuteLeq" (formula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "jmod_axiom" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                      (rule "leq_literals" (formula "4") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "leq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                      (rule "leq_literals" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                                      (rule "greater_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow1" (formula "2") (ifseqformula "3"))
                                                      (rule "greater_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "8") (term "1,0,0,1"))
                                                      (rule "greater_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "7"))
                                                      (rule "greater_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "commute_and" (formula "11"))
                                                      (rule "jdiv_axiom" (formula "7") (term "0"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "7"))
                                                      (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "1"))
                                                      (rule "greater_literals" (formula "6") (term "0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "8"))
                                                      (rule "greater_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_exactShadow1" (formula "3") (ifseqformula "4"))
                                                      (rule "greater_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "2"))
                                                      (rule "greater_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_53"))
                                                      (rule "equal_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1,1,1"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                      (rule "add_literals" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "7"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "applyEqRigid" (formula "15") (term "0,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "7"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "15") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                                      (rule "jmod_axiom" (formula "4") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "jmod_axiom" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "jmod_axiom" (formula "6") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "7"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_53") (inst "elimGcd=Z(6(5(2(#))))"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow0" (formula "3") (ifseqformula "2"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "greater_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "7"))
                                                      (rule "greater_literals" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polySimp_mulAssoc" (formula "3") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_53") (inst "elimGcd=Z(6(5(2(#))))"))
                                                      (rule "leq_literals" (formula "6") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "4"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "greater_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "9"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "jdiv_axiom" (formula "13") (term "0,1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "3"))
                                                      (rule "greater_literals" (formula "4") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "greater_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "9"))
                                                      (rule "greater_literals" (formula "4") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "polySimp_mulAssoc" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow0" (formula "2") (ifseqformula "5"))
                                                      (rule "greater_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "greater_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "2") (ifseqformula "10"))
                                                      (rule "greater_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_54"))
                                                      (rule "equal_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                      (rule "mul_literals" (formula "8") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                                      (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "3"))
                                                      (rule "greater_literals" (formula "9") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_54") (inst "elimGcd=Z(6(5(2(#))))"))
                                                      (rule "leq_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_subsumption0" (formula "16") (term "1") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "16") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_geqRight" (formula "16"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                      (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "3"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "polySimp_mulAssoc" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "1"))
                                                      (rule "greater_literals" (formula "7") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "0,0"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "14") (ifseqformula "1"))
                                                      (rule "greater_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "closeFalse" (formula "14"))
                                                   )
                                                )
                                                (branch "inInt(256 * jmod(jdiv(f_i, 256), 256) + jmod(f_i, 256)) FALSE"
                                                   (rule "hide_right" (formula "5") (userinteraction))
                                                   (rule "expand_inInt" (formula "3") (term "1"))
                                                   (rule "expand_inInt" (formula "2"))
                                                   (rule "expand_inInt" (formula "1"))
                                                   (rule "expand_inInt" (formula "4"))
                                                   (rule "replace_int_MAX" (formula "3") (term "1,0,1"))
                                                   (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
                                                   (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "4") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "4") (term "0,1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "inEqSimp_commuteLeq" (formula "7"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
                                                   (rule "jmod_axiom" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "jmod_axiom" (formula "8") (term "1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,1,1"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_and" (formula "7"))
                                                   (rule "jdiv_axiom" (formula "3") (term "0"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "8") (term "0,1,1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0,1") (ifseqformula "3"))
                                                   (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_51"))
                                                   (rule "equal_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "qeq_literals" (formula "3") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "11") (term "0,1,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "11") (term "0,0,0,1") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "11") (term "0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "11") (term "0,1,1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "1,1"))
                                                   (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
                                                   (rule "jmod_axiom" (formula "2") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "jmod_axiom" (formula "11") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                                   (rule "jmod_axiom" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                   (rule "jmod_axiom" (formula "1") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                                   (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_51") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "4") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                   (rule "mul_literals" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_51") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "9") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "commute_and" (formula "11"))
                                                   (rule "jdiv_axiom" (formula "2") (term "0,0"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_52"))
                                                   (rule "equal_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "qeq_literals" (formula "2") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "15") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                   (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                   (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0"))
                                                   (rule "qeq_literals" (formula "5") (term "0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))") (inst "elimGcdLeftDiv=quotient_52") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "11") (term "0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_52") (inst "elimGcd=Z(6(5(2(#))))"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "commute_and" (formula "15"))
                                                   (rule "cut_direct" (formula "15") (term "1"))
                                                   (branch "CUT: f_i ≤ 2147483647 + quotient_52 * 65536 TRUE"
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_geqRight" (formula "16"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                      (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "9") (ifseqformula "4"))
                                                      (rule "greater_literals" (formula "9") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "polySimp_mulAssoc" (formula "9") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_literals" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch "CUT: f_i ≤ 2147483647 + quotient_52 * 65536 FALSE"
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "false_right" (formula "16"))
                                                      (rule "inEqSimp_leqRight" (formula "15"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "13"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch "inInt(256 * jmod(jdiv(f_i, 256), 256)) FALSE"
                                                (rule "hide_right" (formula "4") (userinteraction))
                                                (rule "expand_inInt" (formula "2") (term "1"))
                                                (rule "expand_inInt" (formula "1"))
                                                (rule "expand_inInt" (formula "3"))
                                                (rule "replace_int_MAX" (formula "2") (term "1,0,1"))
                                                (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                                                (rule "replace_int_MAX" (formula "1") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "1") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "3") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "3") (term "0,1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "elimGcdGeq" (formula "5") (term "1") (inst "elimGcdRightDiv=Z(neglit(8(0(6(8(8(3(8(#)))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0,0,1,0,1"))
                                                (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,1,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1"))
                                                (rule "add_literals" (formula "5") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "5") (term "0,0,1"))
                                                (rule "leq_literals" (formula "5") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "elimGcdLeq" (formula "5") (term "0") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=jmod(jdiv(f_i, Z(6(5(2(#))))), Z(6(5(2(#)))))") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "commute_and" (formula "5"))
                                                (rule "jdiv_axiom" (formula "1") (term "0"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,1") (ifseqformula "1"))
                                                (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_49"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "9") (term "0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                                (rule "jmod_axiom" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                (rule "jmod_axiom" (formula "9") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_49") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_49") (inst "elimGcd=Z(6(5(2(#))))"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "leq_literals" (formula "7") (term "0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "commute_and" (formula "9"))
                                                (rule "jdiv_axiom" (formula "9") (term "0,0,1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "1"))
                                                (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_50"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEqRigid" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "13") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_leqRight" (formula "13"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_literals" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                          (branch "inInt(jdiv(f_i, 256)) FALSE"
                                             (rule "hide_right" (formula "3") (userinteraction))
                                             (rule "expand_inInt" (formula "1") (term "1"))
                                             (rule "expand_inInt" (formula "2"))
                                             (rule "replace_int_MAX" (formula "1") (term "1,0,1"))
                                             (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
                                             (rule "replace_int_MAX" (formula "2") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "2") (term "0,1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_commuteLeq" (formula "4") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "3"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "commute_and" (formula "3"))
                                             (rule "jdiv_axiom" (formula "3") (term "0,1"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_48"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_48") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (term "1") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "8") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_geqRight" (formula "8"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "6") (ifseqformula "1"))
                                             (rule "greater_literals" (formula "6") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(f_i, 256)), 256))) = jmod(moduloInt(jdiv(f_i, 256)), 256) FALSE"
                                          (rule "hide_right" (formula "7") (userinteraction))
                                          (rule "close" (formula "6") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(f_i, 256)), 256))) = jmod(moduloInt(jdiv(f_i, 256)), 256) FALSE"
                                       (rule "hide_right" (formula "6") (userinteraction))
                                       (rule "expand_inInt" (formula "4") (term "1"))
                                       (rule "replace_int_MAX" (formula "4") (term "1,0,1"))
                                       (rule "replace_int_MIN" (formula "4") (term "0,1,1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "translateJavaMod" (formula "1") (term "0,0,0"))
                                       (rule "translateJavaMod" (formula "1") (term "1"))
                                       (rule "translateJavaDivInt" (formula "1") (term "0,0,0,0"))
                                       (rule "translateJavaDivInt" (formula "1") (term "0,1"))
                                       (rule "translateJavaDivInt" (formula "1") (term "0,0,0,0,0"))
                                       (rule "translateJavaDivInt" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "jmod_axiom" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "jmod_axiom" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "jmod_axiom" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "jmod_axiom" (formula "1") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "defOfunsign" (formula "2") (term "0"))
                                       (rule "translateJavaAddInt" (formula "2") (term "1,0"))
                                       (rule "translateJavaCastInt" (formula "2") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "defOfunsign" (formula "6") (term "0"))
                                       (rule "translateJavaAddInt" (formula "6") (term "1,0"))
                                       (rule "translateJavaCastInt" (formula "6") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0"))
                                       (rule "defOfunsign" (formula "3") (term "0"))
                                       (rule "translateJavaAddInt" (formula "3") (term "1,0"))
                                       (rule "translateJavaCastInt" (formula "3") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "defOfunsign" (formula "1") (term "0"))
                                       (rule "translateJavaAddInt" (formula "1") (term "1,0"))
                                       (rule "translateJavaCastInt" (formula "1") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1"))
                                       (rule "expand_moduloInteger" (formula "6") (term "0,1"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,0,1"))
                                       (rule "expand_divJint" (formula "1") (term "0,1"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,0,0,2,0"))
                                       (rule "expand_addJint" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,1,0"))
                                       (rule "expand_moduloByte" (formula "2") (term "0,0,0"))
                                       (rule "replace_byte_MIN" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "replace_byte_RANGE" (formula "2") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "jmod_axiom" (formula "2") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i,
                                                      Z(6(5(2(#)))))),
                                       Z(6(5(2(#)))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0,2,0"))
                                       (rule "expand_addJint" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,0,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0,0,0,0"))
                                       (rule "expand_moduloByte" (formula "3") (term "2,0"))
                                       (rule "replace_byte_MIN" (formula "3") (term "0,2,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,2,0"))
                                       (rule "replace_byte_RANGE" (formula "3") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "3") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,2,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,2,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "3") (term "0,2,0"))
                                       (rule "expand_moduloByte" (formula "3") (term "0,0,1,0"))
                                       (rule "replace_byte_MIN" (formula "3") (term "0,0,0,1,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,0,0,1,0"))
                                       (rule "replace_byte_RANGE" (formula "3") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "3") (term "1,0,0,1,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0,0,1,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "3") (term "0,0,0,1,0"))
                                       (rule "expand_moduloByte" (formula "3") (term "0,0,0"))
                                       (rule "replace_byte_RANGE" (formula "3") (term "1,1,0,0,0"))
                                       (rule "replace_byte_MIN" (formula "3") (term "0,0,0,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                       (rule "polyMod_pullOut" (formula "3") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,0,1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,0,0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,0,0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0,0,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,0,0,0,0,2,0"))
                                       (rule "expand_moduloByte" (formula "2") (term "0,1,0,1,0"))
                                       (rule "replace_byte_MIN" (formula "2") (term "0,0,1,0,1,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0"))
                                       (rule "replace_byte_RANGE" (formula "2") (term "1,1,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "expand_moduloByte" (formula "6") (term "2,0"))
                                       (rule "replace_byte_MIN" (formula "6") (term "0,2,0"))
                                       (rule "replace_byte_RANGE" (formula "6") (term "1,1,2,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "6") (term "0,0,1,2,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "0,0,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,0,0,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,0,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,0,0,0,1,0,1,0"))
                                       (rule "expand_moduloByte" (formula "6") (term "0,0,0"))
                                       (rule "replace_byte_MIN" (formula "6") (term "0,0,0,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "6") (term "0,0,1,0,0,0"))
                                       (rule "replace_byte_RANGE" (formula "6") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "jmod_axiom" (formula "6") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(f_i, Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(f_i, Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "3") (term "0,1,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,0,1,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,1,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,1,0,1"))
                                       (rule "expand_divJint" (formula "1") (term "0,1,0,1,1"))
                                       (rule "expand_moduloByte" (formula "2") (term "2,0"))
                                       (rule "replace_byte_MIN" (formula "2") (term "0,2,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,2,0"))
                                       (rule "replace_byte_RANGE" (formula "2") (term "1,1,2,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,0,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,0,0,1,0,1,0,1,0,1,0"))
                                       (rule "jmod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                            mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                    jdiv(moduloInt(jdiv(f_i,
                                                        Z(6(5(2(#)))))),
                                         Z(6(5(2(#)))))),
                                Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                       (rule "expand_addJint" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,0,2,0"))
                                       (rule "expand_moduloByte" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "replace_byte_MIN" (formula "1") (term "0,1,0,1,0,1,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,1,0,1,0,1,0"))
                                       (rule "replace_byte_RANGE" (formula "1") (term "1,1,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(divJint(f_i, Z(6(5(2(#))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,1"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,2,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,2,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,2,0"))
                                       (rule "jmod_axiom" (formula "2") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,2,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                               mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                       jdiv(f_i,
                                                            Z(6(5(2(#)))))),
                                                   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                           Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,2,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                       (rule "expand_moduloByte" (formula "6") (term "1,0,1,0,1,0"))
                                       (rule "replace_byte_MIN" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "replace_byte_RANGE" (formula "6") (term "1,1,1,0,1,0,1,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "6") (term "0,0,1,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,0,1,0"))
                                       (rule "jmod_axiom" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(f_i, Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(f_i, Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "3") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "3") (term "0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0"))
                                       (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "3") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "3") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                f_i),
            mul(div(add(Z(8(2(1(#)))), f_i),
                    Z(6(5(2(#))))),
                Z(neglit(6(5(2(#))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "3") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,2,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,2,0"))
                                       (rule "expand_divJint" (formula "1") (term "1,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,0,0,1,0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,1"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,1"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,1"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "expand_moduloInteger" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(moduloInt(jdiv(f_i,
                                                 Z(6(5(2(#)))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "6") (term "1,0"))
                                       (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(Z(0(2(5(3(8(4(7(4(1(2(#))))))))))),
            mod(add(Z(8(2(1(#)))),
                    jdiv(f_i, Z(6(5(2(#)))))),
                Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "6") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,2,0"))
                                       (rule "expand_divJint" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0"))
                                       (rule "expand_moduloInteger" (formula "2") (term "0,1,0,1,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,0,1,0,1,0,1,0,1,0,1,0,1,0"))
                                       (rule "jdiv_axiom" (formula "3") (term "0,1,1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,0,1,0,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "7") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "7") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "7") (term "1,0,1,0,1,1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "7") (term "1,0,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,0,1,1") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,1") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "jmod_axiom" (formula "7") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,2,0"))
                                       (rule "mod_axiom" (formula "7") (term "1,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "7") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     div(f_i, Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "7") (term "1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            div(f_i, Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,1,2,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,0,1,0,0,1,0,1,0") (ifseqformula "3"))
                                       (rule "expand_moduloInteger" (formula "2") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "2") (term "0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0"))
                                       (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(Z(0(2(5(3(8(4(7(4(1(2(#))))))))))),
            mod(add(Z(8(2(1(#)))),
                    jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                      div(f_i,
                                                          Z(6(5(2(#)))))),
                                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                          Z(6(5(2(#)))))),
                                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                         Z(6(5(2(#)))))),
                Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "2") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,1,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,2,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,2,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,2,0"))
                                       (rule "expand_moduloByte" (formula "1") (term "0,0,0"))
                                       (rule "replace_byte_MIN" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,0,0,0"))
                                       (rule "replace_byte_RANGE" (formula "1") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      div(f_i,
                                          Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             div(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                       (rule "expand_divJint" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "expand_moduloByte" (formula "1") (term "2,0"))
                                       (rule "replace_byte_MIN" (formula "1") (term "0,2,0"))
                                       (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,2,0"))
                                       (rule "replace_byte_RANGE" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,2,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      div(f_i,
                                          Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,2,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             div(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,2,0"))
                                       (rule "div_axiom" (formula "4") (term "0,1,2,0") (inst "quotient=quotient_37"))
                                       (rule "equal_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "qeq_literals" (formula "4") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,1,1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "6") (term "1"))
                                       (rule "add_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0,1,2,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm0" (formula "7") (term "2,0"))
                                       (rule "applyEqRigid" (formula "7") (term "0,1,0,1,1,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1,1,0"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "7") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "8") (term "0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "8") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=Z(8(0(6(8(8(3(8(#))))))))"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,1,0,1,0") (inst "polyDivCoeff=Z(neglit(8(0(6(8(8(3(8(#)))))))))"))
                                       (rule "equal_literals" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,1,0,1,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,0,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             div(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0"))
                                       (rule "expand_addJint" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "expand_moduloInteger" (formula "1") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "1") (term "0,1,0"))
                                       (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0"))
                                       (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                       (rule "polyMod_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             div(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#))))),
            mul(div(add(Z(8(2(1(#)))),
                        mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                         mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                 div(f_i,
                                                     Z(6(5(2(#)))))),
                                             Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                     Z(6(5(2(#)))))),
                            Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                    Z(6(5(2(#))))),
                Z(neglit(6(5(2(#))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,1,1,0"))
                                       (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_38"))
                                       (rule "equal_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "qeq_literals" (formula "3") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,1,1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "5") (term "1"))
                                       (rule "add_literals" (formula "5") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,0,1,0,1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "15") (term "1,0,1,2,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0,1,0,1,1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "3"))
                                       (rule "polySimp_addComm0" (formula "11") (term "1"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0,1,1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,0,1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "3"))
                                       (rule "mod_axiom" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,2,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,2,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,2,0"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "mod_axiom" (formula "15") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,0,1,0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,0,1,0,1"))
                                       (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_38)"))
                                       (rule "leq_literals" (formula "9") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                       (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_38)"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                       (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_38") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_38") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "div_axiom" (formula "14") (term "0,1,1,0") (inst "quotient=quotient_39"))
                                       (rule "equal_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "qeq_literals" (formula "14") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                       (rule "applyEqRigid" (formula "17") (term "0,1,1,0") (ifseqformula "14"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                                       (rule "mul_literals" (formula "16") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(add(Z(neglit(7(0(6(8(8(3(8(#))))))))),
        mul(quotient_39,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_38)"))
                                       (rule "leq_literals" (formula "15") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_39") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "mul_literals" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_39,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "18"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                       (rule "mul_literals" (formula "6") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
        mul(quotient_39,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_38)"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(quotient_39,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0"))
                                       (rule "add_zero_right" (formula "13") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_39") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "19"))
                                       (rule "greater_literals" (formula "4") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "24") (term "0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0"))
                                       (rule "inEqSimp_invertInEq1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "inEqSimp_subsumption4" (formula "24") (ifseqformula "18"))
                                       (rule "greater_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "25") (term "1,1"))
                                       (rule "add_literals" (formula "25") (term "1"))
                                       (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "add_literals" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "7") (term "1,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,1"))
                                       (rule "applyEqRigid" (formula "21") (term "0,1,0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "21") (term "1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,1"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "20") (term "1,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,1"))
                                       (rule "applyEqRigid" (formula "18") (term "0,1,0,1") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "18") (term "1,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,1"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                       (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "24"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "div_axiom" (formula "2") (term "0,1,0,1,0,1,0,1,0,0,0,0") (inst "quotient=quotient_40"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "qeq_literals" (formula "2") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                       (rule "add_literals" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,1,0,1,0,1,0,1,2,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,1,0,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,2,0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,1,0,1,0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,1,0,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,0,0,1,1"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,1"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,1,0,1,0,1,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,0,1"))
                                       (rule "jmod_axiom" (formula "24") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_40") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "21") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_40") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "3"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_literals" (formula "4") (term "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,1,0,1,0,1,0,1,2,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,1,0,1,0,1,0,1,2,0"))
                                       (rule "applyEq" (formula "2") (term "1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,1,0,1,0,0,1,0,1,1,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,1,0,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,1,2,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,1,2,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,1,0,1,0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,0,1,1,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,1,0,1,0,1,0,1,0,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "5") (term "0,1,0,1,0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "25") (term "0,0,0,0,1,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,1"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,1,0,0,1,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "applyEqRigid" (formula "25") (term "0,0,0,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "25") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "25") (term "0,1"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0,0,1,0,1,1") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,1,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "div_axiom" (formula "23") (term "0,1,2,0") (inst "quotient=quotient_41"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "26") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "26") (term "0,1,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                                       (rule "mod_axiom" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=Z(8(6(7(2(3(#))))))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "24") (term "0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "ifthenelse_split" (formula "21") (term "0"))
                                       (branch "f_i ≤ -1 + quotient_37 * 256 TRUE"
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "22"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                          (rule "add_literals" (formula "18") (term "0,1"))
                                          (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "22"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                          (rule "add_literals" (formula "21") (term "0,1"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "21"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                          (rule "add_literals" (formula "19") (term "0,1"))
                                          (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_38)"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "14"))
                                          (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "1,0"))
                                          (rule "times_zero_1" (formula "14") (term "0"))
                                          (rule "qeq_literals" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "17"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "20"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                          (rule "equal_literals" (formula "15") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0"))
                                          (rule "polySimp_invertEq" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "9"))
                                          (rule "greater_literals" (formula "14") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "0,0"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "jdiv_axiom" (formula "7") (term "1,0,1,0,1,0,1,2,0"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "8") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,0,0,1,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "5") (term "1,0,1,2,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,0,0,1,1") (ifseqformula "7"))
                                          (rule "polySimp_addComm1" (formula "5") (term "1"))
                                          (rule "applyEqRigid" (formula "5") (term "1,0,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "8") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "5") (term "1,0,1,1") (ifseqformula "7"))
                                          (rule "polySimp_addComm1" (formula "5") (term "1"))
                                          (rule "div_axiom" (formula "23") (term "0,1,1,0") (inst "quotient=quotient_45"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(neglit(0(4(8(5(5(3(8(#))))))))),
    mul(quotient_45,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_45") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "25") (term "0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_45,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                          (rule "leq_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_45") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "25") (term "0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "inEqSimp_subsumption4" (formula "25") (ifseqformula "3"))
                                          (rule "greater_literals" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "mul_literals" (formula "25") (term "0,0"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "3"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "26") (term "1,1"))
                                          (rule "add_literals" (formula "26") (term "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "2") (term "1,1"))
                                          (rule "add_literals" (formula "2") (term "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "3") (term "1,0,1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "4") (term "1,0,1"))
                                          (rule "add_literals" (formula "4") (term "0,1"))
                                          (rule "applyEq" (formula "29") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                          (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_46"))
                                          (rule "equal_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1,1,1"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEqRigid" (formula "20") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "applyEq" (formula "19") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1"))
                                          (rule "mul_literals" (formula "20") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_47"))
                                          (rule "equal_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "qeq_literals" (formula "9") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "11") (term "1"))
                                          (rule "add_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "1,0,1,0,0,1,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,1,2,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "29") (term "0,1,1") (ifseqformula "9"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,1,0,0,1,1") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "1,0,1,0,1") (ifseqformula "9"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,2,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,2,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,2,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
                                          (rule "mod_axiom" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "2,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,2,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,2,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,1,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,1,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1"))
                                          (rule "mod_axiom" (formula "7") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,0,1,0,1"))
                                          (rule "mod_axiom" (formula "7") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "mul_literals" (formula "11") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            quotient_47),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,0,1,1,0"))
                                          (rule "equal_literals" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
                                          (rule "polyMod_pullOut" (formula "7") (term "1,1,0") (inst "polyDivCoeff=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        quotient_47),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,1,0") (inst "polyDivCoeff=Z(8(0(6(8(8(3(8(#))))))))"))
                                          (rule "equal_literals" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "26") (term "0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_47") (inst "elimGcdRightDiv=Z(0(#))"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "15"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_47") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_47)"))
                                          (rule "leq_literals" (formula "5") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
                                          (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_47)"))
                                          (rule "leq_literals" (formula "12") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "ifthenelse_split" (formula "33") (term "0"))
                                          (branch "quotient_38 ≤ -1 + quotient_41 * 256 TRUE"
                                             (rule "polySimp_homoEq" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "elimGcdEq" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_47)"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "33"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                             (rule "add_literals" (formula "6") (term "0,1"))
                                             (rule "add_zero_left" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "6"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "6"))
                                             (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "12"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "11"))
                                             (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0"))
                                             (rule "add_literals" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "closeFalse" (formula "12"))
                                          )
                                          (branch "quotient_38 ≤ -1 + quotient_41 * 256 FALSE"
                                             (rule "polySimp_homoEq" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "elimGcdEq" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=quotient_47"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "33"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0"))
                                             (rule "leq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "6"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                             (rule "add_literals" (formula "6") (term "0,1"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0"))
                                             (rule "add_literals" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "closeFalse" (formula "12"))
                                          )
                                       )
                                       (branch "f_i ≤ -1 + quotient_37 * 256 FALSE"
                                          (rule "polySimp_homoEq" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                          (rule "applyEqRigid" (formula "20") (term "1,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "22"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "22"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "qeq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_37") (inst "elimGcdRightDiv=quotient_38"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,0"))
                                          (rule "times_zero_1" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,0"))
                                          (rule "times_zero_1" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "18"))
                                          (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "14"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0"))
                                          (rule "qeq_literals" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "17"))
                                          (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "20") (term "0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "19"))
                                          (rule "greater_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "jdiv_axiom" (formula "7") (term "1,0,1,0,1,0,1,2,0"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "applyEqRigid" (formula "5") (term "1,0,1,2,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,0,0,1,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "8") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "8") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,0,1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,0,0,1,1") (ifseqformula "7"))
                                          (rule "polySimp_addComm1" (formula "5") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,1") (ifseqformula "7"))
                                          (rule "polySimp_addComm1" (formula "5") (term "1"))
                                          (rule "div_axiom" (formula "23") (term "0,1,1,0") (inst "quotient=quotient_42"))
                                          (rule "equal_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "applyEqRigid" (formula "26") (term "0,1,1,0") (ifseqformula "1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_42") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(neglit(0(4(8(5(5(3(8(#))))))))),
    mul(quotient_42,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_42") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "26") (term "0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_42,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "2") (term "1,1"))
                                          (rule "add_literals" (formula "2") (term "1"))
                                          (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "25") (term "1,1"))
                                          (rule "add_literals" (formula "25") (term "1"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "4") (term "1,0,1"))
                                          (rule "add_literals" (formula "4") (term "0,1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "3") (term "1,0,1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                          (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "23"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "div_axiom" (formula "18") (term "0") (inst "quotient=quotient_43"))
                                          (rule "equal_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1,1,1"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEqRigid" (formula "20") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "applyEq" (formula "19") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1"))
                                          (rule "mul_literals" (formula "20") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_44"))
                                          (rule "equal_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "qeq_literals" (formula "9") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "11") (term "1"))
                                          (rule "add_literals" (formula "11") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,1,2,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "1,0,1,0,0,1,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,1,0,0,1,1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "7") (term "1,0,0,1,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "29") (term "0,1,1") (ifseqformula "9"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1"))
                                          (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "7") (term "1,0,1,0,1") (ifseqformula "9"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,2,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,2,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,2,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,1,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,1,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,2,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "2,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,2,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,2,0"))
                                          (rule "mod_axiom" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
                                          (rule "mod_axiom" (formula "7") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,0,1,0,1"))
                                          (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1"))
                                          (rule "mod_axiom" (formula "7") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1"))
                                          (rule "mul_literals" (formula "11") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            quotient_44),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                          (rule "equal_literals" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
                                          (rule "polyMod_pullOut" (formula "7") (term "1,1,0") (inst "polyDivCoeff=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
        quotient_44),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,1,0") (inst "polyDivCoeff=Z(8(0(6(8(8(3(8(#))))))))"))
                                          (rule "equal_literals" (formula "7") (term "0,0,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,1,1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_44)"))
                                          (rule "leq_literals" (formula "5") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "12"))
                                          (rule "mul_literals" (formula "27") (term "0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "mul_literals" (formula "27") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_44") (inst "elimGcdRightDiv=Z(0(#))"))
                                          (rule "leq_literals" (formula "27") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_44") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
                                          (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_44)"))
                                          (rule "leq_literals" (formula "12") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "ifthenelse_split" (formula "33") (term "0"))
                                          (branch "quotient_38 ≤ -1 + quotient_41 * 256 TRUE"
                                             (rule "polySimp_homoEq" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "elimGcdEq" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_44)"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "33"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                             (rule "add_literals" (formula "6") (term "0,1"))
                                             (rule "add_zero_left" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "6"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "6"))
                                             (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0"))
                                             (rule "add_literals" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "closeFalse" (formula "12"))
                                          )
                                          (branch "quotient_38 ≤ -1 + quotient_41 * 256 FALSE"
                                             (rule "polySimp_homoEq" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "elimGcdEq" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_41") (inst "elimGcdRightDiv=quotient_44"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "0,0"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "33"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0"))
                                             (rule "leq_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "6"))
                                             (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                             (rule "add_literals" (formula "7") (term "0,1"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "1"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0"))
                                             (rule "add_literals" (formula "11") (term "0"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "closeFalse" (formula "11"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: unsign(moduloByte(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))) = javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256) FALSE"
                                    (rule "hide_right" (formula "5") (userinteraction))
                                    (rule "expand_inInt" (formula "3") (term "1"))
                                    (rule "replace_int_MAX" (formula "3") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "3") (term "0,1,1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "translateJavaMod" (formula "6") (term "0,0,0"))
                                    (rule "translateJavaMod" (formula "6") (term "1"))
                                    (rule "translateJavaDivInt" (formula "6") (term "0,0,0,0"))
                                    (rule "translateJavaDivInt" (formula "6") (term "0,1"))
                                    (rule "translateJavaDivInt" (formula "6") (term "0,0,0,0,0"))
                                    (rule "translateJavaDivInt" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "5"))
                                    (rule "jmod_axiom" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "jmod_axiom" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "jmod_axiom" (formula "2") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "jmod_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "defOfunsign" (formula "1") (term "0"))
                                    (rule "translateJavaAddInt" (formula "1") (term "1,0"))
                                    (rule "translateJavaCastInt" (formula "1") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "defOfunsign" (formula "2") (term "0"))
                                    (rule "translateJavaAddInt" (formula "2") (term "1,0"))
                                    (rule "translateJavaCastInt" (formula "2") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "defOfunsign" (formula "5") (term "0"))
                                    (rule "translateJavaAddInt" (formula "5") (term "1,0"))
                                    (rule "translateJavaCastInt" (formula "5") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0,1"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0,1"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0,1"))
                                    (rule "expand_divJint" (formula "5") (term "0,1"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,1,1"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,0,0,2,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,0,0,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,0,0,2,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,0,0,2,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0"))
                                    (rule "expand_moduloByte" (formula "1") (term "0,0,0"))
                                    (rule "replace_byte_MIN" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,0,0,0"))
                                    (rule "replace_byte_RANGE" (formula "1") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "jmod_axiom" (formula "1") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i,
                                                      Z(6(5(2(#)))))),
                                       Z(6(5(2(#)))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "expand_moduloByte" (formula "2") (term "2,0"))
                                    (rule "replace_byte_MIN" (formula "2") (term "0,2,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,2,0"))
                                    (rule "replace_byte_RANGE" (formula "2") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,2,0"))
                                    (rule "polyMod_pullOut" (formula "2") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,2,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,2,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,2,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,2,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,2,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,2,0"))
                                    (rule "expand_addJint" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,1,0"))
                                    (rule "expand_moduloByte" (formula "2") (term "0,0,0"))
                                    (rule "replace_byte_RANGE" (formula "2") (term "1,1,0,0,0"))
                                    (rule "replace_byte_MIN" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                    (rule "polyMod_pullOut" (formula "2") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                    (rule "expand_moduloByte" (formula "5") (term "2,0"))
                                    (rule "replace_byte_MIN" (formula "5") (term "0,2,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "5") (term "0,0,1,2,0"))
                                    (rule "replace_byte_RANGE" (formula "5") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,2,0"))
                                    (rule "polyMod_pullOut" (formula "5") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(divJint(divJint(f_i, Z(6(5(2(#))))),
                 Z(6(5(2(#))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,2,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,2,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1,2,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1,2,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,2,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,2,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,2,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,0,0,2,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,0,2,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,0,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,0,2,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,0,1"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "expand_moduloByte" (formula "1") (term "2,0"))
                                    (rule "replace_byte_MIN" (formula "1") (term "0,2,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,2,0"))
                                    (rule "replace_byte_RANGE" (formula "1") (term "1,1,2,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,0,0,1,0,0,0,0"))
                                    (rule "expand_moduloByte" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "replace_byte_RANGE" (formula "2") (term "1,1,1,0,1,0,1,0"))
                                    (rule "replace_byte_MIN" (formula "2") (term "0,1,0,1,0,1,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "2") (term "0,0,1,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0,1,0"))
                                    (rule "polyMod_pullOut" (formula "2") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0,0,0,2,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0,0,0,2,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0,0,0,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0,0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,0,0,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,0,0,0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0,0,0,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,0,0,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,1,0,0,0,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,2,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,2,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,2,0"))
                                    (rule "jmod_axiom" (formula "1") (term "1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,2,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                               mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                       jdiv(f_i,
                                                            Z(6(5(2(#)))))),
                                                   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                           Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,2,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,2,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,2,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,2,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,2,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,2,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,2,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,2,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1,0,1,0,0,1,0,1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "2") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "2") (term "0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "2") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "2") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                f_i),
            mul(div(add(Z(8(2(1(#)))), f_i),
                    Z(6(5(2(#))))),
                Z(neglit(6(5(2(#))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "2") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "1,0,0,1,2,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,2,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,0,0,0,0,0,1,0"))
                                    (rule "expand_divJint" (formula "5") (term "1,0,0,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0,0,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0,1,0,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0,1,0,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0,1,0,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0,1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "expand_moduloByte" (formula "1") (term "1,0,1,0,1,0"))
                                    (rule "replace_byte_MIN" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,1,0,1,0,1,0"))
                                    (rule "replace_byte_RANGE" (formula "1") (term "1,1,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,1,0"))
                                    (rule "jmod_axiom" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,1,0,1,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                               mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                       jdiv(f_i,
                                                            Z(6(5(2(#)))))),
                                                   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                           Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,0,1,0,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,1,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "1,0,0,1,2,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1,0,0,1,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,0,1,2,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,2,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,2,0"))
                                    (rule "polyDiv_pullOut" (formula "5") (term "0,1,2,0") (inst "polyDivCoeff=Z(neglit(8(0(6(8(8(3(8(#)))))))))"))
                                    (rule "equal_literals" (formula "5") (term "0,0,1,2,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,2,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0,1,2,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,2,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,2,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1,1,2,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,2,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "2,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,2,0"))
                                    (rule "expand_addJint" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                    (rule "expand_moduloByte" (formula "5") (term "0,0,1,0"))
                                    (rule "replace_byte_MIN" (formula "5") (term "0,0,0,1,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "5") (term "0,0,1,0,0,1,0"))
                                    (rule "replace_byte_RANGE" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "polyMod_pullOut" (formula "5") (term "1,0,0,1,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i,
                                       Z(6(5(2(#)))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0,0,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_divJint" (formula "5") (term "0,1,0,1,0,1"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0,2,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0,2,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0,2,0"))
                                    (rule "expand_moduloInteger" (formula "1") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "1") (term "0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(Z(0(2(5(3(8(4(7(4(1(2(#))))))))))),
            mod(add(Z(8(2(1(#)))),
                    jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                      jdiv(f_i,
                                                           Z(6(5(2(#)))))),
                                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                          Z(6(5(2(#)))))),
                                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                         Z(6(5(2(#)))))),
                Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1,0,1,0,0,1,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,1,0,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0,0,1,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polyMod_pullOut" (formula "5") (term "1,0,0,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0,1,0,1"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0,1,0,1"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0,1,0,1"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "expand_divJint" (formula "5") (term "1,0,2,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "0,1,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0,1,0"))
                                    (rule "expand_moduloByte" (formula "5") (term "0,0,0"))
                                    (rule "replace_byte_MIN" (formula "5") (term "0,0,0,0"))
                                    (rule "replace_byte_HALFRANGE" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "replace_byte_RANGE" (formula "5") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "mod_axiom" (formula "5") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                    (rule "polyMod_pullOut" (formula "5") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(moduloInt(jdiv(f_i,
                                         Z(6(5(2(#)))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "polyMod_pullOut" (formula "5") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(f_i, Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "expand_moduloInteger" (formula "5") (term "1,0,2,0"))
                                    (rule "replace_int_MIN" (formula "5") (term "0,1,0,2,0"))
                                    (rule "replace_int_HALFRANGE" (formula "5") (term "0,0,1,1,0,2,0"))
                                    (rule "replace_int_RANGE" (formula "5") (term "1,1,1,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,2,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,2,0"))
                                    (rule "expand_addJint" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "jdiv_axiom" (formula "2") (term "0,1,1"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,0,1,0,1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                                    (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,1,0,0,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm1" (formula "6") (term "1"))
                                    (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                                    (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm1" (formula "6") (term "1"))
                                    (rule "expand_moduloInteger" (formula "6") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0"))
                                    (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,1,0"))
                                    (rule "replace_int_RANGE" (formula "6") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "6") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "6") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(Z(0(2(5(3(8(4(7(4(1(2(#))))))))))),
            mod(add(Z(8(2(1(#)))),
                    jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                     div(f_i,
                                         Z(6(5(2(#)))))),
                                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                         Z(6(5(2(#)))))),
                Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,1,1,0"))
                                    (rule "polyMod_pullOut" (formula "6") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,1,0"))
                                    (rule "div_axiom" (formula "3") (term "0,1,2,0") (inst "quotient=quotient_21"))
                                    (rule "equal_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "qeq_literals" (formula "3") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                    (rule "add_literals" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "6") (term "0,1,0,1,1,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,1,0"))
                                    (rule "applyEq" (formula "6") (term "0,1,2,0") (ifseqformula "3"))
                                    (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                                    (rule "mod_axiom" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "9"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=Z(8(0(6(8(8(3(8(#))))))))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_22"))
                                    (rule "equal_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "qeq_literals" (formula "2") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,1,1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "4") (term "1"))
                                    (rule "add_literals" (formula "4") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0,0,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0,1,0,0,1,1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,1,0,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,1,0,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0,0,0,2,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0,0,0,2,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0,0,0,2,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0,0,1,0,1"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,2,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                                    (rule "mod_axiom" (formula "14") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "14") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_22)"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_22)"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "16"))
                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "div_axiom" (formula "13") (term "0,1,1,0") (inst "quotient=quotient_23"))
                                    (rule "equal_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "qeq_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,1,1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                    (rule "add_literals" (formula "15") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "applyEqRigid" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                                    (rule "polySimp_addComm1" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                    (rule "mul_literals" (formula "14") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                    (rule "mul_literals" (formula "15") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(quotient_23,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                    (rule "leq_literals" (formula "14") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(add(Z(neglit(7(0(6(8(8(3(8(#))))))))),
        mul(quotient_23,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_22)"))
                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "17"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                    (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
        mul(quotient_23,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_22)"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_23,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "polySimp_addLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_23") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "leq_literals" (formula "17") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "19"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_23") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_subsumption4" (formula "22") (ifseqformula "18"))
                                    (rule "greater_literals" (formula "22") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "25") (term "1,1"))
                                    (rule "add_literals" (formula "25") (term "1"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "13"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "19") (term "1,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "18") (term "1,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,1"))
                                    (rule "applyEqRigid" (formula "20") (term "0,1,0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "20") (term "1,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,1"))
                                    (rule "applyEqRigid" (formula "6") (term "0,1,0,1") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1"))
                                    (rule "add_literals" (formula "6") (term "0,1"))
                                    (rule "applyEqRigid" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "div_axiom" (formula "20") (term "0,1,0,1,0,1,0,1,1,0") (inst "quotient=quotient_24"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,1,0,1,0,1,0,1,2,0"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,1,0,1,0,0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,1,0,0,1,2,0"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,1,0,1,0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,1,0,1,0,1,0,1,0,1"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1,0,1,0,0,1,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,1,0,0,1,1"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1,0,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "23") (term "0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_24") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_24") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0,1,0,1,0,1,0,1,2,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,1,0,1,0,1,0,1,2,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,1,0,1,0,0,1,2,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1,0,0,1,2,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,1,0,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,1,0,1,0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "24") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,1,0,1,0,1,0,1,0,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "4") (term "0,1,0,1,0,1,0,1,0,1"))
                                    (rule "applyEqRigid" (formula "24") (term "0,0,0,1,0,1,0,0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "1"))
                                    (rule "applyEqRigid" (formula "24") (term "0,0,0,1,0,1,2,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,1,2,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                                    (rule "applyEqRigid" (formula "24") (term "0,0,0,1,0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "24") (term "0,0,1,0,1,1"))
                                    (rule "add_zero_left" (formula "24") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "ifthenelse_split" (formula "16") (term "0"))
                                    (branch "f_i ≤ -1 + quotient_21 * 256 TRUE"
                                       (rule "polySimp_homoEq" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                       (rule "add_literals" (formula "14") (term "0,1"))
                                       (rule "applyEqRigid" (formula "16") (term "1,1") (ifseqformula "17"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                       (rule "add_literals" (formula "16") (term "0,1"))
                                       (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "16"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                       (rule "add_literals" (formula "13") (term "0,1"))
                                       (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_22)"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_literals" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                       (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "9"))
                                       (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "1,0"))
                                       (rule "times_zero_1" (formula "9") (term "0"))
                                       (rule "qeq_literals" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "12"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                       (rule "equal_literals" (formula "10") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0"))
                                       (rule "polySimp_invertEq" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "9") (ifseqformula "4"))
                                       (rule "greater_literals" (formula "9") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "jdiv_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "17") (term "2,0"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "17") (term "2,0"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "div_axiom" (formula "11") (term "0") (inst "quotient=quotient_31"))
                                       (rule "equal_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "qeq_literals" (formula "11") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,1,1"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "11"))
                                       (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "13") (term "0,1,0,0,0") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_32"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "qeq_literals" (formula "2") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,0,1,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "21") (term "1,0,0,2,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,1") (ifseqformula "2"))
                                       (rule "mod_axiom" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,2,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,2,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,0,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,2,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,1"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,1"))
                                       (rule "mod_axiom" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "2,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "21") (term "0,1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            quotient_32),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "equal_literals" (formula "21") (term "0,0,1,2,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,2,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "2,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,2,0"))
                                       (rule "add_zero_right" (formula "21") (term "2,0"))
                                       (rule "polyDiv_pullOut" (formula "21") (term "0,1,2,0") (inst "polyDivCoeff=Z(8(0(6(8(8(3(8(#))))))))"))
                                       (rule "equal_literals" (formula "21") (term "0,0,1,2,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,1,1,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,1,1,2,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,2,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,2,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_32") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_32") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "div_axiom" (formula "7") (term "0,1,0,1,0,1,0,1,1,0") (inst "quotient=quotient_33"))
                                       (rule "equal_literals" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "qeq_literals" (formula "7") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,1,1"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                       (rule "add_literals" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,2,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,2,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0,1,0,1,1,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,0,0,1,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,1,1"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,0,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_33") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_33") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "8") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "8"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "8") (term "1,1"))
                                       (rule "add_literals" (formula "8") (term "1"))
                                       (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "22"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "9") (term "1,1"))
                                       (rule "add_literals" (formula "9") (term "1"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "22"))
                                       (rule "applyEqRigid" (formula "10") (term "0,0,0,1,0,1,2,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,2,0"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "27") (term "0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,1"))
                                       (rule "applyEqRigid" (formula "27") (term "0,0,0,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "27") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "27") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "div_axiom" (formula "25") (term "0,0,0,0") (inst "quotient=quotient_34"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "28") (term "0,1,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                                       (rule "applyEqRigid" (formula "28") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0"))
                                       (rule "applyEqRigid" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "28") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=Z(8(2(1(#))))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "25") (term "0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "jdiv_axiom" (formula "12") (term "1,0,1,2,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,1,2,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "13") (term "1,0,1,0,1,1,0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,0,0,0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "12"))
                                       (rule "div_axiom" (formula "31") (term "0,1,1,0") (inst "quotient=quotient_35"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_35") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "31") (term "0,0"))
                                       (rule "add_zero_left" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_35,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "31") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_35") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=add(Z(neglit(0(8(4(8(8(3(8(#))))))))),
    mul(quotient_35,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "33") (term "0,1,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "33") (term "1,1"))
                                       (rule "add_literals" (formula "33") (term "1"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "2") (term "1,1"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "4") (term "1,0,1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "31"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_36"))
                                       (rule "equal_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "qeq_literals" (formula "14") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1"))
                                       (rule "add_literals" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "applyEq" (formula "18") (term "1,0,1,2,0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "18") (term "1,0,1,0,1,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "36") (term "0,1,1") (ifseqformula "14"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1"))
                                       (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "18") (term "1,0,1,0,1") (ifseqformula "14"))
                                       (rule "mod_axiom" (formula "18") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,2,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,2,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_36)"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_36") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_36)"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "10"))
                                       (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_36") (inst "elimGcdRightDiv=Z(7(2(1(#))))"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "34") (term "0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                       (rule "mul_literals" (formula "34") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "36"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "quotient_32 ≤ -1 + quotient_34 * 256 TRUE"
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1"))
                                          (rule "mul_literals" (formula "41") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "elimGcdEq" (formula "40") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_36)"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                          (rule "leq_literals" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "40"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                          (rule "add_literals" (formula "6") (term "0,1"))
                                          (rule "add_zero_left" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "6"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "16"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "16"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "15"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "quotient_32 ≤ -1 + quotient_34 * 256 FALSE"
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "40"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "elimGcdEq" (formula "40") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_34") (inst "elimGcdRightDiv=quotient_36"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                          (rule "leq_literals" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "40"))
                                          (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "6"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "15"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                          (rule "add_literals" (formula "6") (term "0,1"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "15"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1") (ifseqformula "15"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "15"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "15"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "31"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "f_i ≤ -1 + quotient_21 * 256 FALSE"
                                       (rule "polySimp_homoEq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "22"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                       (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "17"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "17"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "qeq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_21") (inst "elimGcdRightDiv=quotient_22"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "qeq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0"))
                                       (rule "add_literals" (formula "10") (term "0"))
                                       (rule "qeq_literals" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "11") (term "0,1,0,0,0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "12"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "jdiv_axiom" (formula "2") (term "1,0,1,0,1,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "17") (term "2,0"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "17") (term "2,0"))
                                       (rule "applyEqRigid" (formula "17") (term "1,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "div_axiom" (formula "11") (term "0") (inst "quotient=quotient_25"))
                                       (rule "equal_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "qeq_literals" (formula "11") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,1,1"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                       (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "14"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "qeq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_26"))
                                       (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "6") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "21") (term "1,0,1,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "21") (term "1,0,0,2,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,0,1") (ifseqformula "2"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,2,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,2,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,2,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,0,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,1"))
                                       (rule "mod_axiom" (formula "6") (term "1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,1"))
                                       (rule "mod_axiom" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "2,0"))
                                       (rule "mod_axiom" (formula "21") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "21") (term "0,1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            quotient_26),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                       (rule "equal_literals" (formula "21") (term "0,0,1,2,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,2,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "21") (term "2,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,2,0"))
                                       (rule "add_zero_right" (formula "21") (term "2,0"))
                                       (rule "polyDiv_pullOut" (formula "21") (term "0,1,2,0") (inst "polyDivCoeff=Z(8(0(6(8(8(3(8(#))))))))"))
                                       (rule "equal_literals" (formula "21") (term "0,0,1,2,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,2,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,1,1,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,1,1,2,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,2,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "2,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,2,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_26") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_26") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "div_axiom" (formula "7") (term "0,1,0,1,0,1,2,0") (inst "quotient=quotient_27"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "equal_literals" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,1,1"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                       (rule "add_literals" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0,1,2,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,2,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0,1,0,1,1,0") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,0,0,1,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,1,1"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,0,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_27") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_27") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "8") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "9") (term "1,1"))
                                       (rule "add_literals" (formula "9") (term "1"))
                                       (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "8") (term "1,1"))
                                       (rule "add_literals" (formula "8") (term "1"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "22"))
                                       (rule "applyEqRigid" (formula "10") (term "0,0,0,1,0,0,0,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,0,1,1,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,0,0,1,0,1,2,0") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,2,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,2,0"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,0,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "10") (term "0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,1,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "27") (term "0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,1"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "27") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "27") (term "0,1"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "div_axiom" (formula "25") (term "0,1,0,1,1,0") (inst "quotient=quotient_28"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                       (rule "applyEq" (formula "28") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "28") (term "0,1,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                                       (rule "mod_axiom" (formula "28") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "24") (term "0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=Z(8(2(1(#))))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "jdiv_axiom" (formula "12") (term "1,0,0,0,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "applyEq" (formula "13") (term "1,0,1,2,0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,0,0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "13") (term "1,0,1,0,1,1,0") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "12"))
                                       (rule "div_axiom" (formula "31") (term "0,1,1,0") (inst "quotient=quotient_29"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_29") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "31") (term "0,0"))
                                       (rule "add_zero_left" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_29,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "31") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_29") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=add(Z(neglit(0(8(4(8(8(3(8(#))))))))),
    mul(quotient_29,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "2"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "33") (term "1,1"))
                                       (rule "add_literals" (formula "33") (term "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "4") (term "1,0,1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "applyEqRigid" (formula "37") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "28"))
                                       (rule "leq_literals" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_30"))
                                       (rule "equal_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "qeq_literals" (formula "14") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "16") (term "1"))
                                       (rule "add_literals" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "applyEq" (formula "18") (term "1,0,1,2,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "18") (term "1,0,1,0,1,1,0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "18") (term "1,0,0,0,0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "18") (term "1,0,1,0,1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "14"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                       (rule "mod_axiom" (formula "18") (term "1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "2,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,2,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,2,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,1,0"))
                                       (rule "mod_axiom" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                       (rule "mod_axiom" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_30)"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_30") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_30") (inst "elimGcdRightDiv=Z(7(2(1(#))))"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
                                       (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_30)"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "34") (term "0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                       (rule "mul_literals" (formula "34") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "36"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "quotient_26 ≤ -1 + quotient_28 * 256 TRUE"
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1"))
                                          (rule "mul_literals" (formula "41") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "elimGcdEq" (formula "40") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_30)"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                          (rule "leq_literals" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,1"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "40"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                          (rule "add_literals" (formula "6") (term "0,1"))
                                          (rule "add_zero_left" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "6"))
                                          (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "17"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1,1") (ifseqformula "16"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "16"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "quotient_26 ≤ -1 + quotient_28 * 256 FALSE"
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "40"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "elimGcdEq" (formula "40") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_28") (inst "elimGcdRightDiv=quotient_30"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                          (rule "leq_literals" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "40"))
                                          (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "6"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                          (rule "add_literals" (formula "7") (term "0,1"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "16"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0"))
                                          (rule "add_literals" (formula "16") (term "0"))
                                          (rule "leq_literals" (formula "16"))
                                          (rule "closeFalse" (formula "16"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: unsign(moduloByte(jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i, 256)), 256)), 256)), 256))) = jmod(moduloInt(jdiv(moduloInt(jdiv(moduloInt(jdiv(f_i, 256)), 256)), 256)), 256) FALSE"
                                 (rule "hide_right" (formula "4") (userinteraction))
                                 (rule "expand_inInt" (formula "2") (term "1"))
                                 (rule "replace_int_MIN" (formula "2") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "2") (term "1,0,1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "jmod_axiom" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "jmod_axiom" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "defOfunsign" (formula "4") (term "0"))
                                 (rule "translateJavaAddInt" (formula "4") (term "1,0"))
                                 (rule "translateJavaCastInt" (formula "4") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0"))
                                 (rule "defOfunsign" (formula "1") (term "0"))
                                 (rule "translateJavaAddInt" (formula "1") (term "1,0"))
                                 (rule "translateJavaCastInt" (formula "1") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,0,0,0,0,1"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,0,0,0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0,0,0,1"))
                                 (rule "expand_moduloByte" (formula "4") (term "2,0"))
                                 (rule "replace_byte_MIN" (formula "4") (term "0,2,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "4") (term "0,0,1,2,0"))
                                 (rule "replace_byte_RANGE" (formula "4") (term "1,1,2,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,0,0,0,0,0,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,0,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,0,0,0,0,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "expand_moduloByte" (formula "1") (term "2,0"))
                                 (rule "replace_byte_MIN" (formula "1") (term "0,2,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,2,0"))
                                 (rule "replace_byte_RANGE" (formula "1") (term "1,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,2,0"))
                                 (rule "polyMod_pullOut" (formula "1") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,2,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,2,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,2,0"))
                                 (rule "mod_axiom" (formula "1") (term "1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,2,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,2,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                 (rule "expand_moduloByte" (formula "1") (term "0,0,1,0"))
                                 (rule "replace_byte_MIN" (formula "1") (term "0,0,0,1,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,0,0,1,0"))
                                 (rule "replace_byte_RANGE" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polyMod_pullOut" (formula "1") (term "1,0,0,1,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                 (rule "expand_moduloByte" (formula "1") (term "0,0,0"))
                                 (rule "replace_byte_MIN" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "replace_byte_RANGE" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "polyMod_pullOut" (formula "1") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,1"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,0,0,1,0,1,2,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,0,0,1,0,1,2,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0,1,0,1,2,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0,1,0,1,2,0"))
                                 (rule "jmod_axiom" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,2,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                            mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                    jdiv(moduloInt(jdiv(f_i,
                                                        Z(6(5(2(#)))))),
                                         Z(6(5(2(#)))))),
                                Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1,2,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1,2,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,1,2,0"))
                                 (rule "expand_addJint" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "expand_addJint" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,1,0,1,0,1"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,1,0,1"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,1,0,1"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,1,0,1"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,1,0,1,0,0,1,0,1,2,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,1,0,0,1,0,1,2,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,1,0,0,1,0,1,2,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,1,0,0,1,0,1,2,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "expand_moduloByte" (formula "4") (term "0,0,0"))
                                 (rule "replace_byte_MIN" (formula "4") (term "0,0,0,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "4") (term "0,0,1,0,0,0"))
                                 (rule "replace_byte_RANGE" (formula "4") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "jmod_axiom" (formula "4") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(moduloInt(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                            mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                    jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                     jdiv(f_i,
                                                          Z(6(5(2(#)))))),
                                                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                         Z(6(5(2(#)))))),
                                Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                        Z(6(5(2(#)))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "1") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "1") (term "0,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "1,0,1,2,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1,0,1,2,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,1,2,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,2,0"))
                                 (rule "mod_axiom" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,2,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,2,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,2,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,2,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1,2,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1,2,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,1,2,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,0,0,1,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "1,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1,0,0,0,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,0,0,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                 (rule "mod_axiom" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "0,0,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "expand_moduloInteger" (formula "1") (term "1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "1") (term "0,1,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "1") (term "1,1,1,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,1,0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                f_i),
            mul(div(add(Z(8(2(1(#)))), f_i),
                    Z(6(5(2(#))))),
                Z(neglit(6(5(2(#))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "0,1,0,1,0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,0,1,0,1,0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,1,0,0,0,1,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,0,1,0,1,0,0,0,1,0,1,1,0"))
                                 (rule "expand_moduloByte" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "replace_byte_MIN" (formula "4") (term "0,0,1,0,1,1,0"))
                                 (rule "replace_byte_HALFRANGE" (formula "4") (term "0,0,1,0,1,0,1,1,0"))
                                 (rule "replace_byte_RANGE" (formula "4") (term "1,1,0,1,0,1,1,0"))
                                 (rule "expand_moduloInteger" (formula "4") (term "1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "4") (term "0,0,1,1,0,1,1,0"))
                                 (rule "replace_int_RANGE" (formula "4") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
                                 (rule "jmod_axiom" (formula "4") (term "1,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,0,1,0,1,1,0"))
                                 (rule "mod_axiom" (formula "4") (term "1,0,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1,0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                 (rule "mod_axiom" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(Z(0(2(5(3(8(4(7(4(1(2(#))))))))))),
            mod(add(add(add(Z(8(2(1(#)))),
                            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                              jdiv(f_i,
                                                                   Z(6(5(2(#)))))),
                                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                                  Z(6(5(2(#)))))),
                                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                 Z(6(5(2(#)))))),
                        mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                    jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                                      jdiv(f_i,
                                                                           Z(6(5(2(#)))))),
                                                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                                          Z(6(5(2(#)))))),
                                                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                         Z(6(5(2(#)))))),
                                Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
                            Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))),
                    mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                 mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                         jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                                  mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                          jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                                                   mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                                           jdiv(f_i,
                                                                                Z(6(5(2(#)))))),
                                                                       Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                                               Z(6(5(2(#)))))),
                                                      Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                              Z(6(5(2(#)))))),
                                     Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                             Z(6(5(2(#))))),
                        Z(neglit(6(5(2(#))))))),
                Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,0,1,1,0") (inst "polyDivCoeff=mul(jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
             mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                     jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                              mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                      jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                               mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                                       jdiv(f_i,
                                                            Z(6(5(2(#)))))),
                                                   Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                           Z(6(5(2(#)))))),
                                  Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                          Z(6(5(2(#)))))),
                 Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         Z(6(5(2(#))))),
    Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1,0,1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "polyMod_pullOut" (formula "4") (term "1,0,1,1,0") (inst "polyDivCoeff=mul(div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                     mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                             jdiv(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
                                      mod(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                                              jdiv(f_i,
                                                   Z(6(5(2(#)))))),
                                          Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                                  Z(6(5(2(#)))))),
                         Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
                 Z(6(5(2(#)))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1,0,1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "jdiv_axiom" (formula "1") (term "0,1,1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEqRigid" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "5") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "div_axiom" (formula "2") (term "0,1,2,0") (inst "quotient=quotient_3"))
                                 (rule "equal_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "qeq_literals" (formula "2") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                 (rule "add_literals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEqRigid" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                                 (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                 (rule "applyEqRigid" (formula "5") (term "0,1,0,1,1,0") (ifseqformula "2"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=Z(8(0(6(8(8(3(8(#))))))))"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_4"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1"))
                                 (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,0,1,2,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "mod_axiom" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_4)"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "12") (term "0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "12") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_4)"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "9"))
                                 (rule "mul_literals" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "div_axiom" (formula "12") (term "0,1,1,0") (inst "quotient=quotient_5"))
                                 (rule "equal_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "qeq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,1,1"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                 (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "12"))
                                 (rule "polySimp_addComm1" (formula "15") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "10") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(add(Z(neglit(7(0(6(8(8(3(8(#))))))))),
        mul(quotient_5,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_4)"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(quotient_5,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                 (rule "leq_literals" (formula "15") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                                 (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                 (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
        mul(quotient_5,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_4)"))
                                 (rule "leq_literals" (formula "4") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "22") (term "0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_5,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "13"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0"))
                                 (rule "polySimp_addLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "17"))
                                 (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "23") (term "1,1"))
                                 (rule "add_literals" (formula "23") (term "1"))
                                 (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "4") (term "1,0,1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "applyEqRigid" (formula "15") (term "0,1,0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "15") (term "1,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,1"))
                                 (rule "applyEqRigid" (formula "17") (term "0,1,0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "17") (term "1,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,1"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "18") (term "1,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,1"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "div_axiom" (formula "19") (term "0,1,0,1,0,1,0,1,0,0,0,0") (inst "quotient=quotient_6"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "applyEqRigid" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,1,0,1,2,0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,1,0,1,0,1,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "20"))
                                 (rule "mul_literals" (formula "4") (term "1,1"))
                                 (rule "add_literals" (formula "4") (term "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "20"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_literals" (formula "3") (term "1"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,1,0,1,0,1,0,1,0,1,1,0"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,1,0,1,0,1,2,0") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,1,0,1,0,1,2,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,1,0,1,0,1,0,1,2,0"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,1,0,1,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,1,0,1,0,1,0,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,1,0,1,0,1,0,1"))
                                 (rule "add_zero_left" (formula "23") (term "0,1,0,1,0,1,0,1,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "ifthenelse_split" (formula "15") (term "0"))
                                 (branch "f_i ≤ -1 + quotient_3 * 256 TRUE"
                                    (rule "polySimp_homoEq" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                    (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                    (rule "add_literals" (formula "15") (term "0,1"))
                                    (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                    (rule "add_literals" (formula "13") (term "0,1"))
                                    (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                    (rule "add_literals" (formula "12") (term "0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_4)"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0"))
                                    (rule "qeq_literals" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "11"))
                                    (rule "applyEqRigid" (formula "10") (term "0,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "polySimp_invertEq" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "inEqSimp_subsumption4" (formula "8") (ifseqformula "3"))
                                    (rule "greater_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "0,0"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "jdiv_axiom" (formula "15") (term "1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "16") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "16") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "10") (term "0") (inst "quotient=quotient_14"))
                                    (rule "equal_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "qeq_literals" (formula "10") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,1,1"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_15"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "20") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "20") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,2,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,2,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_15") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "18") (term "0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_15") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "div_axiom" (formula "22") (term "0,1,0,1,0,0,0,0") (inst "quotient=quotient_16"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,2,0"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "26") (term "0,0,0,1,0,0,0,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0,1,2,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,2,0"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0,1,0,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "jdiv_axiom" (formula "24") (term "1,0,0,0,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,1,0,1") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_17"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "28") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "28") (term "1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "1,0,1,0,1") (ifseqformula "1"))
                                    (rule "mod_axiom" (formula "28") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "2,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,2,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,2,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,2,0"))
                                    (rule "mod_axiom" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_17") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_17") (inst "elimGcdRightDiv=Z(7(2(1(#))))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "div_axiom" (formula "30") (term "0,1,0,1,1,0") (inst "quotient=quotient_18"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "33") (term "0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                    (rule "applyEq" (formula "33") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                    (rule "mod_axiom" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "28") (term "0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_18") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "28") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "leq_literals" (formula "28") (term "0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_18") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "2"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "29"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "34") (term "0,1,1,0,0") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "1,0,0"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "33") (term "0,0,2,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "0,2,0"))
                                    (rule "add_zero_left" (formula "33") (term "2,0"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,0,1,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "27"))
                                    (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "div_axiom" (formula "32") (term "0,1,0,0") (inst "quotient=quotient_19"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                    (rule "jmod_axiom" (formula "35") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "elimGcdEq" (formula "35") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=jdiv(add(mul(quotient_19,
             Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         quotient_17),
     Z(6(5(2(#)))))") (inst "elimGcdRightDiv=mul(quotient_19, Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "30") (term "0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_19") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_19") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "2"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "31"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "30"))
                                    (rule "qeq_literals" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "30"))
                                    (rule "applyEqRigid" (formula "36") (term "0,0,0,0") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "jdiv_axiom" (formula "34") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_20"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "33") (term "0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "mul_literals" (formula "33") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "39"))
                                    (rule "add_literals" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "33"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "false_right" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "34"))
                                    (rule "greater_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "f_i ≤ -1 + quotient_3 * 256 FALSE"
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1"))
                                    (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "16"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcdRightDiv=quotient_4"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "12"))
                                    (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_literals" (formula "8") (term "0"))
                                    (rule "qeq_literals" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "applyEqRigid" (formula "10") (term "0,1,0,0,0") (ifseqformula "11"))
                                    (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "11"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "8"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
                                    (rule "greater_literals" (formula "13") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1,0"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "jdiv_axiom" (formula "15") (term "1,0,1,0,1,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "10") (term "0") (inst "quotient=quotient_7"))
                                    (rule "equal_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "qeq_literals" (formula "10") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,1,1"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEqRigid" (formula "11") (term "0,1,0,0,0") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_8"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "20") (term "1,0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,2,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,2,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "mod_axiom" (formula "20") (term "1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_8") (inst "elimGcdRightDiv=Z(7(6(7(2(3(#))))))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "18") (term "0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_8") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "div_axiom" (formula "22") (term "0,1,0,1,0,0,0,0") (inst "quotient=quotient_9"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,2,0"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_9") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_9") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "26") (term "0,0,0,1,0,1,2,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,2,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,2,0"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,0,1,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "26") (term "0,0,0,1,0,1,0,1") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "26") (term "0,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "26") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "jdiv_axiom" (formula "24") (term "1,0,0,0,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "25") (term "1,0,1,0,1") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_10"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "28") (term "1,0,1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "1,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "mod_axiom" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,2,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "2,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,2,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,2,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,2,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "mod_axiom" (formula "28") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "24") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_10") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_10") (inst "elimGcdRightDiv=Z(7(2(1(#))))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "div_axiom" (formula "30") (term "0,1,2,0") (inst "quotient=quotient_11"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "33") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "33") (term "0,1,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "2,0"))
                                    (rule "applyEqRigid" (formula "33") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                    (rule "mod_axiom" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_11") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "29") (term "0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                    (rule "mul_literals" (formula "29") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_11") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "29") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0"))
                                    (rule "leq_literals" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "applyEqRigid" (formula "35") (term "0,1,1,0,0") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0"))
                                    (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "29"))
                                    (rule "mul_literals" (formula "4") (term "1,1"))
                                    (rule "add_literals" (formula "4") (term "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "28"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "28"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "27"))
                                    (rule "applyEqRigid" (formula "33") (term "0,0,2,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "0,2,0"))
                                    (rule "add_zero_left" (formula "33") (term "2,0"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0") (ifseqformula "27"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "28"))
                                    (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "div_axiom" (formula "32") (term "0,1,0,0") (inst "quotient=quotient_12"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "35") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                    (rule "jmod_axiom" (formula "35") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "elimGcdEq" (formula "35") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=jdiv(add(mul(quotient_12,
             Z(neglit(6(9(2(7(6(9(4(9(2(4(#))))))))))))),
         quotient_10),
     Z(6(5(2(#)))))") (inst "elimGcdRightDiv=mul(quotient_12, Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "30") (term "0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_12") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_12") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "31"))
                                    (rule "qeq_literals" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "31"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "31"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "30"))
                                    (rule "applyEq" (formula "36") (term "0,0,0,0") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0"))
                                    (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "30"))
                                    (rule "mul_literals" (formula "36") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "jdiv_axiom" (formula "34") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                    (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_13"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "33") (term "0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "mul_literals" (formula "33") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcd=Z(6(5(2(#))))") (inst "elimGcdLeftDiv=quotient_13") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "leq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "33") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "39"))
                                    (rule "add_literals" (formula "33") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "33"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "false_right" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "34"))
                                    (rule "greater_literals" (formula "2") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                           (branch "CUT: unsign(moduloByte(jmod(f_i, 256))) = jmod(f_i, 256) FALSE"
                              (rule "hide_right" (formula "3") (userinteraction))
                              (rule "expand_inInt" (formula "1") (term "1"))
                              (rule "replace_int_MIN" (formula "1") (term "0,1,1"))
                              (rule "replace_int_MAX" (formula "1") (term "1,0,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "jmod_axiom" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "jmod_axiom" (formula "4") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "defOfunsign" (formula "3") (term "0"))
                              (rule "translateJavaAddInt" (formula "3") (term "1,0"))
                              (rule "translateJavaCastInt" (formula "3") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "expand_moduloByte" (formula "3") (term "2,0"))
                              (rule "replace_byte_RANGE" (formula "3") (term "1,1,2,0"))
                              (rule "replace_byte_MIN" (formula "3") (term "0,2,0"))
                              (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,2,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,2,0"))
                              (rule "polyMod_pullOut" (formula "3") (term "1,2,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,2,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,2,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,1,2,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,1,2,0"))
                              (rule "add_zero_right" (formula "3") (term "0,1,2,0"))
                              (rule "mod_axiom" (formula "3") (term "1,2,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,2,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,2,0"))
                              (rule "add_literals" (formula "3") (term "0,0,2,0"))
                              (rule "add_zero_left" (formula "3") (term "0,2,0"))
                              (rule "expand_moduloByte" (formula "3") (term "0,0,1,0"))
                              (rule "replace_byte_MIN" (formula "3") (term "0,0,0,1,0"))
                              (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,0,0,1,0"))
                              (rule "replace_byte_RANGE" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,1,0"))
                              (rule "polyMod_pullOut" (formula "3") (term "1,0,0,1,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "3") (term "0,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "3") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "3") (term "0,0,0,1,0"))
                              (rule "expand_moduloByte" (formula "3") (term "0,0,0"))
                              (rule "replace_byte_RANGE" (formula "3") (term "1,1,0,0,0"))
                              (rule "replace_byte_MIN" (formula "3") (term "0,0,0,0"))
                              (rule "replace_byte_HALFRANGE" (formula "3") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                              (rule "polyMod_pullOut" (formula "3") (term "0,0,0") (inst "polyDivCoeff=mul(jdiv(f_i, Z(6(5(2(#))))), Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                              (rule "mod_axiom" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                              (rule "expand_addJint" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "3") (term "1,0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0,1,0"))
                              (rule "replace_int_MIN" (formula "3") (term "0,1,0,1,0"))
                              (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,1,0"))
                              (rule "expand_moduloInteger" (formula "3") (term "1,0"))
                              (rule "replace_int_MIN" (formula "3") (term "0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "3") (term "0,0,1,1,0"))
                              (rule "replace_int_RANGE" (formula "3") (term "1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,1,1,0"))
                              (rule "mod_axiom" (formula "3") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0"))
                              (rule "polyMod_pullOut" (formula "3") (term "1,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                f_i),
            mul(div(add(Z(8(2(1(#)))), f_i),
                    Z(6(5(2(#))))),
                Z(neglit(6(5(2(#))))))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,1,1,0"))
                              (rule "add_zero_right" (formula "3") (term "0,1,1,0"))
                              (rule "polyMod_pullOut" (formula "3") (term "1,1,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0"))
                              (rule "mul_literals" (formula "3") (term "1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1,1,0"))
                              (rule "jdiv_axiom" (formula "3") (term "0,1,1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "1"))
                              (rule "div_axiom" (formula "4") (term "0,1,2,0") (inst "quotient=quotient_0"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "7") (term "0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1,1,0"))
                              (rule "applyEq" (formula "7") (term "0,1,2,0") (ifseqformula "1"))
                              (rule "polySimp_addComm0" (formula "7") (term "2,0"))
                              (rule "mod_axiom" (formula "7") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "leq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(8(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "div_axiom" (formula "5") (term "1") (inst "quotient=quotient_1"))
                              (rule "equal_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "qeq_literals" (formula "5") (term "0,1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1,1,1"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "polySimp_addComm1" (formula "7") (term "1"))
                              (rule "add_literals" (formula "7") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                              (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "5"))
                              (rule "polySimp_addComm0" (formula "12") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "11"))
                              (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "add_zero_left" (formula "7") (term "1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "12") (term "0,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "7"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "div_axiom" (formula "16") (term "0,1,1,0") (inst "quotient=quotient_2"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
    mul(quotient_2,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "leq_literals" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0"))
                              (rule "add_zero_right" (formula "8") (term "0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(neglit(7(0(6(8(8(3(8(#))))))))),
        mul(quotient_2,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(0(#)),
    mul(quotient_2,
        Z(neglit(6(1(2(7(7(7(6(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "add_zero_left" (formula "4") (term "1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "6"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                              (rule "mul_literals" (formula "16") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                              (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=add(add(Z(neglit(2(2(8(5(6(1(5(2(#)))))))))),
        mul(quotient_2,
            Z(neglit(6(1(2(7(7(7(6(1(#)))))))))))),
    quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                              (rule "leq_literals" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "10"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEqRigid" (formula "3") (term "0,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "21") (term "1,1"))
                              (rule "add_literals" (formula "21") (term "1"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "9"))
                              (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "5") (term "1,0,1"))
                              (rule "add_literals" (formula "5") (term "0,1"))
                              (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "15") (term "1,0,1"))
                              (rule "add_literals" (formula "15") (term "0,1"))
                              (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "4") (term "1,0,1"))
                              (rule "add_literals" (formula "4") (term "0,1"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,1") (ifseqformula "9"))
                              (rule "mul_literals" (formula "2") (term "1,0,1"))
                              (rule "add_literals" (formula "2") (term "0,1"))
                              (rule "applyEq" (formula "24") (term "0,1,0,0,1,0") (ifseqformula "9"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "24") (term "0,0,1,0"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                              (rule "leq_literals" (formula "20") (term "0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "ifthenelse_split" (formula "18") (term "0"))
                              (branch "f_i ≤ -1 + quotient_0 * 256 TRUE"
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "mul_literals" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "elimGcdEq" (formula "18") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "18"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                 (rule "add_literals" (formula "5") (term "0,1"))
                                 (rule "add_zero_left" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "5"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "1,0"))
                                 (rule "times_zero_1" (formula "11") (term "0"))
                                 (rule "leq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "10"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "f_i ≤ -1 + quotient_0 * 256 FALSE"
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "18"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "elimGcdEq" (formula "18") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "18"))
                                 (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "5"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "1,0"))
                                 (rule "times_zero_1" (formula "11") (term "0"))
                                 (rule "leq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "9"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                 (rule "add_literals" (formula "6") (term "0,1"))
                                 (rule "applyEqRigid" (formula "1") (term "0,1") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0"))
                                 (rule "add_literals" (formula "9") (term "0"))
                                 (rule "leq_literals" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                           )
                        )
                        (branch " 0 < 〈(byte)(javaMod(javaDivInt(javaDivInt(javaDivInt(f_i, 256), 256), 256), 256))〉.length FALSE"
                           (builtin "One Step Simplification" (formula "2"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (builtin "One Step Simplification" (formula "6"))
                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                           (rule "closeTrue" (formula "5"))
                        )
                     )
                     (branch " 0 < 〈(byte)(javaMod(javaDivInt(javaDivInt(f_i, 256), 256), 256))〉.length FALSE"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "5"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                        (rule "closeTrue" (formula "4"))
                     )
                  )
               )
               (branch "0 < 〈(byte)(javaMod(javaDivInt(f_i, 256), 256))〉.length FALSE"
                  (builtin "One Step Simplification" (formula "3"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "expand_inInt" (formula "1") (term "1"))
                  (rule "sub_literals" (formula "3") (term "1,0,1,0,1,1,0"))
                  (rule "less_literals" (formula "2"))
                  (rule "closeTrue" (formula "2"))
               )
            )
         )
      )
   )
)
)

}
