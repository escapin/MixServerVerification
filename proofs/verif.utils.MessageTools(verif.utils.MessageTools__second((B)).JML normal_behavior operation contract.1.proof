\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Dec 18 14:49:26 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Dec 18 14:49:26 CET 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.1
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.1
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))

(autoModeTime "450")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "in,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "translateJavaAddInt" (formula "5") (term "1,0") (userinteraction))
(builtin "Evaluate Query" (formula "5") (term "1,1,0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
(rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "1,1,0") (userinteraction))
(rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,in)__0" (formula "6") (term "0,1") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "queryResult") (userinteraction))
(builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_byteArrayToInt,result_0,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
(branch "Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "assignment" (formula "8") (term "1") (userinteraction))
   (rule "methodCallEmpty" (formula "8") (term "1,1") (userinteraction))
   (rule "emptyModality" (formula "8") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "8"))
   (rule "notRight" (formula "8") (userinteraction))
   (rule "eqSymm" (formula "1") (userinteraction))
   (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1") (userinteraction))
   (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "1") (userinteraction))
   (rule "assignment" (formula "10") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "10"))
   (rule "eqSymm" (formula "1"))
   (rule "eqSymm" (formula "8"))
   (rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "eqSeqEmpty" (formula "10") (term "0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "6") (term "0,0,1"))
   (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "1"))
   (rule "applyEq" (formula "8") (term "1") (ifseqformula "1"))
   (rule "applyEq" (formula "6") (term "0,1,0,0,0") (ifseqformula "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1"))
   (rule "mul_literals" (formula "6") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0"))
   (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
   (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "2") (ifseqformula "9"))
   (rule "array2seqDef" (formula "10") (term "0,0,0,0,0,0,1") (inst "u=u"))
   (rule "lenOfSeqDef" (formula "10") (term "0,0,0,0,0,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "polySimp_elimSub" (formula "10") (term "0,1,0,0,0,0,1"))
   (rule "times_zero_2" (formula "10") (term "1,0,1,0,0,0,0,1"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,1"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0,1"))
   (rule "commute_or" (formula "6"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_second,savedHeapBefore_second,_inBefore_second"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "len"))
   (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_byteArrayToInt_0,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
   (branch "Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "eqSymm" (formula "10"))
      (rule "assignment" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "2") (ifseqformula "11"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
      (rule "eqSymm" (formula "10"))
      (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "10"))
      (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
      (rule "compound_assignment_5_nonsimple" (formula "12") (term "1"))
      (rule "ifElseUnfold" (formula "12") (term "1") (inst "#boolv=x_1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
      (rule "less_than_comparison_simple" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1,0"))
      (rule "arrayLengthNotNegative" (formula "5") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
      (rule "leq_literals" (formula "5") (term "0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "arrayLengthIsAShort" (formula "5") (term "0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "ifElseSplit" (formula "12"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "ifEnterThen" (formula "12") (term "1"))
         (rule "assignment" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "returnUnfold" (formula "12") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_5"))
         (rule "arrayCreation" (formula "12") (term "1") (inst "#v0=x_arr_6"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_6"))
         (rule "arrayCreation" (formula "12") (term "1") (inst "#v0=x_arr_7"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_7"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "dim0_1"))
         (rule "assignment" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_6"))
         (rule "less_than_comparison_simple" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "less_literals" (formula "12") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "ifSplit" (formula "12"))
         (branch "if x_6 true"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_6 false"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=x_arr_8"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_8"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "length_3"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<createArray>_0,savedHeapBefore_<createArray>_0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "newObject_1"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=x_arr_9"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_9"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "length_4"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "allocateInstanceWithLength" (formula "12"))
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "2"))
            (rule "notLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "blockEmpty" (formula "16") (term "1"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthIsAShort" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "methodCall" (formula "16") (term "1"))
            (branch "Normal Execution (newObject_1 != null )"
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
               (rule "false_right" (formula "16"))
               (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<createArrayHelper>_0,savedHeapBefore_<createArrayHelper>_0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "assignment_write_attribute_this" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallWithinClass" (formula "16") (term "1"))
               (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "arrayInitialisation" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_elimSub" (formula "16") (term "2,1,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,2,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "16") (term "2,1,0,1,0"))
               (rule "applyEq" (formula "16") (term "1,2,1,0,1,0") (ifseqformula "1"))
               (rule "add_zero_right" (formula "16") (term "2,1,0,1,0"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "assignment_write_attribute_this" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallReturnIgnoreResult" (formula "16") (term "1"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "methodCallReturn" (formula "16") (term "1"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "tryReturn" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallReturn" (formula "16") (term "1"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
               (rule "tryEmpty" (formula "16") (term "1"))
               (rule "emptyModality" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
               (rule "allRight" (formula "16") (inst "sk=f_1"))
               (rule "allRight" (formula "16") (inst "sk=o_1"))
               (rule "orRight" (formula "16"))
               (rule "eqSymm" (formula "17"))
               (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_1_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "18"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
               (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_5"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_and" (formula "6") (term "0,0"))
               (rule "commute_and" (formula "4") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "commute_and" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
               (rule "inEqSimp_and_contradInEq1" (formula "5") (term "0,1,0,0,0"))
               (rule "qeq_literals" (formula "5") (term "1,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "f_1 = java.lang.Object::<created> ∧ o_1 = x_arr_9 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "1"))
                  (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "9"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "eqSymm" (formula "19"))
                  (rule "close" (formula "19") (ifseqformula "1"))
               )
               (branch "f_1 = java.lang.Object::<created> ∧ o_1 = x_arr_9 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_1 = java.lang.Object::<transient> ∧ o_1 = x_arr_9 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "notRight" (formula "22"))
                     (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "11"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "20"))
                     (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "16") (ifseqformula "1"))
                  )
                  (branch "f_1 = java.lang.Object::<transient> ∧ o_1 = x_arr_9 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " f_1 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_1 = x_arr_9 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEq" (formula "21") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "notRight" (formula "21"))
                        (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "22"))
                        (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "false_right" (formula "17"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "19"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4"))
                        (rule "close" (formula "18") (ifseqformula "4"))
                     )
                     (branch " f_1 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_1 = x_arr_9 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = x_arr_9 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "notRight" (formula "20"))
                           (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "close" (formula "17") (ifseqformula "3"))
                        )
                        (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = x_arr_9 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (newObject_1 = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "mul_literals" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
         (rule "leq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "compound_greater_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
         (rule "remove_parentheses_right" (formula "13") (term "1"))
         (rule "compound_subtraction_1" (formula "13") (term "1") (inst "#v=x_4"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "13") (term "1"))
         (branch "Normal Execution (_in != null)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
            (rule "false_right" (formula "13"))
            (rule "assignmentSubtractionInt" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "translateJavaSubInt" (formula "13") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "13") (term "0,1,0"))
            (rule "mul_literals" (formula "13") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
            (rule "greater_than_comparison_simple" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0"))
            (rule "replace_known_left" (formula "13") (term "0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "ifSplit" (formula "13"))
            (branch "if x true"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "returnUnfold" (formula "13") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "13") (term "1"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr"))
               (rule "arrayCreation" (formula "13") (term "1") (inst "#v0=x_arr_1"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_1"))
               (rule "arrayCreation" (formula "13") (term "1") (inst "#v0=x_arr_2"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_2"))
               (rule "variableDeclarationAssign" (formula "13") (term "1"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "dim0"))
               (rule "assignment" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_5"))
               (rule "less_than_comparison_simple" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "ifSplit" (formula "13"))
               (branch "if x_5 true"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_5 false"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=x_arr_3"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_3"))
                  (rule "variableDeclarationAssign" (formula "13") (term "1"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_1"))
                  (rule "assignment" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "newObject"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=x_arr_4"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_4"))
                  (rule "variableDeclarationAssign" (formula "13") (term "1"))
                  (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_2"))
                  (rule "assignment" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "allocateInstanceWithLength" (formula "13"))
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "methodCall" (formula "17") (term "1"))
                  (branch "Normal Execution (newObject != null )"
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
                     (rule "false_right" (formula "17"))
                     (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallWithinClass" (formula "17") (term "1"))
                     (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "arrayInitialisation" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "polySimp_elimSub" (formula "17") (term "2,1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,2,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "2,1,0,1,0"))
                     (rule "applyEq" (formula "17") (term "1,2,1,0,1,0") (ifseqformula "1"))
                     (rule "add_literals" (formula "17") (term "2,1,0,1,0"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "methodCallReturn" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "tryReturn" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallReturn" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "tryEmpty" (formula "17") (term "1"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
                     (rule "allRight" (formula "17") (inst "sk=f_0"))
                     (rule "allRight" (formula "17") (inst "sk=o_0"))
                     (rule "orRight" (formula "17"))
                     (rule "eqSymm" (formula "18"))
                     (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "19"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
                     (rule "inEqSimp_and_contradInEq1" (formula "5") (term "0,1,0,0,0"))
                     (rule "qeq_literals" (formula "5") (term "1,0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = x_arr_4 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "notRight" (formula "22"))
                        (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "20"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "18") (ifseqformula "3"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = x_arr_4 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = x_arr_4 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "notRight" (formula "21"))
                           (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "applyEqRigid" (formula "21") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "21"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "17") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = x_arr_4 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = x_arr_4 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "applyEq" (formula "22") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "notRight" (formula "22"))
                              (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "notRight" (formula "22"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "4"))
                              (rule "close" (formula "19") (ifseqformula "4"))
                           )
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = x_arr_4 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = x_arr_4 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "false_right" (formula "16"))
                                 (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "false_right" (formula "16"))
                                 (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "notRight" (formula "19"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "17") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = x_arr_4 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (newObject = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "if x false"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_in = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "12") (ifseqformula "11"))
   )
   (branch "Pre (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "5")) (ifInst ""  (formula "9")) (ifInst ""  (formula "2")) (ifInst ""  (formula "9")) (ifInst ""  (formula "3")))
      (rule "closeTrue" (formula "10"))
   )
)
(branch "Exceptional Post (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "9") (ifseqformula "8"))
)
(branch "Pre (byteArrayToInt)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")) (ifInst ""  (formula "7")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")))
   (rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
   (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")))
   (rule "closeFalse" (formula "2"))
)
)

}
